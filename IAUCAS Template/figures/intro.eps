%!PS-Adobe-3.0 EPSF-3.0
%%Title: (intro.pdf)
%%Version: 1 5
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 20:57:51 03/16/12
%%For: (dell)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 737 308
%%HiResBoundingBox: 0.0 0.0 737.25 308.25
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3676 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-03-16T20:57:51+08:00</xap:CreateDate>
         <xap:ModifyDate>2012-03-16T20:57:51+08:00</xap:ModifyDate>
         <xap:MetadataDate>2012-03-16T20:57:51+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:BDF958A3676FE1118D679BA14FE4EB32</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:BDF958A3676FE1118D679BA14FE4EB32</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:description>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>dell</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Keywords/>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 737.25 308.25 rectclip
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (SVNBAA+#cb#ce#cc#e5)
%%Title: (SVNBAA+#cb#ce#cc#e5 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /SVNBAA+#cb#ce#cc#e5 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -145 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28762 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /SVNBAA+#cb#ce#cc#e5-Identity-H /Identity-H 0 [/SVNBAA+#cb#ce#cc#e5] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N6 (SVNBAA+#cb#ce#cc#e5-Identity-H)
/N6 (SVNBAA+#cb#ce#cc#e5-Identity-H) /Identity-H [ (SVNBAA+#cb#ce#cc#e5) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%ADOBeginSubsetFont: KQBAAA+@#cb#ce#cc#e5-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KQBAAA+@#cb#ce#cc#e5)
%%Title: (KQBAAA+@#cb#ce#cc#e5 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KQBAAA+@#cb#ce#cc#e5 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -145 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28762 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KQBAAA+@#cb#ce#cc#e5-Identity-H /Identity-H 0 [/KQBAAA+@#cb#ce#cc#e5] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N11 (KQBAAA+@#cb#ce#cc#e5-Identity-H)
/N11 (KQBAAA+@#cb#ce#cc#e5-Identity-H) /Identity-H [ (KQBAAA+@#cb#ce#cc#e5) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
q
0.0 0.0 m
737.25 0.0 l
737.25 308.25 l
0.0 308.25 l
h
W
n
q
n
0.72 1.7284 734.71 305.8 re
eoclip
n
10.204 0.0 0.0 4.2472 0.72 1.7285 cm
q
0.13061 0.0 0.0 0.31269 0.0 0.0 cm
0.0 0.0 551.24 230.26 re
W
n
q
0.75075 w
1 j
[0.75075 0.75075 ] 0.0 d
n
233.63 120.38 124.5 102.0 re
[/DeviceGray] cs 0.0 sc
S
Q
[/DeviceGray] cs 0.0 sc
267.63 205.63 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 4 GetGlyphDirectory
19246 <001C60D8A8C9B5EE3100AE8F7931A80FAD704B44082C142FBCBA829E0
F8319D714E85A9DBC40A14FF6F26A2E67AD92BCFBFB28AD56656CE4E83EC107A
278FF209C4BE840D9A728C7A3EB03628A86AA94499000BDBCBE4A5EF7EE8DE1F
2CC8A319A9398B6E07094BBA7E0AF6A1C0D01092BAB30E2124AC3AEF5D961772
90B5DBE0318FF1D7771096160ED8E5C1E968BC1F6EDA7827E1DA6524A64EA9F8
07E54236A297228C638DA8397AEE3C1AD1DB6F7281AED6E81BF469A1BF1B5E25
F10A0F8D47F975478C2DDA0D95E401D26876083EA51F14189B4FF62E422D89B8
0639951A8E2F66A68C3E68E2FF7B0B7C95546FB00E5D042722523C2BE97298AB
DD2214CD6E1858C143EDB0AF5F4B7299D36D39D08423B3C989AD1E6AF4AC439D
70E72308FD43FA95014E3495DC742AB6DBDAA6974C5D840E20D8E5E9D5695CFE
222DA57739733DC70934EAD473639D301E75A135637999F03902CD2166D2813F
33D2601277A575CB6F8FFE26BAFFC4C946EE234B050B8FED486A697B2264F8F7
A0C205F04CCA391D0939E969DBD22F9A3D4F63F77277F8D07AE9C252CF8AC50B
DEACB1E7A7A0E> |
6613 <001C60D8A8C9B5EE31020F8CAE4E8F093E11044D2392B4368372FAB14F
16FCB2247606035753BC9CC4F4B6D343A357C789FFC6C6F4772D6B2E535CA4F2
201CB0D5B2D37C8CE249564A734198B0DF2AFE1B1A467267962B6A7B7DF18A4E
782D6973C90D9E18913776B0E92A4C0F2EA18E06C7C4CEE224E91C1A7AC3E5E5
30A12A60C6CA39DE8DB4B724DDD5491E4408B4F90F1FE17F4F04DE71E4440D37
9D7CB58ADE3D06634242558847460041C56EC60C98666AEAAC87F4274CE6BB60
1087CF73B1BCD5AEB398747D745CC048D33BBBA930244755BBF8F01678E4B9A8
291347611936502AA0E9C1D61F3824B9C755FFE04E7A61AD712DF9980B8DB8C9
5BF7BEBE41375298F0201F881D056CF327FBDCC51C72909B9DF8A53A7D73DAB7
ABBE9EEA014F8B420135971F9F51676BB86B775B3529E7ECD6E6B3B59C43660B
B05C4ECD5F1D5199EB2572E9AA88FF290DBCFB14EE131D6181CD9353754D893A
A55169D25C8A897C2DEE7906296854B1D196A4A65C069F5CD1C70A45216DA802
D00659718ED7AC7F5AD1A3C3D6DF672B3E90B001F9FBB84A3DE2336B12E91D9A
539E0147A85AD1031F60DB0EF7ED> |
2102 <001C60D8A8C9B5EE310D75AF63B60288AFC61718C33D937C59FD52C538
7DC7497B6D961E924C0723F9F2C7A352A60CDED69064A807898C9B82A10DF7C8
4BE9E85C7E11251DAE2CCCCCA39C0902B6ED2A9D08555E5B8ADE170FB8DF9D44
4F6043448B4A1A12F34FA04ACB2DF263A90F791B982F46D3A61EE8505B1C19AB
7B2B27E3D8AEC8D76F151EC1EF4FD20D6836CF37F54DA4E433A99E550D2ED9EE
84FAE7A3AA18A4809B889CE608E73D86F8EDB994C99D549F4DB068C5FA9B3D4A
613D66081524D82816BEE8592D18BFE96E2F2A> |
7616 <001C60D8A8C9B5EE31035E94EF5B26C5A31CD4C56DD5BD83D21747A4EE
DCF4FFFB6011522F163C7FD71539F079D2690AFCC676156517C3A10D88FBED8D
4D8C153B734049C45C60E432FAB3490CE60AD0F2FB14194DC6C1122FD086FD03
4AB03B0639554B259AF5D6D8F4D6A4FFD22F10FDFCD4AF49C80D372DC8103B79
B5206236E40ECEAD5F6E67FB58DBFDDA3D506043D08369F963B218156D40AC86
9EF851D11D99280E9D1DC5EF228945CCD4A32C408C7BA7E69C50D1401883C66B
6A5F1B0E922DEB3AA9D412BAE7082BE65E6B0EC54EE9550459BE6BCA24FB5953
5DFDF1281CB2DB1DE7159423A64F76BF2B3A63> |
!
end
end end
%ADOEndSubsetFont
/N6 14.3 Tf
(K.\031\325\b6\035\300)
[14.2749 14.2749 14.2749 14.2749 ] pdfxs
0.75075 w
1 j
n
103.13 199.88 90.75 24.0 re
S
119.77 207.21 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 4 GetGlyphDirectory
7072 <001C60D8A8C9B5EE31020F8211AF203B409BE69AC0B688D9C4195CDEA8
97FCB81008D07B0C8CD3987DFEB80552CE66A0F34764E7CCAD83482FDA763BC2
41DFE244CA631BE121BA74D14ED08827BED5CF7FDAD9916120290F16594139B5
87175DC6F08A0BABBEEE5F647C28158015A008DC1DED403CCBF0FDC3D256E22A
62A8381F4EC6E8001982C77B4456950D9D8684E2B3A3C0EA1106A026F41E519D
596D271B8CEC4BFA34C3299867C3E65F0D7214BE60EB0DF907C505FE0A791881
BDCE4D1D631A40EBC55AED0E476CD247D92F7DE48CA3B3DCB28F0BB9D74D1FF3
94BE5C10CC13FD408277E3305AE4C1122644B93559435C495C84191A30AF2943
4613EF254B1CBF195384D603AC4E610E6F7A1046F69EAF04F12C503AD9F76BA9
5DE9DCCF38A41FEA697757061E522473505393D2125085D27ED5A972610ABB6C
F8A855BCC7A4A3FE08FC5C47728B23FAC99B0CDA3CE14C6595D6B35F7EEDC6CB
45C8E1858F68BB5242A307E22A31F84F08968825C60FE3E6A7873A483019AE41
780D8F81A778AEE3D504A7BEE4C8C582073B7040E146115DD63CE7E38B840BA3
A7568C10524B2A76C6D0CA56DA683BE6572146A80FDB76D8F05B487235B33877
DF9B297543FCFEDFC262AD5446DAE1> |
6558 <001C60D8A8C9B5EE3102820D8DA70742F33093955F3A403ABF3E984BF7
3C34AFC477CD7E8D31E9297BC95839049736E8D192ACE783D6FB102FC4AEF6AE
6E4498D4622A48F5C3AD21A8B778288E325ED416007AC15FB079436F7AFF4AD0
9EE54CE6E425501067D5F51CF4A3C087CC8B7C525F962D1300858FCB0DD58FEE
762EA44D7EB1F91B8CF9A83797EEBB5767B0667DF5C71EF07E9C361D3E5F3105
BB54EE37E7272BBB5CFCE4FE6E8AA22D4D2D2B0A040738F59DF6C77A0794169C
B580FBB89E535EE5972FC1310D16AC93ACF456204BDC07FD1A36484FB6A60F8C
417998FC954862DD066C5A04C92B53C81EBBA7A2CA2A34D959F4DD9D1DD3752E
A8AB61FF9E5E076107B9F7FB34B41EE2ADCB4CE185FB348126823B1DEE8A8F6C
319FA0C33052ECF010305BC10DBAB461290B82DD368F9C088C1DC366BF9F0DB7
CA> |
7014 <001C60D8A8C9B5EE310375B7D5798AC28F81D332C18F23156640CC3FDF
58C800409A4167C0DB2906D03D1E7DFD5431FACD8D086DE88F4605802FEE6F33
25C6AE2920FCE9987EC66ABCE2A918B5A3B974899F4B25072FBB0A1BC35D14A0
0B60BCB0167A18D7AB7D3323FD71AC9A6D4DCD5DA42602E78924AFAAD39679A3
5D66AB707BC569BE6127A1E01091489CC035FF9098C7B16EE90D4C6423594C09
0B5DB31632FBC94F0C2C84D4EF83B98528263354F1236053FBF9AD964A5DC501
13EF24F890EC4177DEC7CED455EC47FC5910E3553E23F1B00EC39345F365D385
A5> |
19702 <001C60D8A8C9B5EE3102B97204FDC645ACD0C64690BECF2529FBDD9E0
46623CE5105FC561079999C8C15922971B87944E52FA499CA348D7D3F8D473FF
B026F571742748A84E4091E325B146054756B9FC96038727815C4A237899F38C
6B7136CC6C536A8CCFA8E95783E7FFC8FFA88335E989F13842D52536CA8A15D7
C36237E0ECE785A18EACD4B9930A3C4E3A9E34E38B513BACE6D2B064593A46D5
BB38EE0CA34E98086349210A5AAC32A44606761EAD1A3FC19B1843E0F7303C4C
5E2465B7FDE84B5DAE67974E689EAC72705AE16315FE8E456D97D9FD7999E053
AB3FBE754066E78AEF5EDC49F81B78034574EFC0743FB55571F8E21C9F2E65BA
5AABD027BCAA2E65280AF3E6149699E0C1E2C853D837CEA7A8CF7E4F23BB191B
54AE98DBD4D20AF92899DE9A410FFA1D905EF83F42DFCFC5B99720AAAFF905BB
069> |
!
end
end end
%ADOEndSubsetFont
(\033\240\031\236\033fL\366)
[14.2749 14.2749 14.2749 14.2749 ] pdfxs
n
63.375 224.16 m
63.375 221.42 49.44 219.19 32.25 219.19 c
15.06 219.19 1.125 221.42 1.125 224.16 c
1.125 224.16 1.125 224.16 1.125 224.16 c
1.125 224.16 l
1.1251 226.91 15.06 229.13 32.25 229.13 c
49.44 229.13 63.375 226.91 63.375 224.16 c
63.375 224.16 63.375 224.16 63.375 224.16 c
63.375 224.16 l
63.375 194.35 l
63.375 194.35 l
63.375 191.61 49.44 189.38 32.25 189.38 c
15.06 189.38 1.125 191.61 1.125 194.35 c
1.125 194.35 1.125 194.35 1.125 194.35 c
1.125 194.35 l
1.125 224.16 l
S
10.75 200.63 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 1 GetGlyphDirectory
5315 <001C60D8A8C9B5EE3100AE813BA6B9A6B5D510A62D3969375E441B9819
978EF569CC17803D6E382616AF639EBCEF6205582E08A6EA750D1255B0FBB65B
9C79EA18BA8B33E986B3896561B36A61B2CD48F57357E29BA69637D838A2EDE8
0E78389634380D185EE131A468840D16810B22E4CA74C9D6625661A3F1986E27
DD12CF40C1084664C7D5F9CF239195F77EE918C74878305BB91645517A88A010
FDFA65025A09D25DBD1644E9FD0AC941EC2F22DD2E953494208DAE3E11CD105F
1A3229949894E3F8187CFB4F90856E823132829C9DB9743A6DF7EB154638CD71
5946EE64E24272D90A3D6657BDD917F68D5AACEB330C8384162F9E8166DF43A7
CFB5DACEFDAD7FD28E58E9> |
!
end
end end
%ADOEndSubsetFont
(\033\240\031\236\024\303)
[14.25 14.25 14.25 ] pdfxs
n
103.13 141.38 90.75 24.0 re
S
126.55 148.76 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 3 GetGlyphDirectory
20148 <001C60D8A8C9B5EE310D0EB37440EB625CA69B03C2F5799E0AC850594
09842C7F56CC775188C12758654986A6B928185822D794D6C1F3796196A451CD
0AA4B2C266F140238E78B71A1CE480B1B73C56E50BA9690A6E0CA920DBE1D9C5
C7336655EABC54E633EAA371B425565A8F9601F3CE1E822B6E6BD1564AE9A27C
C2EB695A2CDE337973E9EA4AC73A44729AC2AAB47EA743D3C15FB1A98C6B056E
0CACF1435A77E0A5B4C5C2ECC82C05DEB28041CEB9BD5F0B2C6812964421FDF1
5ECCEF0B985EF652807FB235E74DF907D989FAA605D12EEEA000725892329821
5794DDE5C8364C83FD66CA70F9C98A07F2693C6B8843430D429CBF8AAED785B4
EC113A0C8F71246EAC785F616A3D45C1F3B855E9973522694581BAC45EEEBCA6
4007D4372D4DB4B856C7C3D75A4E03488A3D26806A6774374839D8129D12708D
B53A08A3102522175F294755840E19F1C6B3AC98FA8BE447895723773F36D39A
8156A468D3F677675A0A08DE4BD> |
3892 <001C60D8A8C9B5EE3102603E2E58CA84251A9593169BED5D4BF3DB54BE
3D43A79B11F54EB16315E7B49B8241064FA5EE5FF77503D2BC0D604E707579BB
52706A1736343C2D8F3BF7EB8A202BE8A463FB7D58A7C957B5CF85B1FDB7541C
C2B9B69B604A1CA1BE97F6A555135B5D22995BC18D24C3E85A33DCD06CA93A8E
EC56249454C3E74C2BD12E59D0871686248EE3F9EB9D0F2D619CD683A9F01848
6940FCD222A3DB9D6E191F22E1E75B8AF056EB974C99F477F7B3FFD621D26DF9
25EFCCE77CB491E37628A50E24DBD10D744D2A16883A831CD77F7B3F1BDBDB7F
F0D1D9F91108EE7EE0D73B8DDC243A840B7AA03AA5C5CF90B89C8BC780AFB6DC
AEF10BA838D79623745F> |
10806 <001C60D8A8C9B5EE3117BF1EBEBB6E3E493A793D66AA7DAA743C82C33
55C5D1F6B001A92061E582E44D7620DF16AA56F4543D22FDABFA64E2D4386561
3DCA8323A76FB4CA959A7A012F8524B914769BD5D382FBCFB5AE5996191155CB
0EC1E04CF57402F96836768F0170490F31AF54EC6CA4E91E81F6897610001BE4
3269228E4E9DB9D6532266E2B082D6F25FBC399D2DF80DB3E0A6FBBF43B11EE7
45F2DA5B13C7B5D51867B87CB6EC76F9187BE7080587580C3F4A04D39CB136D8
B069D0EA9B6EB0298EFC0730EA67AC64E453E32C631F08C7B6BC99235AE2F42F
D7F0CC4FAE01115BF29207B663ADFA3F08DAB12AA4B5C7B728301A4E84266250
7F2FA4C7708C9F5610FDBA23F3EFF4028255E11B5938D2F82> |
!
end
end end
%ADOEndSubsetFont
(N\264\0174*6)
[14.2749 14.2749 14.2749 ] pdfxs
n
103.13 80.631 90.75 24.0 re
S
119.77 87.731 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 2 GetGlyphDirectory
6381 <001C60D8A8C9B5EE3100BADBB5200A4E7F7535DB0F3528EA9C625C0F4E
432A04245A7BF6008E61FB5FEE545DEC03BAA4E559A15AB419C46094D2941F9C
8E16A5F1D9D2E170B32D01F8734DEFA4CDCAC84E208EEEEED564178EB8E730CF
8991C8C1865023DBF936B05EFA388395CDC48ECE3B78A5996ADAE06E015A94F9
FDB4ED41CDCC5875DA4B1AD77459DF591DDB1F22A60B9A322AE73FEE8423CBAE
CACAF083E9AF0028C1FAB975B51D8BAF404F958345599DEEAB61098CD5DFE118
073C4172B2223A5E23B0728E3EC92F8649E2B5E7FDAFCF8BFF63A5E744E61FB6
4BB860909E5849C1EE2BE80EFA5F1E969E7FFC3A5F2A4BD96CB61A39AEDC> |
2566 <001C60D8A8C9B5EE31023EAC3A51772F16EC49C5B0AE161A8317B2C8AE
28E7115B2D09A7021EF68112A081E276A063553B316D1D21197083357CA70D57
69B0C97F1CFE68A64CE7A2A2126D315232ED16C465979C89B1D1653000290DAD
09DA739754AB159DA564D4D9D01BD6136AC10EE9486FFE0D2617161DAA81A8D2
506061125508252E50FBA5EE841298A3E3439177F940E4D8C1F613F58B468CF5
FB4FE401BAC83E333CEDC2A6D93A73B9F0469FB821CE1AA7429E4A4C13801D47
4554E4B16F410F7D955E930D051496418BCD4CEAA8E186FCE61B6B9A030DE3CD
0545E66D088FEFBD9D7E1CACFBCB> |
!
end
end end
%ADOEndSubsetFont
(\033\240\031\236\030\355\n\006)
[14.2749 14.2749 14.2749 14.2749 ] pdfxs
n
245.63 130.13 102.0 24.0 re
S
253.35 137.38 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 6 GetGlyphDirectory
4013 <001C60D8A8C9B5EE3102B16D4E4B982AC0410A2F04E5A8640A5E676CA8
EEC12C085D09F24ACDC91054C311489994C5BC00EDE723AD17D58A68441E99AC
BCE0996741F84A2B153CC61927B8446CEC45C3443B28B0887F63CC545B286366
2726E3E744C7A3185FC07EC1FD404D89D6520A8DA6192BBDE02AE1E3A8AA504E
8C9458296604E9FDCFAB6823F266B0EEE9EE37F11272D5B0319E75DAB527D449
0910A10A5FA9FF8174BA076A5135C9BB6A04781D1FEF3814EA4F68986A23190E
2719B4A4FC91F62BEEE243A290459C710CD46A0023551649E36DBE2D75676BAC
04F4144707C1B41426B3733E95C98F9EE8A8A193ACBB4AF62AD23C468C175E74
F156B1E765FC9986EF01F2673A70C2D992BC07FB989D593371001E9F> |
2555 <001C60D8A8C9B5EE3117D8EAB2FA5790D742755FD5EDCEAA65514D9875
B867DCD39CC475929AA31D761B43FCDA8C5D6AF476AE86A317A205BB000FF9A7
31535D694833AB772CCBCC0113C4FF4EDA8D2B17E2431CE179CBA0AE66ECC6DF
63A7B6B37AB930FB6A20F43E94AA209FFEB23CCD6E67B1CBD9408DD9E9DB6223
8DB6544A04D1F5FEE53C256CF9F8B65233727AD8FF71FC5FBCD4BA1E9BAC8E5F
F154EE8D70E088F0AE680751D465FBB61AE8BD81AAE4F07E398BEC6BDEA7EAB0
55947C38F2> |
1955 <001C60D8A8C9B5EE310234B2B9FE841B87C393C14B6A316D01A814591D
824188334A9F09D58A6FBCE651D9803996ED72BB14AD0DADD49E486051945DDC
810AF3B2B4830BC4D6D8C223BBF82F70042C5C3298F0C901ABBAF74C3DEED665
8BF1440E0A8EAAF776B79822075B959DB7E7CC7E6AF02A0CEA2ED662B921B9CC
EA3E7181679B0EA1E458D43C71BCB2BDDFC523671A23121986E1BECFCFC4CC27
42770F5EEE7D236E2328D7BA3BD3C4CCDA8F13C6F8C0DD6DC7628896B8451189
F4E94A44F62014C60498D132ED09DDAEC0714899C8A94707A7A146B612F1> |
13099 <001C60D8A8C9B5EE3103318D4E0E07767E920E378DCFD842FC552FE32
01F74DF10A12211080BC706009080F1081889EB3DFD9810151F53830ABFD247C
1077B3C80309E3E6D0698E01D17B80F52F37B610B463E71C8573291D79CE3355
D73FE8E7B0B5F3635C419A238CA241CDE3298999D55D42D690AAEF7F030A0292
31BF15AAB28B7D948FCA10171C6D41E0988CD686C1FE81A0B3344C4F882F4F73
CE83D6B4EFA9D2CF0E22D0833A419E9A3685F963786C755821A6DFC37DB41E7F
A4BE82AECCD6928E0D17D7B38EEF07B4879321B5CE90163B320C6ED9DE7FDDCF
B7D092ADAFE52EFA484C2FFAAC0397769EFA0D74A3195111863A61565DD69D12
DAA66734342BA9596B81493E338214835EE93D561F13FF18639E5B77BC1A2378
8029B9AA028BE0BBE48EC9A698362271F5D2BE93ABCC87F1092D0E06AA1F607A
27679B693E07F2AD574BCED2B3EBEF4CC0D584C8D310E3B618D92E3B4> |
2561 <001C60D8A8C9B5EE310D5F626582F690C1537AF60C4A79A70114D00F88
B5B5F5F4EE181EA5343DDAD76EF93A4F9AC317DB9E343ABC3AD173446D9FFF3F
1F269B5D1A584687EF5040E2C8C4F2C4AC2B205D7DC1B61F893B249F6CC10C4F
8E3DD8A0024E70B513AFC3B7C90CF2D114BAC991FEA151B36E6ABE055EB1FA68
6C53DDFA35FCB53A77C6CC113636E6E20DB2ED15F955D4270C782C3B77014A1C
B886EFC3577E150129BC49E7C3E44C434E63B31A309B17CBEA2D7227CA7080F1
4D6346D7DC753F9797204C8F828E71BDA816F3E674C277F6BF315CA7EF37357F
FA12AE590E26329121C46F997A69A9C16633B7061B6058A1E83947689B98236C
375634A6AFA236112D> |
10720 <001C60D8A8C9B5EE3102B1E1976BB9ED6545AFEF6F7883B2565867AB7
8BA13F2322FE87DD43E722F098251D656C323D3237E6595744292234BC9C5AF1
2FB79F1ED4EF682BD8FD43BBFD0AEB4FF366E52FDA5E33268A3BCA0A2D694D21
A06DC1F997327228A0D5B92302B1B5C5AB229371E40496A88BF66695721E165E
DF4A75FE67C34DCE6705F7CC7E5DF3247F794CFF0946948538352FF0A7BC7C24
8166808F622F4C078CE7998000147E947CFEF37064E6E98B47823413D2748EC9
DEC015CED07F3E302D68FFF63BF9F33AB6BD65DBFEA37D08E04FE530B66977EA
49AF9DBEE7BA011DB146BAAA503F6976278245B5A62AFD1795B4735F2AACE395
9F0E204B1BCF55E3035393DFE08C1ADE281FCDDB620> |
!
end
end end
%ADOEndSubsetFont
(\017\255\t\373\007\2433+\n\001\)\340)
[14.2749 14.2749 14.2749 14.2749 14.2749 14.2749 ] pdfxs
n
245.63 169.88 102.0 24.0 re
S
253.35 177.21 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 4 GetGlyphDirectory
7735 <001C60D8A8C9B5EE31038D5D1282FB89803D0087920CA8DCC3E5AFABBC
F7429D831100F27506BB16F9E1F042F1F730F5F500B574B73F4A1E36E1EAC355
A5AD2690B1A571BDB605775087D72913AC03EAF034645F238B447D9EA1342D51
156432BFD7CBE8FBCE339ACA50B3098B754CA1E663FC45C6A093E249B9D3326E
DE71AAA13E2592857B63843669CF83A3C04BD2C728C30F751D66B59CE47F9E36
626D9B7F575248AB41B795F2C716C91ADD762963F474308808B64BE37A320D15
D1B00F3E72596219B156353984A12844231958B3883FF500F227412EF331833F
D21502C4DCD00CD97EA10EBD82B12A0E439DB35A17B4B804DEB4F55BF2D4FC71
2A216707BF4F8E59A186F37A243E6EABD872> |
12718 <001C60D8A8C9B5EE310D3F34C66D523A298ABF9444843A8212E96AAF7
D5F36A9845A76ACE57A137FB680CD324E21C7FB5F4DACA79EB959F459D61FBD6
978237227ACB89714F95837E249F71256E7E3514187DCA115F19E4F6C67125DF
23BB149F1311A0772A39F6C1A9AC2BBEE8E98212E09A257586CA1FCEB8DFC398
3D2F4E3BE26974D960645295FB0EB79B1F44D54C71E2A0A92B36DDFBE5FC5610
9B56D092316B0A02D3B7C159E1703AEEAF5E3CA938814A303B647A9F44CFE883
041FC74A052881708A89B0119E8A0DBF9C9A420AE7FEBFE341E0C0D71BA31E33
D3C8EC78C5F67743919E6095F90ED2D9D50B505C501A382382AED42FDC8BAA97
0319A5AE94F07558CF6665E5E32FA42B6C97413DB8593F9C6D28A820D92755B3
745599F9EB4138D74FF373E24889DC39C61E9227818DA3450932FC462B9BE425
0466449782F399F6FF9BDB3930D3407011DB6E2D47924A44B90323FE9158CF10
7D15114674C81970BC69814F43780398EC3DB05B7F238ADAE91418A5AC259C14
F783EB2A51965A7C866FB5FDC5E54EC3173A861CE5AA89C9B6ACCE1F777C7688
42D53E7C02E411467675C3D64714199B35E63AA757D9F943303FE568436A4E1C
681B2CFD985AB1FB90FCBC6197FDDD94D9A7A795F7FA81B03B359> |
6470 <001C60D8A8C9B5EE3102D3780658D48EB9C746950944A1F2EC509A8A41
FABFEAAE6D4AF0E7F8F5845E52B19283018F4892A926982F55C901C120FA674C
18D1F5B0B0E2753EC1F31ECB7052E9643622585E3CCEC746B78A533FE83F03F9
6125A5B6A895D0171D37845D5E9DD2FFB3E026F72F554DF5F95E71EE33B91218
8A1611CFA94EF99B0661D3461F0F4F29BEEFCE102A1E6082CF3E7623AD91EDB5
202D75F2E818F011A61AFD95B72DE79EB5B781F00C6F385DF9DDFAB3D0E67FD9
772C1BC5530554F0CD2EADE5C8D9E1CE7E92538F18D8140FC1DDB8BAA4108688
EE6CF358BF53F802F3F6FB3ED5EBF0C51BB2DCBEB62642A9E333A926C166E27D
4C1F32CA1353454264C2228730B4B2A3BE1C29432353C8D24E8BC475231BEE87
D9270C2191ABC569E9805B4D754C0EB51A08260C4983203BDA6A7562EE6757C5
6AC859C2F4203B6EDE3C55E1274DB7A167217606A34235164E984BDB00D67C56
7CDFD5C65E2A3EB7A745D1C772AC3DA741F42961BD5A508A461A4F595551EB9D
2E6B3272CEA32BF723A359F5AD4984736C18D60A872934F5EBBCA560BDD35E3A
F81EA48ADC7F6331448B79C10A24D3> |
6600 <001C60D8A8C9B5EE310337A8CFC3484B94B65ACA0A00117145EA74AAD6
155CDDF69A82CC419596B092CBF795482525817F5334062F9F76E674B86A4AB2
43BBDFCA7CAA2EFD96CAA6E39B793243FECC92D8B78F8FAC036CD50F8A11158C
A49DAE160E502C44A8EC8871A57A1558ED938647D85A1A99F8A6ED91B1B9D85E
204355FD3EADA39C730308C78733135B5D2AC19F6C3F26F422EACD9DDA582364
C6AEFE6C5CF65A18CD9380B37BB1ED94521F67F6D3A8B62EDAC85F0C0767BD07
739386E111D24D6A8E5A5DAB642B787F2E89D907EC148850C3BAFB3D5AE3B8C2
A184D0F471B5C45E8F62A23048F56154D2A16385429E07732B039324F0E0437D
9BC80C5027684F66CF8FC970A725ADDF2F2B1D5233F92E2039A068F746436983
05772B6F2EFCC52D7BDE062F570F8D91698627C87CD53E7D7521E6F85BAF22BB
D60DE2A8D44C91FD43A726EFF729DDFDF1D41F72EA50EFB72150B492D317> |
!
end
end end
%ADOEndSubsetFont
(\03671\256\007\2433+\031F\031\310)
[14.2749 14.2749 14.2749 14.2749 14.2749 14.2749 ] pdfxs
n
246.38 52.131 102.0 24.0 re
S
254.05 58.756 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 2 GetGlyphDirectory
16925 <001C60D8A8C9B5EE31035E33B4AB5675A93238DC8BA3BBFFAC085E02F
72D9810CCE2308A827627D8BCC43C98A29508241541B288ED1F3D0F5A35301B7
6008588C600378AD57A4DE0546A86931068572D2DA160B36ABD36CD7E16DD1C9
0B9ABFB56BF704E224514C699C3D7617F8583235878FDED28AA930D94F3FE823
577EE73ABEAB13442E8F9D2A4CEA868FE2407160012C5F937F8ECBC76F740BFA
B4015888A114E52FCA7ACD1D1810679D526D6E81A1FCDFB469AC0189FAD2E7E5
F522DE27494FF291F06BFA7A79C9B6C96ADC0437ACCC326C939571FBD668E572
D406EBB2FEC7F494E695CE8743D580E9E41F1DF84884C59A492C7C913500C05F
05C6A94458E19AA3F7761F13C8A3A1F26F48C0F410F3EB94F08EA3886CCF07D8
90F4AEA57653F8394> |
1145 <001C60D8A8C9B5EE31022AC2CAFDDE2F6015BCF95FC819B2E5DCB28A25
25A7736D7338E98D27C13EA094D43A264D90E20CB6782198C4A52E4638EAF904
006666930974ED260E30BFC51C749D5073C1F984506EC1F261CA104B09FA4D51
A69434A385C1953A7CD50843F8C5C966DD4E6F878431BC0BD655D2940041683B
4138DB8BFFD8906FC31EBAA7DF19B0346128F8C55F7B13655F0AC909DFAC8366> |
!
end
end end
%ADOEndSubsetFont
(\03671\256B\035\004y\031F\031\310)
[14.25 14.25 14.25 14.25 14.25 14.25 ] pdfxs
n
246.38 11.631 102.0 24.0 re
S
254.05 18.131 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 1 GetGlyphDirectory
13780 <001C60D8A8C9B5EE31029E3CD651EFB555BD1480EBC3808F0EA933F4C
3B194407F236613C6B9AC99445D193BE900525BA2078BEC2A0B05F7647FBA117
E5EB8D88EC8BCB372512F928C00464D8184E610D88C966ECA9A9A26DC7032C66
FD8ADCEAFF1B8C733372E13F80EE8BB62733CA2E2BF7495340C35F34711528F6
BD5DC626375651406DF427193AE5391667FF241BB31B0721F5A59EFCFEC56411
B85DAFE0FA45AD94732AE03C0D35EE3FB5E0EA42C5DCD4DC706D45B14F4AD9DD
938BF1D08982BCDB3555A6F4FDA6A9474781454521A4D1622E5B18B4DA43C1E0
357243F2FBF1235AE96A0530C451DF2B90711F43F2B1611499F7769252739AB6
AC72A643891FB6F5471CF881698BB59EFEE6DEC5A5B24598E7B8E9CB8AE6DEED
40A80E51AE695697EC12F87EB4FA59DF2224D22A3799FF1FDA8D898A1010ED99
AA71CE0ED85EBF104D01A56D224F0B0CE5B10965D5661CB4C325A2855148AFEC
EF9A761A0F7E10F0546490A00A595C11A39CCECC9A50EBB49F5370CC4E4E8B49
6855676717FB4EDDC2DE2E798A5393C14F3A82134EAD28CE6> |
!
end
end end
%ADOEndSubsetFont
(5\324) show
268.33 18.131 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 3 GetGlyphDirectory
13556 <001C60D8A8C9B5EE310DEF4F58DE0CECC2D32BF0F5229563A1E0D5622
744600700EDC9813BFB959B52C8096A8826F46E611405F5DF6E964FD9D13C8E6
A3540AD604714722B13FBE64F3FB15F2CCD3C50415E6BA0FF721461DCFF58395
997D2B3E7F7A1F49C754D06447342548FA1B6F9BB10C0C259D202E3A4C86B843
2D16F469690AC0CB1654252B60890AFE0942B62D7F9A60AD66378210B47756D5
4BFA0D2EE320FC902EFE42A947B160E6C29EC050EA7D01D4CCBF5F8210B1D04F
C70A39CB171D882A2081BF2CE69D3BD7653E0D358EDD584856604F5972211B5D
E1E8CCA1036358356069D76B2A7E56D00A9663D73A5B682590F9F5652BCDBB3E
43AEEA82609357545251FF3348ADFE5F5> |
1973 <001C60D8A8C9B5EE310254E10690FE173B50758F03D7B02BB08CF81DF4
A0995C56A3411FC10A715F4E0C9504813AF6D65AAF1271FDAB7CDD10DFB040F8
B4D18BFBF4FD378561A5444BF77B8043E683EF362F1134AC948B59331B5CFF47
FDEC99DE98E78AD83265E484BB6B63935E513B372B727A1F18C57D5502059FA8
BAC0B6E4208B7774B1896AD4EFA1C2227185C8DCB73D0B23855E3D0B6D6038DA
4CE8E75B8C8F39045DFEDD6F4F880EBA8EFAC7576E0FCAB63FFEAF5A0C506768
6363> |
4585 <001C60D8A8C9B5EE3117D83FD1AA17DDA02AD916E02D435D0699795225
99CDD6C9E47C2FE5B65A7D3FDBF9E91D0CD4D3AF1EA09CE07D344225968DD361
163EFBE1728BEDAEC4B77979AEF072F28CDDC2F1F6E80717EB877FF3D6F9D532
5FB1A024D143BA28D1124EE34265346ADE1B697A3A0A6034233244E092BBE018
4F36FE3A7315EE73A5D7D371A118C6E0F724366D7BAA8DC09559C685EE2C926A
B4250935F0B02156A759E16AD1C04A56123DE9E49DAC0CDFE01C054582AE6A14
E6F29AC6D74D2728E1BFC659445C4E9633E221BBD2107BBB53E3E1745934EC2F
31C12500F58674C1A1CB86D166F4EC4BFE6B9529AA36531BF73E428D3B055DE8
9040E01A26C12094BA0476EFC6AB6F85D5F02B4B5A469883E4B21D3D50A5175D
7E14EA1E5981BF590D296A4B6AB853A12A80BA402D5C20FDD429ED18F0A5A882
8441C8BCB3> |
!
end
end end
%ADOEndSubsetFont
(4\364\007\265\021\351\b6\035\300)
[14.25 14.25 14.25 14.25 14.25 ] pdfxs
268.33 84.831 m
(\007\265\021\351\b6\035\300)
[14.25 14.25 14.25 14.25 ] pdfxs
q
[0.75075 0.75075 ] 0.0 d
n
234.38 1.1314 124.5 102.0 re
S
Q
n
397.88 152.51 m
397.88 156.72 401.29 160.13 405.5 160.13 c
405.5 160.13 405.5 160.13 405.5 160.13 c
405.5 160.13 l
475.0 160.13 l
475.0 160.13 l
479.21 160.13 482.63 156.72 482.63 152.51 c
482.63 152.51 482.63 152.51 482.63 152.51 c
482.63 152.51 l
482.63 122.01 l
482.63 122.01 l
482.63 117.8 479.21 114.38 475.0 114.38 c
475.0 114.38 475.0 114.38 475.0 114.38 c
475.0 114.38 l
405.5 114.38 l
405.5 114.38 l
401.29 114.38 397.88 117.8 397.88 122.01 c
397.88 122.01 397.88 122.01 397.88 122.01 c
h
S
410.9 140.96 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 2 GetGlyphDirectory
3626 <001C60D8A8C9B5EE310D81F25C55175A84DE25706F4C1038F0C57CDF5F
A90DD5A194BEED35BC35A22F0AAA975F71B2A69C1311BE8028B71B5DCD8DC7B3
DA200B9C9B266F52325AA30CC447F97C109F05B3FFF94C39061E6AC424538198
E8A7C417C795AF1DE6C6D07619EA7D59C7866FF88153E1246839C562B1A8C10E
60394B11625BD9CEE5A9455663A2C6129080DACD868CF4C33373A41345EA81A9
3D69CF87DB3386CE9394ED2120D85AD62FDC2C8BF3F156B1D96A5AE8658DF55B
679FF5FE2783CC9811BBD8A30EF7FEB6D9CEE95E78D965500C42C94F71574750
E208A28FE00C3EB70515D2FB086350831E86047A5B6A9040741AB5AE6F8D3079
26CA6A6983CCFF7DC210524802938E2BEF6C5C55FA8E88364D8EFEF6> |
1214 <001C60D8A8C9B5EE310DCE8C66EE5F3953CB81797B684D40EE455412CE
487D791C72C4FF96EB9429CDF780737D6E14C3274400F606CBF958CF33E01818
EBE78545BC0DBC7FF8963AA51D8E6E7925D13A4AAFA10ABC91687F81024323C1
E3C6543BBD4BB88E7729B22878> |
!
end
end end
%ADOEndSubsetFont
(\016*\004\276B\035\004y)
[14.2749 14.2749 14.2749 14.2749 ] pdfxs
410.9 125.16 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 3 GetGlyphDirectory
11444 <001C60D8A8C9B5EE31023EA36A9FB9EFFD002A9633CA6905B9E0734B1
1E4E52251A0326518C1C981FE8C63A8F3DC4516C02BA51ACC50BA5493354F1DF
F0C24C89FD7AC2761BAA5B6E961F23A04C33C41ABCA793F439CB326241CBB7E2
D21A3DAAEC97999FF2B6B57992D6F610EC8E6CC1F8E5A049C3C988F648FADE33
2B67F933C49B6EDAFB049385022C67B87E016A3CF2DDFA887B7CB78999213827
C4E7201517BEDBD7F6F673AF05514295AC93B339E03F5039C4D90AF9A58E458A
E7375CFE482023AB71FE3DD9A4E735E460555322F0A291FED2E7E6241F302202
2E7690252931623BA8EF10ADA8633684AC3DAB8884CE84BED614E1A63D44FF85
1982F440FA12D2A72> |
9087 <001C60D8A8C9B5EE310DFB9CC0E4216536347F9B9033142527D7B2ACC1
B31A4B56461CCC1CB588CC5B4F127F357FB3D0040C11FA6D2E39DB056613B7FA
D8C62A26453B9C2615FA1398CFCDC6AC1FEF7668B27A68C5DDBFCB8AF49A6E13
2B40A76EC4475C10EFC41B44898086D38D380CF6BEE14749E6C23918DC35A001
4BDA1F5D8A6F4283EC0B1B6A09C731E2CC72F767F19FC0F28CD583E504C90E64
FE1B44E36967D2780068CE5D77309699B57793307FAC65C6D116A44306F22759
9F96453B384012EE59A37D4E796B5B638C5B0B1AFF22ADBB75CAB882979AFBAE
01F0D15967A4753BFFC1F8D12623782A865766B765BD1954782DE58C080621C2
3C1BBE0D55C204B4A3D89CA69C9D14E7F46DA3F35CC752BEE860688373694A2D
FC30089917965CF50BEAFD71FF7FA07743C7C332AF468FA83FCFD36B90060286
DD3C7A4CA0BED8E025308F165971AFADA731A3D2252F70AEFF968DC90F0457CA
541A2BDABE2D9F030292966B7446760F85DFEF29C94DFFAA29AB485EAA37B3CA
0939954E92FFDB> |
16376 <001C60D8A8C9B5EE310D85C7947E6C31FCCBCE52CEF8FAADB228A1D5C
A43E7FD30312A4AB041A4D9BB2FCBD40C55A763F9A814ADCAADC77EE40CA52C8
98FB8D55EE470603B9EDB7900BC8278E6D1D92D84D31F4B43AFE15ECC4A2DA82
83143DB07AF7755975D02BE7F971046EDD1935A389E9116297C973A22166ED54
A44292DF4C347E317B86C80231F88B8A48352D7B5ACD13CECF80D70F0697D068
3C582C00B66044387A48F74739F66DE6316D9A43740F2147F46C3FFA1BBF779F
EE4B60D803460E58339CCC0BCB9697325C3E08BA7634A95FF5EF8762A5D627AC
2044F68A809104AC83870D753C325511670EAF9197582AEBED4AB0C3C6157C8C
862FF4D6D3F365076DD17B69A27E02B0BACD0C2D6AE6AE2B7FCDA1A7D6CA7063
69DF6D242D1458456AA016FB925343F140425CFAAD34B010013FB25CA8C9C605
936858F2144A4C9C702B5724E5E0DECCFD357E5C8A75E01BD3B963E28270DCE8
FB8013354C6BBE0E27DF2CC> |
!
end
end end
%ADOEndSubsetFont
/N6 14.275 Tf
(,\264#?\370)
[14.275 14.275 14.275 ] pdfxs
n
397.88 95.631 m
397.88 99.773 401.23 103.13 405.38 103.13 c
405.38 103.13 405.38 103.13 405.38 103.13 c
405.38 103.13 l
475.12 103.13 l
475.12 103.13 l
479.27 103.13 482.63 99.773 482.63 95.631 c
482.63 95.631 482.63 95.631 482.63 95.631 c
482.63 95.631 l
482.63 65.632 l
482.63 65.632 l
482.63 61.489 479.27 58.131 475.12 58.131 c
475.12 58.131 475.12 58.131 475.12 58.131 c
475.12 58.131 l
405.38 58.131 l
405.38 58.131 l
401.23 58.131 397.88 61.489 397.88 65.632 c
397.88 65.632 397.88 65.632 397.88 65.632 c
h
S
410.9 84.056 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 4 GetGlyphDirectory
1114 <001C60D8A8C9B5EE3102961CD4FD14746981339316F5D45ED1A747FAAA
C416A1D196C7B5F7ACBE229CE9F8A9C379B357115CDA00F4958879AE7E5F1BF8
DD0202AB311B200D11F976FE37A742D4E8B56ED8D1BE2E8C5615FC18E15E6275
6F72B34C34DB9DDE97AE6C92DFFD0643F73361657CA1D1EF4B4D6687CB2E0F75
12> |
5719 <001C60D8A8C9B5EE310258AB05023924ECBED2A74DA3712D1584E186DF
816915EE425CB538DFBB271CDB5AA08898580F6FBD329D25DBA72D277304E6F4
9D10C971635D4E323E58422BFFBCA7BABDC7326D16F5CFA0372B68553F9854DA
81ACED4AC9AEEF6FA748A55E614FDFDB930EDE6E219CCA71EE19308273C3D7D9
0C2FE008DAA7BF2EEF82C222F270B577A2AF01ADC23DC2A86883591D389A5DCF
C97B594F0CFEBBFFE9C3594C1EF9810751D089B8A13A2B728C2EF545F30C3899
55944B5F26C1495DB1F22D1121474E839956754ECAB3E92A9800F54ECCBCD5E9
4A86B7A0D27F44FF4CB216B38F16D2A5577BAD2C9F0BA6D38DBD9068CBA72DC0
52D7997851CDED99F4> |
2374 <001C60D8A8C9B5EE310DA694D3C11189146C2177303D62F4B6B10D2EAC
9F2A780662F647CAE34FE7D36BC11417FEC5660A5D869AB9A11F20ABF3846399
722BA9465C45046AF72E007A9E0289673F15C09606E5271191B6C3D21F1C1495
7902F32884498A0C1C45097680C1A99FEC2F8294855520ABEC608BEE593B79B0
429B0D672510ADA2DAB74DBA259973B1A826B4AA31FA9B8E16DD64B48BB59B46
32A054DD981456B4098B657D154124E7BD5F9F420689CCF809FA2838EE0707B0
A6BEE413957AB889D7B2726BE0EA68F5> |
1553 <001C60D8A8C9B5EE3102DFD78FFE9775FBCAE29132675021C62E1A9FA9
8B60F442469D5F61A4D3BA3FDE2709E5ABF69CAEE3B40D35A471C9D377BB95AA
0FB13DA2018605917BD793C6B82C1C5B3DEE1E7DD278449E2FA0EFA4C0AD5538
3D5348920392CB5DAE7A1741ED391753455A82BBEF486062A58CCA734782229F
196F9E386F49BBB1B601FE229B337A34548BEE6FDC51E056D7F5CA7F315472CD
258A42204C599140F1657BE601E7BBCD74D06A16AC7592316CB99F24EBAF0E43
013C1042C9887CF268F7FEBE4E70BBB94D0F69EA552129706B82531262C20135
A7BD28449FEBFF59BDC1138EFBB75E405A455AA749119DC3FC70> |
!
end
end end
%ADOEndSubsetFont
/N6 14.3 Tf
(\004Z\026W\tF\006\021)
[14.2749 14.2749 14.2749 14.2749 ] pdfxs
410.9 68.256 m
%ADOBeginSubsetFont: SVNBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/SVNBAA+#cb#ce#cc#e5 3 GetGlyphDirectory
5791 <001C60D8A8C9B5EE31021BDA9E4D0E4F61862D3B6BE02702C76B8A8DEA
F83722990785CCEF89B766D558A245F273F7E778B47E3F1DD9A82A6070D183A5
35EA962457651F4A0C9BCC5508B13F4608753C347CD4DFA1A44D3BC56DF283BB
B98E3D7568104F7906783613B33EE935D98054B0D0DA88DEFC71703DCFD6D4AA
8FD628B5CB29BC4239F423F12F3BEB74E658F7ED708575D6D8309B355CB48DEC
226C7C8E938147842B24998C6360C5367209F2158357ADC512B80F5A66FE71BA
ECDF60CCEAEF35CABC59C9CF948D8340FF0160BE7BD214850C34FBD528A3171E
320EEFDA3BE1D36C725E8C5971E6C30241A65D4BD319B3FB4FA16E93232DA372
BC3D9DE716E6AB08BB3D8B0F9354BAC72FF3306793430F66C0A2D6B7700A011C
59B6908D033A0DF9C3ED653C7CF282F13B2B385EFAAD7467EB2E821F0983A909
2F8DE4E5A463C92DA6705B4FEAB6BA972DD7C3582B0DC276> |
6616 <001C60D8A8C9B5EE3102A527B9297C3C2AEAD105B726D553A77CD7B94E
8E9C7CFA252D2F84A3B7B64B6184C601E9B12601733924C054E7CC4EC86A5C51
918B2491C9736126A3A5BFC8170B90832244B8D5B2C3F225488018F0F0740C0A
F06239917A7B17796A2ECCBCC3377410C9B84E799362CBB5D4109A83EDEA671D
95A282EC263BDBED7493B089D6B9575BDA8152090D7F8B36A1C17F1E76B04C7A
AB060672BB58E68D6A1E1E4EFC19D0F5813F5568AEEC5D2C9C56A11F43595F60
16C8F2DFC29818212EA834C7F540E16295446B7702B6B37E06250B0193CCE8F2
3E2FE850FE15D4BA614479DAAB5AB469475EBE145C3316B83FD77D8C5318926A
1FBF865857EE32D5A377A6C1FAEB5F42305FB514648D541B27BA98B364B8D469
A44CD183D3EBEB7C159CA6474FE0F917C1A05CB2C60E4D8575> |
14720 <001C60D8A8C9B5EE310277AAF3D59BDD3A6173BFC411850A34BAFB81C
CFBD89B14ED87AE37C0FA2351B09FC7026A71AB1E794841ED5AC94BFDE788A0C
37D312B472CACFB5055A005EF8910455F0ED35B35FF48008A33440273940E85E
B8BE297EE4393D4FDAE78ED640E9603199D7DD02B92FF8C518021D23944AB5FC
9B5933A1BC3BC4E72F7DE0FB980DBCD97AFBCDBF8FE077FDE4A49A917E23599E
FF4227CEDE6D23D766A1A06A1A5B41C5CAB7498760C4DB5F397734F79C77F102
96C577DDB19774C9BE3AE124045BEF584F70D9D885184FE1EFA4054A28320656
79E8E5BE3674BD1707E9C47A647CC856137628436AFB4DD05ED5C2E56EF15F1E
49478837759BC63F7A58067883F7644895D40393C0F3C696C1C3A73B3D6EEF4E
0F21E81E7DA41DDE271CD22BBE8FA35D8270B87129E6B3431CB25C05A89D8B58
8D2EFEA96443FF0C1> |
!
end
end end
%ADOEndSubsetFont
(\026\237\031\3309\200)
[14.2749 14.2749 14.2749 ] pdfxs
0 j
8.0 M
n
369.38 141.19 m
385.5 141.19 l
385.5 144.38 l
391.88 138.01 l
385.5 131.63 l
385.5 134.82 l
369.38 134.82 l
h
S
n
369.38 88.694 m
385.5 88.694 l
385.5 91.881 l
391.88 85.506 l
385.5 79.131 l
385.5 82.319 l
369.38 82.319 l
h
S
n
201.38 96.194 m
217.5 96.194 l
217.5 99.381 l
223.88 93.006 l
217.5 86.631 l
217.5 89.819 l
201.38 89.819 l
h
S
n
201.38 156.94 m
217.5 156.94 l
217.5 160.13 l
223.88 153.76 l
217.5 147.38 l
217.5 150.57 l
201.38 150.57 l
h
S
n
71.625 215.26 m
87.375 215.26 l
87.375 218.63 l
94.125 211.88 l
87.375 205.13 l
87.375 208.51 l
71.625 208.51 l
h
S
1 j
n
520.88 195.26 m
520.88 197.81 522.95 199.88 525.5 199.88 c
525.5 199.88 525.5 199.88 525.5 199.88 c
525.5 199.88 l
544.0 199.88 l
544.0 199.88 l
546.55 199.88 548.63 197.81 548.63 195.26 c
548.63 195.26 548.63 195.26 548.63 195.26 c
548.63 195.26 l
548.63 40.257 l
548.63 40.257 l
548.63 37.702 546.55 35.631 544.0 35.631 c
544.0 35.631 544.0 35.631 544.0 35.631 c
544.0 35.631 l
525.5 35.631 l
525.5 35.631 l
522.95 35.631 520.88 37.702 520.88 40.257 c
520.88 40.257 520.88 40.257 520.88 40.257 c
h
S
529.09 137.97 m
%ADOBeginSubsetFont: KQBAAA+@#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/KQBAAA+@#cb#ce#cc#e5 1 GetGlyphDirectory
11096 <001C60D8A8C9B5EE310352EECF602406C0329E1B650528DB4C10B129B
B86AB3C12935CB6FB7137A27A4BA4BEB46A65DAD78F0FC83B360EEE112A00729
2C14046865AC11FD747B83592CED2A9798B5E7F999C0B72B9FFCC81D6B07E08B
CC2AFD5046782CD40247B02D8BCF5AD3D0A43FB505FDE2790A26E7F423F822EF
6D6BC83B41D215AFC9F44E868233463428F43C15281F7CC4D598C4E4BB7A2DA6
57DE7FFCE45F3A8E51DBF933AECA3DC21C0B57AA47644BA5C9C3507C529AD1B> |
!
end
end end
%ADOEndSubsetFont
/N11 14.275 Tf
(+X) show
529.09 123.67 m
%ADOBeginSubsetFont: KQBAAA+@#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/KQBAAA+@#cb#ce#cc#e5 1 GetGlyphDirectory
6247 <001C60D8A8C9B5EE310366CF9D3A5DBD83A75670FEE48A3F8FEFF4DF41
93AE7D98511713F65390FE7080FDFFBDED5662811A0279E6671728A48D54AD8C
AB68295833563AC29DB1C3B822C342CB2FFC1C9A7FC090887B43462A76FF0798
832CCC37B55D693396FF239F2E28174AC2D9D2C5EF8AB7948029B238E96677E1
DC27E442AB952DB067683A7DD4C21A> |
!
end
end end
%ADOEndSubsetFont
(\030g) show
529.09 109.37 m
%ADOBeginSubsetFont: KQBAAA+@#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/KQBAAA+@#cb#ce#cc#e5 1 GetGlyphDirectory
6613 <001C60D8A8C9B5EE31020F8CAE4E8F093E11044D2392B4368372FAB14F
16FCB2247606035753BC9CC4F4B6D343A357C789FFC6C6F4772D6B2E535CA4F2
201CB0D5B2D37C8CE249564A734198B0DF2AFE1B1A467267962B6A7B7DF18A4E
782D6973C90D9E18913776B0E92A4C0F2EA18E06C7C4CEE224E91C1A7AC3E5E5
30A12A60C6CA39DE8DB4B724DDD5491E4408B4F90F1FE17F4F04DE71E4440D37
9D7CB58ADE3D06634242558847460041C56EC60C98666AEAAC87F4274CE6BB60
1087CF73B1BCD5AEB398747D745CC048D33BBBA930244755BBF8F01678E4B9A8
291347611936502AA0E9C1D61F3824B9C755FFE04E7A61AD712DF9980B8DB8C9
5BF7BEBE41375298F0201F881D056CF327FBDCC51C72909B9DF8A53A7D73DAB7
ABBE9EEA014F8B420135971F9F51676BB86B775B3529E7ECD6E6B3B59C43660B
B05C4ECD5F1D5199EB2572E9AA88FF290DBCFB14EE131D6181CD9353754D893A
A55169D25C8A897C2DEE7906296854B1D196A4A65C069F5CD1C70A45216DA802
D00659718ED7AC7F5AD1A3C3D6DF672B3E90B001F9FBB84A3DE2336B12E91D9A
539E0147A85AD1031F60DB0EF7ED> |
!
end
end end
%ADOEndSubsetFont
(\031\325) show
529.09 95.07 m
%ADOBeginSubsetFont: KQBAAA+@#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/KQBAAA+@#cb#ce#cc#e5 1 GetGlyphDirectory
2579 <001C60D8A8C9B5EE310337A891C2D47E2711CF26560A417EB40B284ABE
A864A05A9AF410197BD388D500CACE6F9C48C98872A868C3995AD5CADE7CCF18
87DD8C820F32E3C288735CEA71F4D5F311CEDDDB06DF> |
!
end
end end
%ADOEndSubsetFont
(\n\023) show
0 j
n
488.63 113.26 m
504.38 113.26 l
504.38 116.63 l
511.13 109.88 l
504.38 103.13 l
504.38 106.51 l
488.63 106.51 l
h
S
n
151.69 194.63 m
151.69 178.51 l
154.88 178.51 l
148.5 172.13 l
142.13 178.51 l
145.31 178.51 l
145.31 194.63 l
h
S
n
152.44 136.13 m
152.44 120.01 l
155.63 120.01 l
149.25 113.63 l
142.88 120.01 l
146.06 120.01 l
146.06 136.13 l
h
S
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
