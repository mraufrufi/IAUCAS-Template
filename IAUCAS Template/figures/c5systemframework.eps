%!PS-Adobe-3.0 EPSF-3.0
%%Title: (c5systemframework.pdf)
%%Version: 1 5
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 19:05:36 03/14/12
%%For: (dell)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 695 253
%%HiResBoundingBox: 0.0 0.0 694.5 252.75
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3676 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-03-14T19:05:36+08:00</xap:CreateDate>
         <xap:ModifyDate>2012-03-14T19:05:36+08:00</xap:ModifyDate>
         <xap:MetadataDate>2012-03-14T19:05:36+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:0358232EC46DE1119E028FB3AF10D0FC</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:0358232EC46DE1119E028FB3AF10D0FC</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:description>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>dell</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Keywords/>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 694.5 252.75 rectclip
%ADOBeginSubsetFont: VKFBAA+#cb#ce#cc#e5-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (VKFBAA+#cb#ce#cc#e5)
%%Title: (VKFBAA+#cb#ce#cc#e5 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /VKFBAA+#cb#ce#cc#e5 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -145 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28762 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /VKFBAA+#cb#ce#cc#e5-Identity-H /Identity-H 0 [/VKFBAA+#cb#ce#cc#e5] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N7 (VKFBAA+#cb#ce#cc#e5-Identity-H)
/N7 (VKFBAA+#cb#ce#cc#e5-Identity-H) /Identity-H [ (VKFBAA+#cb#ce#cc#e5) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
q
0.0 0.0 m
694.5 0.0 l
694.5 252.75 l
0.0 252.75 l
h
W
n
q
n
0.72 1.1922 692.67 250.84 re
eoclip
n
9.6205 0.0 0.0 3.4839 0.72 1.1922 cm
q
0.13853 0.0 0.0 0.38094 0.0 0.0 cm
0.0 0.0 519.739 189.006 re
W
n
q
0.70833 0.0 0.0 0.71875 0.75 81.006 cm
q
0.37901 0.0 0.0 0.3731 0.0 0.0 cm
0.0 0.0 189.97 192.98 re
W
n
q
q
q
Q
Q
n
-0.000002766 98.463 m
-0.000002766 55.85 l
50.329 38.804 l
115.67 63.415 l
134.34 116.47 l
h
[/DeviceRGB] cs 0.647 0.808 0.647 sc
eofill
n
149.93 138.3 m
150.7 140.88 l
151.28 143.47 l
151.57 146.25 l
151.66 149.02 l
151.57 151.9 l
151.18 154.67 l
150.6 157.36 l
149.93 159.85 l
148.97 162.34 l
147.81 164.63 l
146.47 166.74 l
145.02 168.75 l
143.48 170.57 l
141.65 172.1 l
139.83 173.54 l
137.9 174.69 l
135.78 175.65 l
133.57 176.32 l
131.36 176.8 l
129.05 176.89 l
126.74 176.8 l
124.52 176.32 l
122.31 175.65 l
120.19 174.69 l
118.27 173.54 l
116.34 172.1 l
114.61 170.57 l
112.98 168.75 l
111.53 166.74 l
110.19 164.63 l
109.13 162.34 l
108.16 159.85 l
107.4 157.36 l
106.82 154.67 l
106.43 151.9 l
106.34 149.02 l
106.43 146.15 l
106.72 143.47 l
107.3 140.79 l
107.97 138.2 l
108.84 135.81 l
109.9 133.51 l
111.15 131.31 l
112.5 129.39 l
113.94 127.57 l
115.67 125.95 l
117.4 124.51 l
119.33 123.36 l
121.35 122.4 l
123.47 121.73 l
125.68 121.35 l
127.99 121.16 l
128.47 121.16 l
128.95 121.25 l
129.53 121.25 l
130.01 121.35 l
130.59 121.45 l
131.07 121.54 l
131.55 121.64 l
132.03 121.73 l
129.43 112.16 l
129.62 111.97 l
130.2 111.49 l
131.26 110.62 l
132.51 109.67 l
134.15 108.52 l
136.07 107.27 l
138.19 106.03 l
140.6 104.88 l
141.85 104.4 l
143.1 104.11 l
144.44 104.02 l
145.7 104.11 l
147.04 104.3 l
148.29 104.59 l
149.54 104.97 l
150.7 105.45 l
151.85 105.93 l
153.01 106.51 l
154.07 107.08 l
155.03 107.56 l
155.9 108.04 l
156.67 108.42 l
157.34 108.81 l
157.92 109.0 l
158.88 109.57 l
159.84 110.43 l
160.61 111.58 l
161.38 112.83 l
161.96 114.07 l
162.44 115.13 l
162.73 115.8 l
162.82 116.08 l
h
0.949 0.8 0.698 sc
eofill
n
188.81 158.98 m
188.62 160.9 l
188.42 162.72 l
188.04 164.35 l
187.65 165.97 l
187.17 167.51 l
186.59 168.85 l
186.02 170.09 l
185.34 171.24 l
184.19 172.96 l
183.13 174.59 l
181.98 176.12 l
180.82 177.47 l
179.47 178.52 l
177.84 179.48 l
176.01 180.24 l
173.89 180.72 l
172.16 180.82 l
170.43 180.72 l
168.69 180.53 l
166.96 180.24 l
165.33 179.86 l
163.79 179.57 l
162.34 179.28 l
161.19 179.09 l
160.13 180.72 l
158.78 182.35 l
157.34 183.98 l
155.7 185.51 l
153.88 186.95 l
151.85 188.29 l
149.74 189.53 l
147.43 190.58 l
145.98 191.16 l
144.44 191.64 l
142.9 192.02 l
141.37 192.31 l
139.83 192.6 l
138.19 192.69 l
136.46 192.69 l
134.82 192.6 l
133.28 192.5 l
131.74 192.31 l
130.3 192.12 l
128.95 191.93 l
127.6 191.73 l
126.26 191.54 l
125.01 191.35 l
123.75 191.06 l
122.6 190.78 l
121.44 190.49 l
120.39 190.2 l
119.33 189.91 l
118.37 189.63 l
117.4 189.24 l
116.54 188.86 l
115.67 188.48 l
113.55 187.33 l
111.73 186.08 l
110.19 184.65 l
108.93 183.12 l
107.97 181.39 l
107.3 179.48 l
106.91 177.47 l
106.82 175.36 l
106.91 173.54 l
107.3 171.82 l
107.88 170.19 l
108.74 168.75 l
109.8 167.41 l
111.05 166.17 l
112.5 165.11 l
114.13 164.15 l
115.96 163.2 l
117.98 162.43 l
120.19 161.67 l
122.6 160.99 l
125.1 160.42 l
127.7 159.94 l
130.59 159.46 l
133.47 158.98 l
134.34 158.79 l
135.49 158.41 l
136.75 157.93 l
138.0 157.26 l
139.06 156.49 l
140.02 155.73 l
140.6 154.87 l
140.79 153.91 l
141.94 142.61 l
142.04 142.32 l
142.42 141.36 l
143.0 140.02 l
143.96 138.3 l
145.02 136.38 l
146.37 134.37 l
148.01 132.46 l
149.93 130.64 l
151.85 129.11 l
153.59 127.96 l
155.13 127.1 l
156.67 126.52 l
158.11 126.43 l
159.46 126.71 l
160.9 127.29 l
162.34 128.44 l
163.59 129.87 l
164.36 131.4 l
164.75 133.03 l
164.94 134.56 l
164.85 135.91 l
164.65 137.05 l
164.56 137.72 l
164.46 138.01 l
164.65 137.82 l
165.23 137.44 l
166.1 136.77 l
167.25 136.1 l
168.5 135.43 l
169.95 134.85 l
171.39 134.47 l
172.83 134.37 l
174.47 134.66 l
176.49 135.43 l
178.61 136.48 l
180.82 137.82 l
182.94 139.64 l
184.86 141.75 l
186.5 144.24 l
187.56 147.01 l
188.23 150.17 l
188.71 153.33 l
188.9 156.21 l
h
0.4 0.0 0.0 sc
eofill
n
43.208 2.7982 m
154.36 2.7982 l
129.91 34.208 l
129.82 34.208 l
129.34 34.303 l
128.66 34.495 l
127.8 34.591 l
126.64 34.878 l
125.29 35.07 l
123.85 35.453 l
122.12 35.74 l
120.19 36.027 l
118.17 36.41 l
116.06 36.793 l
113.75 37.176 l
111.34 37.559 l
108.84 37.942 l
106.34 38.325 l
103.74 38.708 l
101.04 39.091 l
98.349 39.474 l
95.655 39.762 l
92.96 40.049 l
90.266 40.336 l
87.571 40.528 l
84.973 40.719 l
82.375 40.911 l
79.969 41.007 l
77.563 41.102 l
75.254 41.007 l
73.04 41.007 l
71.019 40.815 l
69.095 40.624 l
67.362 40.336 l
65.823 39.953 l
64.668 39.57 l
63.513 39.187 l
62.262 38.708 l
60.915 38.23 l
59.568 37.559 l
58.124 36.889 l
56.777 36.123 l
55.333 35.357 l
53.89 34.495 l
52.543 33.537 l
51.195 32.58 l
49.848 31.526 l
48.597 30.377 l
47.442 29.228 l
46.384 27.983 l
45.422 26.643 l
43.208 22.621 l
42.053 18.599 l
41.572 14.577 l
41.572 10.842 l
42.053 7.5862 l
42.535 5.0964 l
43.016 3.3727 l
h
0.0 0.208 1.0 sc
eofill
n
130.2 114.84 m
130.01 114.84 l
129.43 114.74 l
128.57 114.55 l
127.41 114.26 l
126.06 113.88 l
124.43 113.4 l
122.7 112.83 l
120.87 112.16 l
118.85 111.29 l
116.92 110.34 l
115.0 109.28 l
113.07 108.04 l
111.24 106.6 l
109.61 105.07 l
108.07 103.35 l
106.82 101.43 l
105.18 98.559 l
103.83 95.877 l
102.78 93.196 l
101.91 90.419 l
101.14 87.451 l
100.47 84.099 l
99.889 80.269 l
99.215 75.768 l
98.638 71.075 l
98.253 66.479 l
97.868 62.266 l
97.387 58.531 l
96.617 55.371 l
95.559 52.785 l
94.115 50.966 l
92.094 50.104 l
89.592 50.295 l
87.283 51.732 l
85.165 53.934 l
83.433 56.52 l
81.99 59.201 l
80.931 61.595 l
80.258 63.223 l
80.065 63.893 l
65.727 56.424 l
65.823 56.137 l
66.015 55.275 l
66.304 54.03 l
66.881 52.306 l
67.459 50.2 l
68.325 47.71 l
69.191 45.029 l
70.346 42.156 l
71.019 40.624 l
71.789 39.091 l
72.751 37.559 l
73.906 36.027 l
75.061 34.495 l
76.312 33.059 l
77.659 31.622 l
79.007 30.186 l
80.45 28.941 l
81.894 27.696 l
83.241 26.643 l
84.588 25.685 l
85.935 24.919 l
87.186 24.344 l
88.341 23.866 l
89.4 23.578 l
91.132 23.291 l
92.287 23.195 l
93.153 23.099 l
93.923 23.195 l
94.692 23.387 l
95.847 23.578 l
97.387 23.961 l
99.697 24.44 l
100.66 24.536 l
101.33 24.344 l
101.91 23.961 l
102.39 23.482 l
102.78 22.716 l
103.16 21.855 l
103.64 20.897 l
104.12 19.748 l
104.8 18.599 l
105.57 17.258 l
106.53 16.013 l
107.78 14.672 l
109.32 13.332 l
111.15 11.991 l
113.46 10.651 l
116.15 9.4057 l
119.91 7.9693 l
123.56 6.9159 l
127.12 6.2456 l
130.59 5.7668 l
133.96 5.4795 l
137.13 5.4795 l
140.11 5.671 l
143.0 5.9583 l
145.6 6.3413 l
147.91 6.8201 l
150.03 7.2989 l
151.76 7.8735 l
153.3 8.3523 l
154.45 8.8311 l
155.22 9.2141 l
155.7 9.4057 l
156.18 10.268 l
157.15 12.47 l
158.49 15.726 l
160.13 19.939 l
161.96 24.919 l
164.08 30.473 l
166.29 36.506 l
168.5 42.826 l
170.72 49.146 l
172.93 55.467 l
174.95 61.404 l
176.68 67.054 l
178.22 71.937 l
179.47 76.151 l
180.24 79.407 l
180.63 81.513 l
180.63 84.578 l
180.53 87.834 l
180.24 91.089 l
179.76 94.25 l
179.09 97.314 l
178.22 100.19 l
177.26 102.77 l
176.2 104.97 l
175.05 106.51 l
173.31 108.71 l
171.0 111.2 l
168.6 113.69 l
166.1 115.89 l
163.88 117.62 l
162.25 118.48 l
161.29 118.29 l
158.88 114.93 l
156.38 112.35 l
153.78 110.43 l
151.18 109.19 l
148.49 108.52 l
145.98 108.23 l
143.48 108.42 l
141.08 109.0 l
138.77 109.67 l
136.75 110.53 l
134.92 111.58 l
133.28 112.54 l
132.03 113.4 l
131.07 114.17 l
130.39 114.65 l
h
0.847 0.486 1.0 sc
eofill
n
12.51 170.47 m
16.456 97.888 l
38.3 97.505 l
38.3 95.303 l
10.682 92.622 l
10.682 84.673 l
33.393 75.768 l
95.655 89.078 l
95.655 93.962 l
76.12 97.505 l
76.12 101.43 l
98.734 109.48 l
101.04 184.26 l
26.753 185.99 l
h
[/DeviceGray] cs 0.847 sc
eofill
n
24.924 78.449 m
24.539 72.225 l
55.237 59.393 l
102.29 73.182 l
104.12 87.259 l
93.441 90.802 l
h
0.749 sc
eofill
n
89.207 82.758 m
89.303 82.279 l
89.111 81.609 l
89.015 80.843 l
89.303 80.077 l
90.266 79.024 l
91.324 78.066 l
92.383 77.108 l
93.538 76.247 l
94.5 75.48 l
95.27 74.906 l
95.847 74.523 l
96.04 74.427 l
100.56 67.82 l
104.12 85.057 l
94.789 88.6 l
94.404 88.504 l
93.538 88.217 l
92.383 87.642 l
91.132 86.972 l
89.881 86.11 l
89.111 85.152 l
88.726 84.003 l
h
[/DeviceRGB] cs 0.949 0.8 0.698 sc
eofill
n
60.53 79.311 m
61.492 77.683 l
62.358 75.864 l
62.936 73.757 l
63.225 71.363 l
63.128 69.831 l
63.032 68.011 l
63.032 66.096 l
63.032 63.989 l
63.225 62.074 l
63.706 60.255 l
64.572 58.722 l
65.823 57.669 l
67.555 57.286 l
69.672 57.765 l
71.982 58.818 l
74.291 60.159 l
76.408 61.595 l
78.044 62.936 l
79.295 63.893 l
79.68 64.276 l
79.873 64.564 l
80.45 65.426 l
81.22 66.67 l
82.086 68.203 l
82.952 69.735 l
83.818 71.171 l
84.396 72.416 l
84.588 73.182 l
84.588 75.385 l
84.299 78.832 l
83.433 82.184 l
81.894 83.812 l
81.027 83.716 l
80.258 83.141 l
79.776 82.279 l
79.295 81.322 l
79.007 80.269 l
78.814 79.311 l
78.718 78.736 l
78.718 78.449 l
78.622 78.641 l
78.333 79.119 l
77.948 79.885 l
77.467 80.747 l
76.986 81.705 l
76.505 82.567 l
76.023 83.333 l
75.638 83.812 l
75.35 83.907 l
74.676 84.003 l
73.81 83.907 l
72.751 83.812 l
71.5 83.62 l
70.153 83.333 l
68.806 83.046 l
67.362 82.758 l
65.919 82.375 l
64.572 81.896 l
63.321 81.513 l
62.262 81.035 l
61.396 80.652 l
60.819 80.173 l
60.53 79.694 l
h
eofill
n
131.93 72.033 m
130.49 71.075 l
129.05 69.543 l
127.6 67.437 l
126.26 65.138 l
125.1 62.649 l
124.14 60.159 l
123.47 57.956 l
123.08 56.137 l
122.21 47.901 l
121.54 39.953 l
121.06 34.016 l
120.87 31.622 l
120.96 31.143 l
121.25 29.994 l
121.83 28.175 l
122.7 26.068 l
123.95 23.77 l
125.68 21.567 l
127.99 19.748 l
130.78 18.311 l
132.99 17.641 l
135.21 17.067 l
137.32 16.779 l
139.34 16.588 l
141.17 16.492 l
143.0 16.492 l
144.73 16.683 l
146.27 16.875 l
147.62 17.162 l
148.87 17.45 l
150.03 17.737 l
150.89 18.024 l
151.66 18.311 l
152.14 18.503 l
152.53 18.599 l
152.62 18.694 l
152.91 18.79 l
153.78 19.077 l
155.22 19.556 l
156.95 20.131 l
159.07 20.897 l
161.48 21.663 l
164.08 22.621 l
166.67 23.578 l
169.37 24.536 l
171.97 25.589 l
174.47 26.547 l
176.68 27.504 l
178.7 28.462 l
180.24 29.324 l
181.4 29.994 l
181.98 30.665 l
183.51 34.591 l
184.77 39.858 l
185.82 45.986 l
186.5 52.594 l
186.69 59.105 l
186.4 65.043 l
185.54 69.831 l
184.09 73.086 l
182.07 75.289 l
180.15 76.917 l
178.32 78.066 l
176.78 78.832 l
175.33 79.311 l
174.28 79.502 l
173.6 79.598 l
173.41 79.598 l
173.22 79.598 l
172.74 79.598 l
171.97 79.598 l
170.91 79.598 l
169.56 79.502 l
168.02 79.502 l
166.39 79.407 l
164.46 79.311 l
162.44 79.119 l
160.32 79.024 l
158.11 78.736 l
155.9 78.449 l
153.59 78.162 l
151.28 77.683 l
149.06 77.3 l
146.85 76.725 l
144.06 75.959 l
141.56 75.289 l
139.44 74.619 l
137.52 74.044 l
135.88 73.565 l
134.44 72.991 l
133.19 72.512 l
h
0.349 0.639 0.349 sc
eofill
n
156.76 59.68 m
148.49 2.7982 l
167.64 2.7982 l
176.59 61.212 l
176.59 61.308 l
176.59 61.595 l
176.49 61.882 l
176.1 62.361 l
175.33 62.744 l
174.28 63.223 l
172.54 63.51 l
170.23 63.702 l
167.54 63.606 l
165.04 63.223 l
162.82 62.553 l
160.8 61.882 l
159.17 61.021 l
157.82 60.35 l
157.05 59.871 l
h
[/DeviceGray] cs 0.647 sc
eofill
n
91.132 56.999 m
97.676 59.201 l
97.579 57.861 l
97.387 56.424 l
97.194 54.988 l
96.81 53.551 l
96.232 52.115 l
95.462 50.87 l
94.5 49.721 l
93.249 48.763 l
91.998 48.572 l
90.747 48.763 l
89.496 49.242 l
88.245 50.008 l
87.09 50.966 l
86.032 52.019 l
85.069 53.36 l
84.299 54.7 l
91.132 56.999 l
90.554 59.584 l
83.433 57.094 l
82.76 57.669 l
82.182 58.531 l
81.797 59.488 l
81.22 60.446 l
82.278 60.925 l
83.53 61.308 l
84.781 61.787 l
86.128 62.266 l
87.475 62.744 l
88.822 63.127 l
89.977 63.51 l
91.132 63.893 l
90.458 66.383 l
81.701 63.51 l
81.605 63.702 l
81.605 63.989 l
81.605 64.276 l
81.605 64.66 l
78.044 64.947 l
78.044 63.127 l
78.237 61.404 l
78.622 59.584 l
79.199 57.956 l
79.873 56.233 l
80.643 54.605 l
81.605 53.072 l
82.567 51.54 l
83.722 50.104 l
84.973 48.668 l
86.32 47.423 l
87.764 46.465 l
89.303 45.603 l
90.939 45.124 l
92.672 44.837 l
94.5 45.029 l
95.847 45.412 l
97.002 45.986 l
97.964 46.752 l
98.83 47.71 l
99.408 48.763 l
99.985 49.912 l
100.47 51.157 l
100.76 52.402 l
103.64 75.576 l
103.83 77.3 l
104.12 79.119 l
104.41 80.843 l
104.8 82.567 l
105.18 84.29 l
105.57 85.918 l
106.14 87.546 l
106.72 89.174 l
107.4 91.089 l
108.26 93.005 l
109.22 94.824 l
110.38 96.644 l
111.63 98.367 l
112.88 100.09 l
114.32 101.62 l
115.86 103.16 l
117.5 104.5 l
119.14 105.84 l
120.96 106.99 l
122.79 107.94 l
124.72 108.81 l
126.64 109.57 l
128.66 110.05 l
130.78 110.43 l
131.93 109.09 l
132.99 107.94 l
134.05 106.79 l
135.21 105.84 l
136.55 104.97 l
138.09 104.21 l
140.02 103.44 l
142.33 102.77 l
143.67 102.48 l
144.93 102.39 l
146.27 102.29 l
147.52 102.29 l
148.77 102.48 l
149.93 102.68 l
151.18 102.96 l
152.34 103.44 l
153.49 103.83 l
154.55 104.4 l
155.7 104.97 l
156.76 105.65 l
157.72 106.41 l
158.78 107.18 l
159.75 108.04 l
160.71 108.9 l
163.79 107.18 l
166.48 105.07 l
168.79 102.58 l
170.81 99.708 l
172.35 96.644 l
173.6 93.292 l
174.28 89.94 l
174.57 86.397 l
174.76 84.003 l
175.05 81.322 l
175.33 79.311 l
175.62 78.736 l
176.68 83.046 l
177.07 87.546 l
176.97 92.143 l
176.2 96.452 l
175.82 97.888 l
175.33 99.325 l
174.76 100.76 l
173.99 102.1 l
173.22 103.35 l
172.35 104.59 l
171.39 105.84 l
170.33 106.99 l
169.27 108.04 l
168.12 109.09 l
166.96 110.15 l
165.71 111.1 l
164.46 112.06 l
163.11 112.92 l
161.86 113.69 l
160.52 114.46 l
160.23 114.36 l
160.03 114.26 l
159.84 114.17 l
159.65 113.98 l
159.36 113.69 l
158.98 113.21 l
158.3 112.54 l
157.53 111.68 l
156.38 110.62 l
155.32 109.76 l
154.36 109.0 l
153.39 108.33 l
152.53 107.85 l
151.66 107.37 l
150.89 107.08 l
150.03 106.79 l
149.16 106.7 l
148.29 106.6 l
147.43 106.51 l
146.47 106.51 l
145.41 106.6 l
144.25 106.6 l
143.0 106.7 l
141.65 106.79 l
140.79 107.18 l
139.83 107.46 l
138.96 107.85 l
138.0 108.23 l
137.13 108.61 l
136.26 109.19 l
135.59 109.86 l
134.92 110.62 l
135.21 110.91 l
135.49 111.29 l
135.69 111.68 l
135.98 112.06 l
136.65 114.07 l
136.94 116.18 l
136.94 118.29 l
136.75 120.3 l
136.26 122.4 l
135.49 124.32 l
134.53 126.14 l
133.38 127.86 l
133.28 127.38 l
133.38 125.85 l
133.57 123.74 l
133.67 121.25 l
133.47 118.57 l
132.99 116.18 l
131.93 114.26 l
130.2 113.11 l
128.28 113.11 l
126.35 112.92 l
124.52 112.54 l
122.7 112.06 l
120.96 111.49 l
119.23 110.72 l
117.6 109.95 l
115.96 109.0 l
114.42 107.94 l
112.88 106.79 l
111.53 105.55 l
110.19 104.21 l
108.93 102.87 l
107.78 101.34 l
106.63 99.804 l
105.66 98.271 l
104.89 96.835 l
104.22 95.303 l
103.74 93.771 l
103.35 92.239 l
102.97 90.706 l
102.58 89.078 l
102.2 87.546 l
101.81 86.014 l
101.04 86.397 l
99.985 86.78 l
98.638 87.163 l
97.291 87.642 l
95.943 88.217 l
94.692 88.791 l
93.826 89.366 l
93.441 90.036 l
91.709 89.749 l
89.015 89.27 l
85.55 88.791 l
81.412 88.025 l
76.793 87.259 l
71.789 86.493 l
66.593 85.631 l
61.3 84.769 l
56.103 83.907 l
51.195 83.046 l
46.576 82.279 l
42.438 81.609 l
38.974 81.035 l
36.376 80.652 l
34.644 80.364 l
34.066 80.269 l
32.719 80.652 l
31.372 81.13 l
30.121 81.513 l
28.773 81.992 l
27.426 82.471 l
26.079 82.95 l
24.828 83.333 l
23.481 83.812 l
22.133 84.29 l
20.786 84.673 l
19.535 85.152 l
18.188 85.535 l
16.841 85.918 l
15.493 86.301 l
14.146 86.684 l
12.799 87.068 l
11.837 86.11 l
12.125 85.918 l
12.703 85.631 l
13.665 85.248 l
14.82 84.769 l
16.263 84.29 l
17.803 83.716 l
19.439 83.046 l
21.075 82.471 l
22.711 81.801 l
24.347 81.226 l
25.886 80.652 l
27.234 80.173 l
28.388 79.694 l
29.255 79.407 l
29.832 79.215 l
30.024 79.119 l
29.928 79.119 l
29.639 79.024 l
29.255 78.832 l
28.773 78.641 l
28.196 78.449 l
27.715 78.162 l
27.234 77.97 l
26.849 77.683 l
52.928 66.287 l
53.409 66.096 l
53.89 66.0 l
54.371 66.0 l
54.852 66.383 l
32.43 77.013 l
33.97 77.396 l
36.568 77.874 l
39.936 78.641 l
44.074 79.407 l
48.79 80.269 l
53.89 81.226 l
59.279 82.279 l
64.668 83.237 l
70.057 84.195 l
75.157 85.152 l
79.969 86.014 l
84.203 86.876 l
87.86 87.451 l
90.554 88.025 l
92.383 88.312 l
92.96 88.408 l
94.019 87.834 l
95.077 87.259 l
96.232 86.684 l
97.387 86.014 l
98.445 85.344 l
99.504 84.673 l
100.56 84.003 l
101.52 83.237 l
101.43 80.747 l
101.04 78.449 l
100.56 76.055 l
99.985 73.853 l
99.312 74.619 l
98.638 75.385 l
97.964 76.151 l
97.291 76.821 l
96.617 77.491 l
95.943 78.162 l
95.174 78.832 l
94.308 79.407 l
94.981 79.407 l
95.655 79.215 l
96.328 78.736 l
96.906 78.258 l
97.579 77.779 l
98.253 77.587 l
98.927 77.587 l
99.697 77.97 l
99.023 79.119 l
98.157 80.173 l
97.291 81.13 l
96.232 82.088 l
95.174 82.95 l
94.019 83.716 l
92.864 84.386 l
91.709 84.961 l
92.479 84.865 l
93.249 84.769 l
94.019 84.578 l
94.789 84.386 l
95.559 84.195 l
96.328 83.907 l
97.002 83.62 l
97.676 83.237 l
98.061 83.141 l
98.445 82.854 l
98.83 82.471 l
99.119 82.184 l
99.504 81.801 l
99.889 81.705 l
100.27 81.801 l
100.76 82.184 l
100.08 83.046 l
99.312 83.716 l
98.445 84.29 l
97.579 84.769 l
96.617 85.152 l
95.655 85.44 l
94.596 85.823 l
93.634 86.11 l
93.056 86.301 l
92.383 86.397 l
91.805 86.397 l
91.324 86.014 l
91.324 85.727 l
91.421 85.44 l
91.517 85.248 l
91.709 85.057 l
91.036 84.865 l
90.266 84.769 l
89.688 84.578 l
89.592 83.812 l
90.362 83.524 l
91.132 83.237 l
91.902 82.95 l
92.768 82.758 l
93.441 82.471 l
94.211 82.088 l
94.885 81.609 l
95.559 81.13 l
94.981 81.035 l
94.308 81.035 l
93.73 81.13 l
93.056 81.322 l
92.383 81.513 l
91.709 81.609 l
91.132 81.418 l
90.458 81.13 l
90.747 80.077 l
91.324 79.215 l
91.998 78.545 l
92.864 77.874 l
93.634 77.204 l
94.5 76.438 l
95.174 75.48 l
95.751 74.427 l
94.211 74.14 l
92.575 73.757 l
91.036 73.278 l
89.496 72.799 l
87.956 72.32 l
86.416 71.937 l
84.781 71.65 l
83.241 71.554 l
83.53 73.661 l
83.722 75.959 l
83.53 78.162 l
83.241 80.269 l
82.76 80.939 l
82.375 81.705 l
81.894 82.375 l
81.124 82.567 l
80.354 81.226 l
79.873 79.79 l
79.392 78.353 l
78.525 77.013 l
75.157 82.567 l
74.195 82.567 l
74.195 81.705 l
74.869 80.652 l
75.446 79.598 l
75.927 78.545 l
76.408 77.396 l
76.889 76.342 l
77.274 75.193 l
77.563 73.948 l
77.852 72.799 l
78.622 72.991 l
79.295 73.47 l
79.776 73.948 l
80.258 74.523 l
80.643 75.193 l
80.931 75.959 l
81.22 76.63 l
81.509 77.3 l
81.894 76.63 l
81.701 75.097 l
81.316 73.565 l
80.931 72.129 l
80.354 70.597 l
79.776 69.16 l
79.199 67.724 l
78.622 66.287 l
78.044 64.947 l
81.605 64.66 l
81.894 65.521 l
82.182 66.766 l
82.471 67.915 l
82.76 68.777 l
84.588 69.065 l
86.416 69.543 l
88.245 70.022 l
90.073 70.501 l
91.902 70.98 l
93.634 71.459 l
95.462 71.937 l
97.291 72.32 l
97.868 71.554 l
98.445 70.788 l
98.83 70.022 l
99.215 69.16 l
90.458 66.383 l
91.132 63.893 l
91.324 63.989 l
91.998 64.181 l
92.864 64.468 l
94.019 64.851 l
95.27 65.33 l
96.521 65.809 l
97.676 66.287 l
98.734 66.67 l
98.349 62.17 l
90.554 59.584 l
h
0.0 sc
eofill
n
161.77 177.75 m
161.09 177.66 l
160.52 177.94 l
159.94 178.42 l
159.46 178.81 l
157.44 180.53 l
155.32 182.06 l
153.11 183.31 l
150.7 184.36 l
148.29 185.13 l
145.7 185.8 l
143.1 186.28 l
140.4 186.47 l
137.8 186.56 l
135.11 186.56 l
132.42 186.28 l
129.82 185.89 l
127.22 185.41 l
124.72 184.84 l
122.21 184.07 l
119.91 183.21 l
119.52 183.59 l
119.23 183.98 l
119.04 184.55 l
119.04 185.22 l
120.29 186.18 l
121.64 187.04 l
122.98 187.81 l
124.43 188.48 l
125.87 189.05 l
127.41 189.53 l
128.95 189.82 l
130.49 190.11 l
132.13 190.3 l
133.67 190.39 l
135.3 190.49 l
136.94 190.39 l
138.57 190.3 l
140.21 190.11 l
141.85 189.91 l
143.39 189.63 l
144.73 189.34 l
146.08 189.05 l
147.43 188.67 l
148.77 188.19 l
150.12 187.71 l
151.37 187.14 l
152.72 186.47 l
153.88 185.7 l
155.13 184.93 l
156.28 184.17 l
157.34 183.21 l
158.4 182.25 l
159.36 181.2 l
160.23 180.15 l
161.0 179.0 l
h
eofill
n
94.019 115.7 m
96.425 179.48 l
31.083 180.34 l
32.815 110.82 l
32.43 110.43 l
31.66 110.15 l
30.891 110.05 l
30.506 110.24 l
27.426 178.42 l
17.803 169.71 l
18.092 159.46 l
18.861 136.86 l
19.728 114.07 l
20.209 103.44 l
21.556 104.02 l
23.096 104.69 l
24.828 105.36 l
26.464 106.03 l
27.907 106.6 l
29.158 107.08 l
29.928 107.37 l
30.313 107.37 l
28.966 106.41 l
27.619 105.45 l
26.079 104.69 l
24.443 103.83 l
22.903 102.96 l
21.364 102.2 l
19.824 101.34 l
18.477 100.47 l
17.995 103.44 l
17.418 111.1 l
16.937 121.92 l
16.552 134.47 l
16.167 147.11 l
15.878 158.6 l
15.878 167.22 l
15.975 171.53 l
28.196 183.5 l
98.927 181.68 l
98.83 178.81 l
98.445 171.15 l
98.061 160.32 l
97.483 147.97 l
96.906 135.62 l
96.425 124.8 l
96.04 117.23 l
95.847 114.46 l
h
eofill
n
156.57 113.78 m
155.99 114.07 l
155.51 114.36 l
155.13 114.84 l
154.74 115.41 l
154.36 115.99 l
154.07 116.56 l
153.68 117.14 l
153.39 117.71 l
152.43 119.53 l
151.57 121.45 l
150.8 123.36 l
150.22 125.37 l
149.74 127.48 l
149.26 129.59 l
148.87 131.69 l
148.49 133.8 l
147.43 134.66 l
146.27 135.43 l
145.21 136.29 l
144.16 137.25 l
143.1 138.11 l
142.04 139.07 l
141.17 140.12 l
140.4 141.17 l
139.44 141.17 l
138.29 141.46 l
137.23 141.94 l
136.17 142.51 l
135.3 143.18 l
134.53 143.76 l
134.05 144.24 l
133.86 144.43 l
134.34 144.52 l
134.82 144.43 l
135.21 144.33 l
135.69 144.33 l
136.17 144.24 l
136.75 144.14 l
137.23 144.24 l
137.8 144.43 l
139.15 145.58 l
139.92 146.82 l
140.21 148.26 l
140.6 149.69 l
140.4 150.65 l
140.31 151.61 l
140.02 152.57 l
139.83 153.53 l
139.44 154.39 l
138.96 155.06 l
138.38 155.73 l
137.61 156.21 l
136.17 156.59 l
134.73 156.88 l
133.28 157.16 l
131.84 157.36 l
130.39 157.64 l
128.95 157.93 l
127.6 158.22 l
126.16 158.5 l
124.72 158.89 l
123.37 159.27 l
122.02 159.65 l
120.68 160.23 l
119.33 160.8 l
118.08 161.47 l
116.83 162.24 l
115.67 163.1 l
114.8 159.85 l
114.13 156.49 l
113.55 152.95 l
113.36 149.5 l
113.36 145.86 l
113.75 142.32 l
114.42 138.78 l
115.38 135.24 l
116.34 133.61 l
117.31 131.79 l
118.46 130.06 l
119.62 128.44 l
120.96 126.9 l
122.5 125.56 l
124.14 124.51 l
126.06 123.74 l
126.55 123.74 l
127.12 123.94 l
127.7 124.13 l
128.18 124.32 l
128.66 124.51 l
129.14 124.61 l
129.43 124.41 l
129.72 124.03 l
129.14 123.65 l
128.57 123.36 l
127.99 123.07 l
127.41 122.88 l
126.83 122.79 l
126.16 122.69 l
125.49 122.79 l
124.81 122.98 l
122.89 123.84 l
121.16 124.8 l
119.52 125.85 l
117.98 127.1 l
116.63 128.44 l
115.38 129.87 l
114.23 131.5 l
113.27 133.13 l
112.4 134.85 l
111.63 136.67 l
110.96 138.59 l
110.47 140.5 l
110.09 142.51 l
109.8 144.52 l
109.61 146.53 l
109.61 148.64 l
109.61 155.44 l
108.93 155.44 l
108.36 155.44 l
107.68 155.44 l
107.01 155.54 l
106.43 155.73 l
105.95 156.02 l
105.47 156.3 l
105.18 156.78 l
109.9 158.41 l
110.28 160.52 l
110.67 162.72 l
111.24 164.83 l
112.5 166.55 l
111.73 167.51 l
111.15 168.66 l
110.57 169.9 l
110.19 171.15 l
109.9 172.39 l
109.9 173.73 l
109.99 175.07 l
110.47 176.41 l
111.05 177.47 l
111.63 178.42 l
112.3 179.38 l
113.07 180.24 l
113.84 181.01 l
114.8 181.68 l
115.67 182.25 l
116.73 182.83 l
117.21 182.16 l
117.31 181.58 l
117.02 181.01 l
116.44 180.53 l
115.77 180.05 l
115.19 179.48 l
114.61 178.9 l
114.32 178.23 l
113.75 175.93 l
113.84 173.44 l
114.42 171.15 l
115.38 169.04 l
116.73 167.51 l
118.08 166.17 l
119.62 165.02 l
121.25 164.06 l
122.89 163.29 l
124.62 162.72 l
126.45 162.14 l
128.28 161.67 l
130.11 161.28 l
131.93 160.8 l
133.76 160.32 l
135.59 159.85 l
137.32 159.27 l
139.06 158.5 l
140.69 157.74 l
142.33 156.69 l
143.58 156.49 l
144.83 156.11 l
145.98 155.54 l
147.04 154.87 l
148.01 154.0 l
148.87 153.05 l
149.54 152.09 l
150.22 150.94 l
150.41 149.89 l
150.31 148.74 l
149.83 147.88 l
148.97 147.11 l
148.39 147.11 l
147.81 147.4 l
147.14 147.78 l
146.56 148.16 l
145.98 148.64 l
145.5 149.12 l
145.21 149.41 l
145.12 149.5 l
145.7 149.22 l
146.27 148.83 l
146.75 148.55 l
147.43 148.45 l
147.91 148.83 l
148.2 149.41 l
148.29 149.89 l
148.29 150.56 l
147.62 151.04 l
147.04 151.71 l
146.37 152.28 l
145.6 152.86 l
144.93 153.43 l
144.16 153.81 l
143.29 154.1 l
142.52 154.1 l
143.1 152.28 l
143.39 150.27 l
143.48 148.26 l
143.67 146.25 l
143.87 144.24 l
144.35 142.32 l
145.31 140.5 l
146.66 138.87 l
147.81 137.63 l
148.97 136.29 l
150.22 135.04 l
151.66 133.89 l
153.11 132.94 l
154.65 132.27 l
156.28 131.98 l
158.11 132.07 l
158.4 132.36 l
158.78 132.65 l
159.17 132.84 l
159.46 133.13 l
159.07 133.51 l
158.59 133.7 l
158.21 133.89 l
158.11 134.37 l
158.69 134.76 l
159.26 134.95 l
160.03 135.04 l
160.71 134.85 l
161.29 134.28 l
161.57 133.61 l
161.67 132.94 l
161.57 132.27 l
161.48 131.4 l
161.0 130.64 l
160.13 129.97 l
159.07 129.39 l
157.82 129.3 l
156.67 129.39 l
155.51 129.59 l
154.45 129.87 l
153.39 130.35 l
152.43 130.73 l
151.66 131.31 l
150.89 131.79 l
151.47 129.97 l
152.14 128.15 l
152.91 126.43 l
153.78 124.61 l
154.74 122.88 l
155.7 121.06 l
156.76 119.34 l
157.92 117.71 l
h
eofill
n
183.71 169.23 m
185.05 165.69 l
185.82 161.95 l
186.11 158.03 l
185.92 154.1 l
185.15 150.27 l
183.9 146.53 l
182.17 143.18 l
179.86 140.12 l
178.99 139.35 l
177.74 138.68 l
176.39 138.01 l
174.95 137.44 l
173.6 137.05 l
172.45 136.77 l
171.58 136.77 l
171.2 136.96 l
171.58 137.44 l
172.35 138.11 l
173.41 138.97 l
174.66 139.83 l
176.01 140.79 l
177.26 141.75 l
178.32 142.7 l
178.99 143.47 l
180.05 146.15 l
180.92 148.93 l
181.49 151.9 l
181.88 154.87 l
182.07 157.93 l
181.88 160.99 l
181.59 163.96 l
180.92 166.84 l
180.72 167.6 l
180.53 168.46 l
180.24 169.23 l
179.86 169.9 l
179.47 170.67 l
178.99 171.34 l
178.51 171.91 l
177.93 172.58 l
176.01 174.02 l
173.89 175.07 l
171.58 175.74 l
169.46 176.22 l
167.44 176.41 l
165.81 176.41 l
164.75 176.41 l
164.36 176.41 l
165.71 177.37 l
167.16 177.94 l
168.79 178.33 l
170.43 178.42 l
172.06 178.23 l
173.7 177.94 l
175.24 177.47 l
176.68 176.89 l
177.74 176.12 l
178.8 175.36 l
179.76 174.5 l
180.72 173.54 l
181.59 172.49 l
182.36 171.43 l
183.13 170.38 l
h
eofill
n
90.266 173.25 m
90.266 164.63 l
90.266 145.77 l
89.977 126.71 l
89.207 118.0 l
88.726 118.0 l
87.379 117.9 l
85.358 117.71 l
82.567 117.62 l
79.392 117.33 l
75.638 117.14 l
71.693 116.85 l
67.459 116.66 l
63.225 116.37 l
58.894 116.18 l
54.756 115.89 l
50.811 115.7 l
47.25 115.6 l
44.074 115.51 l
41.476 115.41 l
39.551 115.41 l
36.664 173.54 l
h
eofill
n
166.48 161.86 m
166.77 160.52 l
166.77 159.18 l
166.58 157.83 l
166.19 156.59 l
165.52 155.34 l
164.85 154.2 l
163.98 153.05 l
163.02 151.99 l
162.54 151.71 l
161.96 151.51 l
161.48 151.32 l
160.9 151.23 l
160.32 151.23 l
159.65 151.23 l
158.78 151.23 l
157.92 151.42 l
158.3 150.94 l
158.69 150.56 l
159.17 150.17 l
159.65 149.89 l
160.23 149.6 l
160.8 149.41 l
161.38 149.31 l
161.96 149.22 l
162.63 149.31 l
163.4 149.5 l
164.27 149.6 l
165.13 149.6 l
166.0 149.6 l
166.67 149.6 l
167.25 149.41 l
167.54 149.22 l
167.54 147.88 l
167.35 146.73 l
166.96 145.58 l
166.29 144.52 l
165.52 143.47 l
164.65 142.61 l
163.79 141.84 l
162.82 141.17 l
163.59 140.88 l
164.46 140.79 l
165.33 140.79 l
166.1 140.88 l
166.96 141.08 l
167.73 141.36 l
168.5 141.75 l
169.18 142.13 l
169.85 142.61 l
170.33 143.18 l
170.91 143.85 l
171.39 144.52 l
171.97 145.19 l
172.54 145.86 l
173.22 146.34 l
174.08 146.73 l
174.47 145.96 l
174.76 145.1 l
174.76 144.33 l
174.57 143.47 l
173.7 142.13 l
172.64 141.08 l
171.49 140.21 l
170.23 139.54 l
168.79 138.97 l
167.35 138.59 l
165.9 138.3 l
164.46 138.01 l
163.79 138.3 l
163.11 138.59 l
162.44 138.87 l
161.67 139.16 l
161.0 139.45 l
160.32 139.93 l
159.75 140.41 l
159.17 141.08 l
159.36 141.46 l
159.65 141.65 l
160.03 141.84 l
160.42 141.94 l
160.9 142.03 l
161.38 142.13 l
161.77 142.23 l
162.15 142.42 l
163.11 143.37 l
163.98 144.33 l
164.65 145.39 l
164.94 146.53 l
163.98 146.25 l
162.92 146.25 l
161.96 146.34 l
161.0 146.73 l
160.03 147.11 l
159.07 147.68 l
158.21 148.35 l
157.34 149.12 l
156.18 150.65 l
155.51 152.47 l
155.32 154.39 l
155.8 156.21 l
156.38 156.02 l
156.67 155.54 l
156.86 154.96 l
157.05 154.29 l
157.24 153.72 l
157.63 153.14 l
158.11 152.86 l
158.98 152.76 l
159.36 152.76 l
159.75 152.76 l
160.13 152.76 l
160.61 152.76 l
161.0 152.86 l
161.48 153.05 l
161.86 153.24 l
162.15 153.53 l
163.4 156.21 l
163.4 158.98 l
162.63 161.76 l
161.57 164.63 l
160.8 167.31 l
160.8 169.9 l
161.96 172.2 l
164.94 174.11 l
165.13 172.77 l
165.52 169.42 l
166.0 165.4 l
h
eofill
n
87.186 120.1 m
85.262 119.91 l
82.856 119.82 l
79.873 119.53 l
76.505 119.34 l
72.944 119.15 l
69.095 118.96 l
65.149 118.67 l
61.204 118.48 l
57.451 118.29 l
53.794 118.09 l
50.426 117.9 l
47.539 117.71 l
45.037 117.62 l
43.208 117.52 l
41.957 117.42 l
41.572 117.42 l
39.648 171.82 l
87.956 171.15 l
h
[/DeviceRGB] cs 0.149 0.678 0.91 sc
eofill
n
95.751 110.62 m
95.559 110.53 l
95.174 110.34 l
94.5 109.95 l
93.538 109.48 l
92.383 108.9 l
91.036 108.23 l
89.592 107.56 l
88.052 106.89 l
86.32 106.22 l
84.588 105.55 l
82.856 104.97 l
81.027 104.4 l
79.295 103.92 l
77.563 103.63 l
75.927 103.44 l
74.387 103.44 l
73.233 100.47 l
72.559 96.739 l
72.27 93.675 l
72.27 92.334 l
70.827 93.962 l
70.346 96.165 l
70.442 98.559 l
70.827 100.86 l
71.019 101.43 l
71.308 102.1 l
71.597 102.68 l
71.885 103.16 l
72.367 103.63 l
72.848 104.11 l
73.329 104.4 l
74.003 104.69 l
74.772 104.69 l
76.023 104.88 l
77.756 105.36 l
79.776 105.93 l
81.894 106.6 l
83.914 107.27 l
85.743 107.94 l
87.186 108.33 l
85.743 108.42 l
83.433 108.33 l
80.546 108.23 l
76.986 108.04 l
72.944 107.75 l
68.614 107.46 l
63.994 107.18 l
59.375 106.79 l
54.66 106.41 l
50.137 106.12 l
45.903 105.74 l
42.053 105.45 l
38.589 105.17 l
35.895 105.07 l
33.777 104.88 l
32.623 104.88 l
32.719 105.36 l
32.911 105.84 l
33.104 106.22 l
33.2 106.79 l
33.681 106.89 l
34.547 106.89 l
35.606 106.99 l
36.953 107.18 l
38.493 107.27 l
40.225 107.46 l
42.15 107.66 l
44.267 107.85 l
46.576 108.04 l
48.886 108.23 l
51.388 108.52 l
53.986 108.71 l
56.681 108.9 l
59.375 109.19 l
62.166 109.38 l
64.957 109.57 l
67.651 109.86 l
70.442 110.05 l
73.136 110.24 l
75.735 110.43 l
78.333 110.53 l
80.739 110.72 l
83.145 110.82 l
85.358 110.91 l
87.379 111.01 l
89.207 111.01 l
90.939 111.1 l
92.383 111.01 l
93.634 111.01 l
94.596 110.91 l
95.366 110.82 l
h
[/DeviceGray] cs 0.0 sc
eofill
n
37.049 82.567 m
36.761 82.663 l
35.991 82.854 l
34.836 83.141 l
33.296 83.429 l
31.468 83.907 l
29.351 84.386 l
27.137 84.961 l
24.924 85.535 l
22.615 86.11 l
20.305 86.684 l
18.188 87.259 l
16.263 87.834 l
14.627 88.312 l
13.28 88.791 l
12.318 89.078 l
11.837 89.366 l
12.029 89.749 l
12.318 90.036 l
12.703 90.323 l
12.991 90.706 l
39.455 94.25 l
39.648 94.25 l
39.84 95.494 l
39.936 96.835 l
39.744 98.176 l
39.166 99.325 l
38.974 99.325 l
38.397 99.229 l
37.434 99.133 l
36.28 99.038 l
34.932 98.942 l
33.393 98.75 l
31.66 98.559 l
29.928 98.463 l
28.196 98.271 l
26.464 98.08 l
24.924 97.888 l
23.481 97.793 l
22.23 97.697 l
21.171 97.601 l
20.497 97.505 l
20.209 97.505 l
20.016 97.697 l
20.016 97.984 l
20.016 98.271 l
20.016 98.559 l
21.267 98.75 l
22.518 99.038 l
23.866 99.229 l
25.117 99.325 l
26.368 99.516 l
27.619 99.708 l
28.966 99.899 l
30.217 99.995 l
31.468 100.19 l
32.815 100.28 l
34.066 100.47 l
35.413 100.67 l
36.664 100.76 l
37.915 100.95 l
39.263 101.14 l
40.514 101.34 l
41.38 100.19 l
41.957 98.942 l
42.342 97.505 l
42.631 96.165 l
42.92 94.728 l
42.631 93.292 l
41.957 91.951 l
41.284 90.706 l
39.166 90.419 l
38.974 91.951 l
37.627 91.856 l
36.28 91.76 l
34.932 91.664 l
33.681 91.472 l
32.334 91.377 l
30.987 91.185 l
29.736 90.994 l
28.388 90.802 l
27.137 90.611 l
25.886 90.419 l
24.539 90.132 l
23.288 89.94 l
21.941 89.749 l
20.69 89.557 l
19.343 89.366 l
18.092 89.174 l
19.343 88.887 l
20.497 88.6 l
21.748 88.408 l
22.999 88.121 l
24.154 87.834 l
25.405 87.451 l
26.56 87.163 l
27.811 86.876 l
28.966 86.589 l
30.217 86.301 l
31.372 86.014 l
32.623 85.727 l
33.874 85.535 l
35.028 85.248 l
36.28 84.961 l
37.531 84.769 l
38.012 84.865 l
39.263 85.057 l
41.284 85.344 l
43.882 85.727 l
47.058 86.206 l
50.618 86.78 l
54.564 87.355 l
58.605 88.025 l
62.84 88.695 l
66.978 89.27 l
71.116 89.94 l
74.965 90.611 l
78.622 91.185 l
81.701 91.664 l
84.396 92.143 l
86.416 92.526 l
74.003 94.058 l
73.906 94.345 l
74.099 94.824 l
74.387 95.303 l
74.676 95.686 l
94.692 92.526 l
h
eofill
n
72.751 82.567 m
73.233 81.418 l
73.714 80.173 l
74.099 79.024 l
74.58 77.874 l
74.965 76.63 l
75.254 75.385 l
75.542 74.14 l
75.735 72.799 l
74.676 72.32 l
74.099 73.47 l
73.906 74.81 l
73.714 76.055 l
73.329 77.3 l
71.5 82.184 l
71.693 82.471 l
71.982 82.663 l
72.367 82.758 l
h
eofill
n
68.902 82.567 m
69.48 81.513 l
70.057 80.46 l
70.634 79.407 l
71.116 78.353 l
71.597 77.3 l
71.982 76.151 l
72.367 75.002 l
72.559 73.853 l
72.27 73.757 l
72.078 73.565 l
71.789 73.374 l
71.5 73.374 l
71.019 74.427 l
70.634 75.48 l
70.346 76.63 l
70.057 77.683 l
69.672 78.832 l
69.287 79.885 l
68.614 80.843 l
67.844 81.705 l
67.94 81.992 l
68.229 82.279 l
68.517 82.567 l
h
eofill
n
65.053 81.705 m
66.015 80.747 l
66.881 79.79 l
67.651 78.736 l
68.421 77.683 l
68.902 76.534 l
69.287 75.289 l
69.48 74.044 l
69.48 72.799 l
69.287 72.703 l
68.998 72.608 l
68.71 72.608 l
68.421 72.608 l
67.94 73.757 l
67.555 74.906 l
67.266 76.055 l
66.881 77.204 l
66.4 78.353 l
65.823 79.407 l
65.053 80.269 l
63.994 81.13 l
63.994 81.705 l
h
eofill
n
65.245 76.438 m
66.015 74.523 l
66.785 72.608 l
67.362 70.597 l
67.94 68.586 l
68.325 66.575 l
68.71 64.564 l
68.902 62.457 l
69.095 60.446 l
68.517 60.063 l
67.94 59.871 l
67.459 59.871 l
66.978 59.967 l
66.593 60.255 l
66.208 60.638 l
65.919 61.116 l
65.727 61.691 l
65.438 62.266 l
65.342 62.84 l
65.245 63.415 l
65.245 64.085 l
63.994 63.989 l
62.743 63.798 l
61.396 63.51 l
60.049 63.223 l
58.605 62.936 l
57.066 62.553 l
55.526 62.17 l
53.794 61.882 l
26.656 73.086 l
27.041 73.47 l
27.137 74.044 l
27.137 74.523 l
27.041 74.906 l
54.082 63.893 l
55.526 64.276 l
56.969 64.564 l
58.413 64.851 l
59.856 65.138 l
61.204 65.521 l
62.647 65.904 l
63.994 66.287 l
65.245 66.862 l
65.149 68.681 l
64.86 70.788 l
64.379 72.895 l
63.802 75.002 l
63.128 76.917 l
62.647 78.449 l
62.262 79.407 l
62.07 79.79 l
62.743 79.694 l
63.225 79.407 l
63.706 79.024 l
64.091 78.545 l
64.379 78.066 l
64.668 77.491 l
64.957 76.917 l
h
eofill
n
126.06 77.683 m
126.06 77.204 l
125.87 76.63 l
125.39 75.864 l
124.91 75.097 l
124.33 74.427 l
123.85 73.853 l
123.47 73.47 l
123.37 73.278 l
115.19 46.465 l
114.61 45.316 l
114.52 44.167 l
114.71 43.113 l
115.09 41.964 l
115.67 40.815 l
116.15 39.666 l
116.63 38.517 l
116.92 37.272 l
117.11 35.548 l
117.02 33.825 l
116.34 32.292 l
115.0 31.335 l
114.32 31.526 l
114.13 32.292 l
114.13 32.963 l
114.13 33.346 l
114.71 34.208 l
114.8 35.165 l
114.71 36.123 l
114.32 37.08 l
113.94 37.847 l
113.46 38.613 l
112.88 39.187 l
112.21 39.666 l
111.63 38.421 l
110.96 37.176 l
110.19 36.027 l
109.42 34.878 l
108.65 33.729 l
107.68 32.58 l
106.82 31.526 l
105.76 30.569 l
107.11 28.558 l
108.55 26.643 l
110.09 24.823 l
111.73 23.099 l
113.36 21.471 l
115.09 19.844 l
116.92 18.407 l
118.85 16.971 l
120.77 15.726 l
122.79 14.577 l
124.91 13.619 l
127.03 12.662 l
129.14 11.991 l
131.36 11.321 l
133.67 10.842 l
135.98 10.555 l
137.32 10.459 l
138.67 10.363 l
140.02 10.363 l
141.37 10.459 l
142.71 10.555 l
144.06 10.651 l
145.41 10.746 l
146.66 10.746 l
146.47 10.363 l
146.18 10.076 l
145.79 9.8845 l
145.31 9.6929 l
144.83 9.5972 l
144.44 9.4057 l
143.96 9.2141 l
143.58 9.0226 l
139.63 8.5438 l
135.88 8.3523 l
132.32 8.4481 l
128.95 8.8311 l
125.87 9.4057 l
122.98 10.268 l
120.29 11.225 l
117.69 12.47 l
115.38 13.906 l
113.17 15.534 l
111.15 17.258 l
109.32 19.173 l
107.59 21.088 l
106.05 23.195 l
104.6 25.398 l
103.26 27.696 l
102.78 28.175 l
102.29 28.366 l
101.62 28.366 l
100.95 28.079 l
100.27 27.792 l
99.504 27.409 l
98.83 27.121 l
98.157 26.93 l
96.328 26.643 l
94.692 25.972 l
93.056 25.11 l
91.613 23.961 l
90.266 22.716 l
89.111 21.28 l
88.052 19.844 l
87.186 18.407 l
87.186 19.173 l
87.571 21.663 l
88.341 24.536 l
89.592 26.93 l
87.667 27.696 l
85.839 28.749 l
84.011 29.898 l
82.278 31.239 l
80.546 32.675 l
78.814 34.208 l
77.274 35.74 l
75.735 37.272 l
74.003 36.985 l
72.174 36.506 l
70.538 36.027 l
68.806 35.453 l
67.17 34.782 l
65.534 34.112 l
63.994 33.25 l
62.455 32.292 l
60.915 31.335 l
59.471 30.281 l
58.028 29.132 l
56.681 27.983 l
55.333 26.643 l
54.082 25.302 l
52.831 23.866 l
51.677 22.429 l
51.003 21.376 l
50.329 20.227 l
49.752 19.077 l
49.271 18.024 l
48.79 16.875 l
48.309 15.726 l
47.924 14.481 l
47.539 13.332 l
46.865 13.811 l
46.48 14.577 l
46.288 15.439 l
45.999 16.3 l
45.999 19.173 l
46.48 21.759 l
47.442 24.249 l
48.886 26.547 l
50.522 28.654 l
52.543 30.569 l
54.66 32.292 l
56.969 33.92 l
57.932 34.495 l
58.99 34.974 l
59.953 35.453 l
61.011 35.931 l
62.07 36.314 l
63.128 36.697 l
64.187 37.08 l
65.245 37.464 l
66.304 37.751 l
67.362 38.038 l
68.517 38.421 l
69.576 38.708 l
70.731 38.996 l
71.789 39.283 l
72.944 39.57 l
74.003 39.858 l
73.521 40.911 l
72.944 42.06 l
72.367 43.209 l
71.789 44.263 l
71.212 45.412 l
70.731 46.561 l
70.153 47.806 l
69.768 48.955 l
49.656 42.443 l
48.982 42.73 l
47.346 43.401 l
44.94 44.263 l
41.765 45.412 l
38.108 46.752 l
33.97 48.093 l
29.639 49.625 l
25.213 51.157 l
20.69 52.689 l
16.359 54.126 l
12.318 55.467 l
8.6609 56.711 l
5.6777 57.765 l
3.2719 58.531 l
1.8284 59.01 l
1.251 59.201 l
1.251 61.404 l
48.79 44.741 l
69.095 51.54 l
68.71 52.785 l
68.517 54.222 l
68.036 55.371 l
66.978 55.658 l
49.848 49.912 l
49.078 49.817 l
47.346 50.2 l
44.94 50.774 l
41.765 51.54 l
38.108 52.594 l
34.066 53.743 l
29.832 55.083 l
25.405 56.424 l
21.075 57.765 l
16.841 59.105 l
12.895 60.446 l
9.3345 61.499 l
6.3513 62.457 l
4.138 63.223 l
2.5982 63.702 l
2.1171 63.893 l
1.8284 63.893 l
1.6359 64.468 l
1.6359 65.043 l
1.6359 65.617 l
1.6359 66.287 l
48.79 52.019 l
66.881 57.956 l
67.555 58.531 l
68.517 59.201 l
69.672 59.871 l
70.923 60.542 l
72.174 61.212 l
73.425 61.882 l
74.484 62.361 l
75.446 62.744 l
75.735 62.17 l
75.638 61.595 l
75.254 61.116 l
74.772 60.542 l
74.291 60.063 l
73.714 59.584 l
73.233 59.105 l
72.944 58.531 l
72.078 57.094 l
71.597 55.85 l
71.597 54.605 l
71.885 53.264 l
72.463 51.923 l
73.233 50.487 l
74.195 48.763 l
75.254 46.848 l
76.505 44.837 l
77.756 42.922 l
79.103 41.007 l
80.546 39.187 l
81.99 37.368 l
83.53 35.548 l
85.262 33.92 l
86.994 32.292 l
88.149 31.814 l
89.4 31.335 l
90.554 30.952 l
91.805 30.569 l
93.153 30.377 l
94.404 30.281 l
95.751 30.377 l
97.098 30.569 l
98.927 31.526 l
100.66 32.675 l
102.29 33.92 l
103.93 35.453 l
105.37 36.985 l
106.72 38.613 l
107.88 40.432 l
108.84 42.252 l
120.1 75.385 l
120.68 75.959 l
121.35 76.63 l
122.02 77.204 l
122.7 77.683 l
123.47 78.066 l
124.33 78.162 l
125.2 78.066 l
h
eofill
n
153.39 2.7024 m
151.08 2.7024 l
151.37 4.8091 l
152.14 10.555 l
153.2 18.79 l
154.65 28.462 l
156.18 38.421 l
157.82 47.71 l
159.46 55.179 l
160.9 59.871 l
162.44 60.542 l
164.17 61.212 l
166.0 61.691 l
167.83 62.074 l
169.66 62.17 l
171.58 62.074 l
173.31 61.691 l
175.05 60.925 l
170.33 31.143 l
171.68 31.622 l
173.12 32.292 l
174.57 33.059 l
176.1 34.016 l
177.45 35.165 l
178.61 36.314 l
179.57 37.655 l
180.15 38.996 l
180.44 41.964 l
181.11 48.859 l
181.78 56.328 l
182.07 61.404 l
181.98 62.84 l
181.78 64.468 l
181.4 66.192 l
180.92 67.915 l
180.24 69.639 l
179.38 71.363 l
178.22 72.799 l
176.87 74.14 l
174.57 74.619 l
172.16 75.002 l
169.85 75.193 l
167.54 75.289 l
165.23 75.289 l
162.92 75.193 l
160.52 74.906 l
158.3 74.619 l
155.99 74.14 l
153.78 73.661 l
151.47 72.991 l
149.35 72.32 l
147.14 71.554 l
145.02 70.788 l
142.9 69.926 l
140.88 68.969 l
137.9 67.341 l
135.59 65.617 l
133.96 63.893 l
132.8 62.074 l
131.93 60.255 l
131.26 58.244 l
130.59 56.233 l
129.72 54.126 l
127.41 39.091 l
127.51 36.985 l
127.7 34.878 l
127.99 32.771 l
128.37 30.76 l
129.05 28.941 l
130.01 27.217 l
131.26 25.685 l
132.9 24.536 l
134.34 23.961 l
135.69 23.482 l
137.03 23.099 l
138.19 22.812 l
139.34 22.525 l
140.5 22.333 l
141.56 22.238 l
142.62 22.238 l
143.58 22.238 l
144.64 22.238 l
145.6 22.333 l
146.66 22.525 l
147.72 22.716 l
148.77 23.004 l
149.93 23.291 l
151.18 23.578 l
151.47 23.195 l
151.47 22.621 l
151.28 21.95 l
151.18 21.471 l
150.03 21.088 l
148.87 20.801 l
147.81 20.418 l
146.75 20.227 l
145.7 20.035 l
144.64 19.844 l
143.58 19.652 l
142.52 19.652 l
141.46 19.556 l
140.5 19.556 l
139.44 19.652 l
138.38 19.748 l
137.32 19.939 l
136.17 20.131 l
135.11 20.418 l
133.96 20.705 l
132.51 21.28 l
130.97 21.95 l
129.62 22.812 l
128.28 23.77 l
127.03 24.919 l
125.97 26.164 l
125.2 27.504 l
124.52 29.037 l
123.85 33.633 l
123.66 38.23 l
123.75 42.826 l
124.24 47.423 l
125.01 51.923 l
126.06 56.328 l
127.32 60.638 l
128.85 64.755 l
129.62 66.0 l
130.39 67.054 l
131.16 68.011 l
131.93 68.873 l
132.8 69.543 l
133.67 70.214 l
134.63 70.788 l
135.59 71.267 l
136.65 71.746 l
137.8 72.129 l
138.96 72.512 l
140.31 72.895 l
141.65 73.278 l
143.1 73.661 l
144.73 74.044 l
146.47 74.523 l
146.66 74.523 l
147.14 74.619 l
147.91 74.81 l
148.97 75.002 l
150.31 75.289 l
151.76 75.576 l
153.3 75.864 l
155.03 76.151 l
156.86 76.438 l
158.59 76.725 l
160.42 77.013 l
162.15 77.3 l
163.88 77.491 l
165.42 77.683 l
166.77 77.779 l
168.02 77.779 l
170.14 77.779 l
172.26 77.587 l
174.28 77.204 l
176.2 76.725 l
177.93 75.959 l
179.47 75.002 l
180.92 73.661 l
182.07 72.033 l
183.03 69.639 l
183.61 66.862 l
183.9 63.702 l
184.0 60.446 l
184.0 57.094 l
183.8 53.743 l
183.71 50.583 l
183.71 47.71 l
183.51 45.316 l
183.42 43.113 l
183.23 40.815 l
182.84 38.708 l
182.17 36.697 l
181.21 34.878 l
179.86 33.154 l
177.93 31.622 l
176.97 31.048 l
175.91 30.377 l
174.95 29.803 l
173.99 29.228 l
172.93 28.558 l
171.97 28.079 l
170.91 27.6 l
169.85 27.121 l
165.71 2.7024 l
163.59 2.7024 l
172.83 59.871 l
171.87 60.063 l
170.52 60.063 l
168.98 59.871 l
167.25 59.584 l
165.42 59.105 l
163.88 58.627 l
162.54 58.244 l
161.57 57.765 l
h
eofill
n
168.79 72.32 m
167.06 71.842 l
165.42 71.363 l
163.79 70.884 l
162.15 70.405 l
160.61 69.926 l
159.07 69.448 l
157.63 68.873 l
156.09 68.394 l
154.65 67.915 l
153.2 67.341 l
151.85 66.862 l
150.41 66.383 l
148.97 65.809 l
147.62 65.33 l
146.18 64.755 l
144.83 64.276 l
142.62 62.649 l
140.88 60.638 l
139.54 58.435 l
138.57 55.945 l
137.8 53.36 l
137.23 50.678 l
136.75 47.997 l
136.26 45.412 l
135.98 28.654 l
135.69 28.558 l
135.3 28.558 l
134.82 28.654 l
134.34 28.749 l
133.86 28.941 l
133.47 29.037 l
133.19 29.228 l
133.09 29.228 l
132.99 33.633 l
132.99 38.038 l
133.19 42.539 l
133.57 46.848 l
134.34 51.157 l
135.49 55.275 l
137.13 59.105 l
139.34 62.744 l
140.69 63.606 l
142.13 64.468 l
143.58 65.234 l
145.02 65.904 l
146.47 66.575 l
148.01 67.245 l
149.54 67.82 l
151.08 68.298 l
152.62 68.873 l
154.16 69.256 l
155.7 69.735 l
157.34 70.214 l
158.88 70.597 l
160.52 70.98 l
162.05 71.363 l
163.69 71.746 l
164.36 71.842 l
164.94 71.937 l
165.62 72.033 l
166.29 72.033 l
166.87 72.129 l
167.54 72.225 l
168.12 72.225 l
h
eofill
n
154.93 2.7982 m
161.09 39.858 l
164.36 57.286 l
164.46 57.669 l
164.75 57.765 l
165.23 57.765 l
165.62 57.765 l
162.63 39.283 l
156.57 2.7982 l
h
eofill
n
54.66 120.1 m
53.89 152.86 l
47.25 152.76 l
48.02 120.01 l
h
[/DeviceRGB] cs 0.62 0.91 1.0 sc
eofill
n
64.091 120.58 m
63.225 165.69 l
56.584 165.59 l
57.354 120.39 l
h
eofill
n
73.425 120.97 m
72.559 158.22 l
65.919 158.03 l
66.689 120.87 l
h
eofill
Q
Q
Q
q
0.75075 w
1 j
[0.75075 0.75075 ] 0.0 d
n
244.88 1.1307 147.0 186.75 re
[/DeviceGray] cs 0.0 sc
S
Q
0.75075 w
1 j
n
267.38 146.63 102.0 24.75 re
[/DeviceGray] cs 0.0 sc
S
275.42 154.28 m
%ADOBeginSubsetFont: VKFBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/VKFBAA+#cb#ce#cc#e5 2 GetGlyphDirectory
2486 <001C60D8A8C9B5EE3102EB79165C108C5C1D23BC2B28F2445C84B09549
C25B66B6542A68951CA4290C446286424BED2C4419DD38B496D2D9A493B262C2
00521A3017DBA2095B4C79B7ADBDBD02D0632F0B7AB65BA2B30DDE907277B544
9FA20042A8DC51F99193BE0D62D73F0624E55160666767664AFDE4E1AFC0A7F6
FD595362A5F2C803E50B0A791861DBEA98D6D8A66A71486F94AA0CD38E8ACD11
CE25A8B5A1B31AF847B4B2A431D02D51967C8E14B179B19B1762E1662960D9F2
65DD8D05705B16468D46C3FCA2CE1A3A41C2AEA23E3AA69335BE80324EE481D0
08> |
2594 <001C60D8A8C9B5EE3102B5A8B1125F4B087DA025FBF0BC12B76C9318F5
40B28E97A85650C0FC213BEE61ACEBA936F49E0A24F5BF600CEE9C9BEE0371BD
689B832312F0E9958C2C1414FE95BCD3F2926ACA36C5E389AC0079B5AE44A83C
EC6849A16EAB1BD81295DDDD1441E9ACF09D7E1EF16883A340CA2B15A3460DED
76C9B9E2E0ADC7894C7F5C865F0630CC9AA369D927986BBE6C225ABB6D09F2B5
936A3B42B2A287B80F2B28F4DC715F300021296C73E73FF3C0C537D90F4F77E3
D63D5D2EBBA186155DB2D02E8F14B3B377A74CB6C441E8B737560427B82C8B> |
!
end
end end
%ADOEndSubsetFont
/N7 14.3 Tf
(\t\266\n")
[14.25 14.25 ] pdfxs
303.95 154.28 m
%ADOBeginSubsetFont: VKFBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/VKFBAA+#cb#ce#cc#e5 4 GetGlyphDirectory
7735 <001C60D8A8C9B5EE31038D5D1282FB89803D0087920CA8DCC3E5AFABBC
F7429D831100F27506BB16F9E1F042F1F730F5F500B574B73F4A1E36E1EAC355
A5AD2690B1A571BDB605775087D72913AC03EAF034645F238B447D9EA1342D51
156432BFD7CBE8FBCE339ACA50B3098B754CA1E663FC45C6A093E249B9D3326E
DE71AAA13E2592857B63843669CF83A3C04BD2C728C30F751D66B59CE47F9E36
626D9B7F575248AB41B795F2C716C91ADD762963F474308808B64BE37A320D15
D1B00F3E72596219B156353984A12844231958B3883FF500F227412EF331833F
D21502C4DCD00CD97EA10EBD82B12A0E439DB35A17B4B804DEB4F55BF2D4FC71
2A216707BF4F8E59A186F37A243E6EABD872> |
8984 <001C60D8A8C9B5EE3102B5A9839F635E86BF793A9BD1B2F87BCF282168
C81B8529C6067AD0F8A7FD570C2A3CE4E525BC8AC94993AAA0AA4ADE3E5D1856
FA3825AD140EC0B8880243BAD1B3BC4832D53A428BD08CC0756977DB132DB460
662754C281BD5E8063BFE957F105BC6669FAE00686359339C9A469D1E41A11E6
9AEC7B1DB9CC82442A4EE21077A4754F0FADEB23AEF7FF251CB95285372176E9
AA1B5AF9C43469130001454F6A67C694575773FC44481688C2FE1585FA307E4F
275993E28BDEA783A1584524270DFF89E2352C6C40EB73B45247523ECE105F28
90680B71BE9686910A30AACF181E4B6AE4647F7F4F8A637C8C035FD3B695CB8D
2FEB4D211AD69764797126EE90406E061375D97722472FDF3B1239EDD0> |
9087 <001C60D8A8C9B5EE310DFB9CC0E4216536347F9B9033142527D7B2ACC1
B31A4B56461CCC1CB588CC5B4F127F357FB3D0040C11FA6D2E39DB056613B7FA
D8C62A26453B9C2615FA1398CFCDC6AC1FEF7668B27A68C5DDBFCB8AF49A6E13
2B40A76EC4475C10EFC41B44898086D38D380CF6BEE14749E6C23918DC35A001
4BDA1F5D8A6F4283EC0B1B6A09C731E2CC72F767F19FC0F28CD583E504C90E64
FE1B44E36967D2780068CE5D77309699B57793307FAC65C6D116A44306F22759
9F96453B384012EE59A37D4E796B5B638C5B0B1AFF22ADBB75CAB882979AFBAE
01F0D15967A4753BFFC1F8D12623782A865766B765BD1954782DE58C080621C2
3C1BBE0D55C204B4A3D89CA69C9D14E7F46DA3F35CC752BEE860688373694A2D
FC30089917965CF50BEAFD71FF7FA07743C7C332AF468FA83FCFD36B90060286
DD3C7A4CA0BED8E025308F165971AFADA731A3D2252F70AEFF968DC90F0457CA
541A2BDABE2D9F030292966B7446760F85DFEF29C94DFFAA29AB485EAA37B3CA
0939954E92FFDB> |
16376 <001C60D8A8C9B5EE310D85C7947E6C31FCCBCE52CEF8FAADB228A1D5C
A43E7FD30312A4AB041A4D9BB2FCBD40C55A763F9A814ADCAADC77EE40CA52C8
98FB8D55EE470603B9EDB7900BC8278E6D1D92D84D31F4B43AFE15ECC4A2DA82
83143DB07AF7755975D02BE7F971046EDD1935A389E9116297C973A22166ED54
A44292DF4C347E317B86C80231F88B8A48352D7B5ACD13CECF80D70F0697D068
3C582C00B66044387A48F74739F66DE6316D9A43740F2147F46C3FFA1BBF779F
EE4B60D803460E58339CCC0BCB9697325C3E08BA7634A95FF5EF8762A5D627AC
2044F68A809104AC83870D753C325511670EAF9197582AEBED4AB0C3C6157C8C
862FF4D6D3F365076DD17B69A27E02B0BACD0C2D6AE6AE2B7FCDA1A7D6CA7063
69DF6D242D1458456AA016FB925343F140425CFAAD34B010013FB25CA8C9C605
936858F2144A4C9C702B5724E5E0DECCFD357E5C8A75E01BD3B963E28270DCE8
FB8013354C6BBE0E27DF2CC> |
!
end
end end
%ADOEndSubsetFont
(\0367#\030#?\370)
[14.25 14.25 14.25 14.25 ] pdfxs
n
267.38 101.63 102.0 24.0 re
S
275.42 108.73 m
%ADOBeginSubsetFont: VKFBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/VKFBAA+#cb#ce#cc#e5 6 GetGlyphDirectory
17921 <001C60D8A8C9B5EE310DDF0C6B1F5B86CA13A46E4EA9126916FB14C9F
205F1982F02B7085D16786D4453AA510DF8A0B5BE306F2D69565A4BA52A39448
D90947885A94272803CF71DFCEFE5D6A7EC9DCF64118EB9C7EF4C78398227B24
D004E62808A5611D91163EE6C25A4FF9F0FA20944AAF2F744C89F8129F30A156
A9D6B71B50F57691DC657EB79B552A4256BDED02E32EAC662E9F4A980916CCC3
5FC09D2E192DE218BF300BDD6CCC88440AC42516633E82FB336DCC9926052C3B
D45B06ACE8E03F66B8C17EC6C78AC21381BA345B2F1E6606540BEFD4228FBCD0
A82155DA431BB92ECC7E8A9B91A4A379A2C74EE0F897FDC6DFF102CA7AA2D17B
49C347945F64B45ABA61F2A72A5B08A7BB35E78B4F7B5E04ACC29> |
18155 <001C60D8A8C9B5EE310213561B2646AA1533456DCA9B354F02E57D6A2
96290456829546B9EEA82E4B5BC3330357F0B9698D4887DBDE7A442E120C03D0
AA2E1C3A106D4EF03DE9D3049602EF43DDEA2E4CD030D108B0531B6DA4239218
AEA7428883E1BB87122BAE60386DF477FEFC5811CF027C7599C60EABE121B7A7
B0E422D14A79E9C7E1EA95DA96F455D70EADD98E2EE96141BBE90A644748067E
6184FA7EC0A3530874E2748DA141180FE11660E9E9471199DCACA498BF2A2131
19A3744456425ED9586BFFEC3B640973D0E474695EC97E6D042C0343813BE9FF
9A3A5F26CAFF8FE796EDE62D1E0363CA147C0626E851A0679BE08AE23086100B
844092965F3D30EB4ADDD72663359D8DB19924E5A97574D83DC3C53F70AE2E42
2C9D5ED62C3C547D511E2E7A3180BB0C2C85647C18F0060E51C782A2C35A66EA
FCEDCAC0179B3F86BCF5DAFB4C293E25CDCA27825> |
13697 <001C60D8A8C9B5EE31027CA2D5FE57A488848ECAB0229290437F39DAC
1F9D9B6A98D0945AD963E74E9D5F66BF44866B6D15A1DA182F437765D419032B
573C9AB4A50B573B64457ED87E2AA1E5474F4C8E798C09A69183791EE61C0D69
CF414E1B60848A6A34296361455AC32F87F288EB1B620CAA77E9F5115111EA58
7B1AC6AB2FD65C97344522CB12ED1C32BEC471778E4FA699D10E5C5E17FAFF0E
2AE296BF86A4E23BA4D3FA0046A2618DEF54F56AFDD67A384A37C7DB5E80D295
C8DA94C384AC1D9D825D723B6C28943ABD18534BE1E0E5DABE7AEA35EB25F29E
078EC30663B3388703B3098EB28FDF9A6A2B2FC07E1EB2C83F521FD97AAAB3A0
9661E8C59DF9FE83BF7A2A6E5125C98A9790E3E9FEEB97950682DB6A309550E6
3F7> |
13580 <001C60D8A8C9B5EE3102A9F7DB715D5656D1E3A4CDF72215DCD41377F
4D27495710DF55ACBDCB2A90523D10575301C8B61B78901F0726781E255CE31D
00CCFAD4A596C85941D7DEF20C6F4B2570CE1B5F366658D5471BC55F3F66E8E0
3F11AB2961C14160B456A393B8DFE71D07E8385270958F5B1D1CE2C66FD8C404
093FE4BBF9E37D43F9306889394DF72EA7BAC5DF740F64DC9128C68F2D0253E7
2637D15DD96B99E2A618DC98861185016A068638AFC87EB264A6551613ED798E
9C120C3E0E84B8CA67B85DAF5168B6AEF1CAC44B16D4BE374427AFD58FCA0504
B950617925EA4C7C0E6211F2F8FC4AFA4265B746A563A780F2C46098EF35899E
1F9F9284DD88CBB314389DA86F9344A4A5F0AF4E77978DAEB057F6685421887D
3156C55788061AD6E16C7FB4D9A83A29BBC7397594C88E28F9D9DC573759A1B8
9363D5238709F49E418A5141B040CD7DFDF5066ED79D5F44D67163E0E109AD36
49DB7B262> |
7604 <001C60D8A8C9B5EE310323C8B8CC3C2BBB169F822973A33BD6AD1AEB43
D5CE1B1572D4A2EB30A6DE2380C504A2A5871BD892F51F5CB47BC4CEA761C081
B2526901BE7D8A3529DCD8F1DCC2C19907994238926A5C584CE6F3E0C0DC79F2
EB23FFC2F00D17F74A2F243660F0DFB97663C57C3F64E7B46189129224536DBF
DE22864F0A641F19BEC67A467FAD6A77DAA394F2D7AE6D9028196E14B74398AD
ED048C53D4BA02003E25A5C1D46FDCF939151C36F2AB92B8AEE35341A461BE44
BF3BAD7C7EC45713B43DFCB66A6F097119B32B9D126C57C9190C30234AF1B92F
327EE3DD3241F82C8F90D108A4D355E35DE377FDA6B2C550263D1BF8A4203D41
AD380A2B0E2D59AFE85F40D81D0D3051480D053D49937319E18439C170521334
3DFFCA78D636365E068C49A17B4916F7AF5889DD9B71D13AFED83FB3A3CDE6F4
D071E15A22E94C1D653E610C1F7032> |
5418 <001C60D8A8C9B5EE31023ADA674CC0D686DA81C78E7AA7EA2DE2332FC0
31CF7AD37AD2E95A0E2AE797F6446643752FC3240BD47040AFC8957EDEEFAF55
C39E342E931AB677C9F20209CF5254770D2CC5CE78AD5093032503E6DCBD92A8
D4D304A96C5088DBEDE3F2F9552D9E1FF073E5B4B579CB7F737EC716F04B9B0C
EEF805A8C9FC3481E05ACEA2F4642BF951747772AB645DAAFFC0054D0D7F72B7
3A1B168D18F91BB57DCED5667340C231270BB6A3C866ED323529435DE695B7C9
9BAB7BF03DD979CA9A19F3EA24410726490D14CB67F2D784F1869431965A6F37
F6F6868494E6F277E7377D7F18C9C8FB311AC4896510A6C7B27109C8905FA6B5
B6A04ABAB2CF13026E5D1AA73E833B3F6E6D7D3AFABF273B7E1824F7F63A1984
3B82F54D3D7DC8842A4330E204DEBA80A240C8E51255D9E6AE181E825A996715
603DC57C4E68A38C11A62963454A65E9A477784920AB0D36A37EB48CAD5C46AB
3669407C5A85562E3E07622C7FCF5D5C0F41EC> |
!
end
end end
%ADOEndSubsetFont
(F\001F\3535\2015\f\035\264\025*)
[14.25 14.25 14.25 14.25 14.25 14.25 ] pdfxs
n
267.38 57.381 102.0 24.75 re
S
289.67 64.756 m
%ADOBeginSubsetFont: VKFBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/VKFBAA+#cb#ce#cc#e5 4 GetGlyphDirectory
17268 <001C60D8A8C9B5EE310394B71F1172EFFBB714FE56518A1C25A62BE8F
FE531F684C56D5623C33B41EB7FCCC74B5856EE6053C72B645A5151869B16940
ED0C7AA1338DE6A73D8E71FC8B47A1C24D83B594D14D9464007A785947589538
35AF66DCFD3925F901F1DD173910A37684782604ECD0275438503F0E6395DF83
765BA43E4C082ACD38D3B787DA6041F23F224E63EC4702DE467B476E986DCAC2
DD03BD35DFFA43F80B63EEA9EB87AD9F61A13A2FF2DAF69A094164888EC108DF
5D5F974234C763FD7330806C43B36ED93664D5252E3A9A2212AD5973FAF7091A
1E64AB8AA95353D6BC19A5DE0AC0C4423C64F1D9A2352499F1980D13C9FDBF23
D31C0BB2A95A5A50BE5876850A3ACB6323167582329AEAD11E0CB1BCEDC07272
17F485871DDC050CE9F56C9634CB360C5FADB0B333E5B9A31B7EC0B95D8AC875
3B3641342C9C9285F0FBA271FF9FFAB5D9EB9919BB5BAA4E035F24D34130D7B9
09CD6CFC95BDD99523B522ACF170B46A809462FEA9B9C372E06113E230711903
BF2A7F24F20F1358B18AD84D8DF9B1C8189F241C8535943D69F867D4E01ED796
969F70A37F5B4> |
9408 <001C60D8A8C9B5EE31033B73FA6856B7CDB8D9B4CBDA1C1A160096CD56
0EB4B573D614D63378C7253B1AEEEB2F60B0191F5C3F1867609CEE32BFCFA978
221EFAF8A7330887ABF3FF0F95626380DD1A514B23EA6568931B604EAC4119BB
AA8EE6CFA66FD7D486DCF32BE207E086A12172F65D9DEEE00A049E1ABFD6FFAF
D41A246FC13EEDAE20F0BA7F18990184AB8A7DC2D273F64A85F6B472F393CE91
2422C887DA2856C70B52B83F8E02FBE1FB40CCF42B3CE0C0C01D0C0BD63DEF98
F0300F2E81CB43E5885ADC8E2F2F88EFA77847C7AFBAF1FEFFB5C22432ECF75F
BEB8E89A0BC2A9E3E03BB0BE670BEAEE01AC29BA32803680CA3F0FE3F3D0B68E
1E97BD29EBD4AE39BAF82EDA8237C8BA9A390B234D38898ED11DFEBCE2028C13
5C089CBE78672DE9046822C89574EBA65FDE8AF385472CB4C296E2AF2AD84332
E0EC24EF356CE2051E59AB314E7978CD3BC432B0765C1278569A0BC1DCE9406D
846FF33BE66129010804EF43B6CC0AE9D2562D53A81484B79DB0D4F16975A7B6
D2187AD7BC331F3C9D01DCC8CC8984C8903DCD7F9C2EE82D12664BEABEF23C22
F6C74CB7969AD122C2FFFCB4D3D961D85FC81A019AA3EE25C353> |
6616 <001C60D8A8C9B5EE3102A527B9297C3C2AEAD105B726D553A77CD7B94E
8E9C7CFA252D2F84A3B7B64B6184C601E9B12601733924C054E7CC4EC86A5C51
918B2491C9736126A3A5BFC8170B90832244B8D5B2C3F225488018F0F0740C0A
F06239917A7B17796A2ECCBCC3377410C9B84E799362CBB5D4109A83EDEA671D
95A282EC263BDBED7493B089D6B9575BDA8152090D7F8B36A1C17F1E76B04C7A
AB060672BB58E68D6A1E1E4EFC19D0F5813F5568AEEC5D2C9C56A11F43595F60
16C8F2DFC29818212EA834C7F540E16295446B7702B6B37E06250B0193CCE8F2
3E2FE850FE15D4BA614479DAAB5AB469475EBE145C3316B83FD77D8C5318926A
1FBF865857EE32D5A377A6C1FAEB5F42305FB514648D541B27BA98B364B8D469
A44CD183D3EBEB7C159CA6474FE0F917C1A05CB2C60E4D8575> |
14720 <001C60D8A8C9B5EE310277AAF3D59BDD3A6173BFC411850A34BAFB81C
CFBD89B14ED87AE37C0FA2351B09FC7026A71AB1E794841ED5AC94BFDE788A0C
37D312B472CACFB5055A005EF8910455F0ED35B35FF48008A33440273940E85E
B8BE297EE4393D4FDAE78ED640E9603199D7DD02B92FF8C518021D23944AB5FC
9B5933A1BC3BC4E72F7DE0FB980DBCD97AFBCDBF8FE077FDE4A49A917E23599E
FF4227CEDE6D23D766A1A06A1A5B41C5CAB7498760C4DB5F397734F79C77F102
96C577DDB19774C9BE3AE124045BEF584F70D9D885184FE1EFA4054A28320656
79E8E5BE3674BD1707E9C47A647CC856137628436AFB4DD05ED5C2E56EF15F1E
49478837759BC63F7A58067883F7644895D40393C0F3C696C1C3A73B3D6EEF4E
0F21E81E7DA41DDE271CD22BBE8FA35D8270B87129E6B3431CB25C05A89D8B58
8D2EFEA96443FF0C1> |
!
end
end end
%ADOEndSubsetFont
(Ct$\300\031\3309\200)
[14.25 14.25 14.25 14.25 ] pdfxs
282.92 17.656 m
%ADOBeginSubsetFont: VKFBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/VKFBAA+#cb#ce#cc#e5 3 GetGlyphDirectory
7485 <001C60D8A8C9B5EE310DF4468E0DD9EE91C29BD4CC5A600825D18F3F45
1D27B34C78F004FDD10CADDEBEA6A478E22B992BB99DAA97FE00264A004EEC4C
709E77A941E514ABCA91025130C18156AEBFB12764F812C2B7E67EB2A5CBEB2C
35EC2E9B6B4493F1997AAE93EF066981CBFC33D4084C04734D5BAF4E9409E81A
CF7278AD0A60BBBF06FE9451DC38033AA29B688D70C3A4EAF6939C345A90C47E
4ED41A431A6B937588A8E65B82212D4C09A72B2A9C5FFF37E52C353F16C02DBD
8C4B586A05DBA794707F694F4543ABC12C1B798A59A5E913EDC6232CDCB6E68A
33E4CDAB8A0DED411083B0EC90C6426D21E2FB271F15E7D3C73523DB331589ED
140B9FE815B03F1E8E946C25A86AB787E6BC4D193B6EA45F13059E28F5CE5E4D
4B9F104F83FF92A308732A61C6F25CDF8FDAE89F5C59F8629DBEA8C5065452D5
897947> |
2257 <001C60D8A8C9B5EE310D99A674619721128A7DC3BC873CD801155D2CF9
8F48EF8F18F9D526B508144EFF4FE728962D88A88025B9BEA6D5E412320750CE
973F3A2678830A90DA2BB3E4061386BB9D54A6DB5137941FF776C09E73D00E15
E7ADD468844D7C81E174AF021D815B2E5C1A5C7EF0E9E514506E72B28AFAE442
E6DA746B61EF2852A7FF26DD285C2F793B78E8BA2F760DCEB5CCD3CF4E8E8843
52DA40A204A7DE9DD87492C0F3662CBC4061A9DD1BA70DD403A5C08A30D8FC19
D2E5695CD5C54D0870CDC55CBC181C48C68EAFC34C4BB2FA621B71C707862A9D
4E971178757DC2D2E2DACD75399FF7AEB23D1712384905A416EAD0E756002464
23E0B5CC56B0AEC4D46D91B866E9A437C972BDA1D595E38EAC6391A0F206505F
358837F2F05BD83A6CE33C3D52C151047B> |
3224 <001C60D8A8C9B5EE310226F8FE600279325FB95ED130EE2D8387BA9ACD
4AE76A7A49B671F0A4C1561FA078CFEDA8C43E03249E0671047629A10EF99ABE
DB90666D6F084C170260097D974ACB82E6B01B36BBF5BC6C66E6EC7F43FEC0A5
13ACF280C432A9FF51DE5F872EE7162ED05D65A7DE84C76BE497872909A42F96
5BFD31FD7F007C438801BBDA18B995620185314E6F74D66166CD5370DC698805
95A1AEF1AE72D25E184EFE8E09010C319FD2AEDB719E09E9F839D6078AEC3BED
66993BE37855CD27C9CA9D0BC3D4DADEDF4421EADBB749ADEE1887C1F4B1A377
2E16559D2B033824A2C52A28B19638B41FA0FEB8719C32929A44C9A71834306D
90597B41D25E9CA245A82F74134DEDA3010DEC71C552A3D8CDE5559EF2D0E6BF
3783880A4B552C6A40F60A9F3DECD17383760BA334A56DC09F08AC4BE50D099F
C12C334A6FD0A834CC3EB0CBD0DD3ACF513F5655B6887743C7AD8EBEB2B2F72A
8F92E7F943B6DFAFA6252204BF2AE876DE43495C70D47F0A976AED145C7C8BD2
C9A1651554316A67B65813B4A0D3F8F06F0AFC6C1F> |
!
end
end end
%ADOEndSubsetFont
(\031\3309\200\035=\b\321\f\230)
[14.25 14.25 14.25 14.25 14.25 ] pdfxs
n
103.13 91.881 90.75 24.0 re
S
119.8 98.906 m
%ADOBeginSubsetFont: VKFBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/VKFBAA+#cb#ce#cc#e5 4 GetGlyphDirectory
11096 <001C60D8A8C9B5EE310352EECF602406C0329E1B650528DB4C10B129B
B86AB3C12935CB6FB7137A27A4BA4BEB46A65DAD78F0FC83B360EEE112A00729
2C14046865AC11FD747B83592CED2A9798B5E7F999C0B72B9FFCC81D6B07E08B
CC2AFD5046782CD40247B02D8BCF5AD3D0A43FB505FDE2790A26E7F423F822EF
6D6BC83B41D215AFC9F44E868233463428F43C15281F7CC4D598C4E4BB7A2DA6
57DE7FFCE45F3A8E51DBF933AECA3DC21C0B57AA47644BA5C9C3507C529AD1B> |
6247 <001C60D8A8C9B5EE310366CF9D3A5DBD83A75670FEE48A3F8FEFF4DF41
93AE7D98511713F65390FE7080FDFFBDED5662811A0279E6671728A48D54AD8C
AB68295833563AC29DB1C3B822C342CB2FFC1C9A7FC090887B43462A76FF0798
832CCC37B55D693396FF239F2E28174AC2D9D2C5EF8AB7948029B238E96677E1
DC27E442AB952DB067683A7DD4C21A> |
6613 <001C60D8A8C9B5EE31020F8CAE4E8F093E11044D2392B4368372FAB14F
16FCB2247606035753BC9CC4F4B6D343A357C789FFC6C6F4772D6B2E535CA4F2
201CB0D5B2D37C8CE249564A734198B0DF2AFE1B1A467267962B6A7B7DF18A4E
782D6973C90D9E18913776B0E92A4C0F2EA18E06C7C4CEE224E91C1A7AC3E5E5
30A12A60C6CA39DE8DB4B724DDD5491E4408B4F90F1FE17F4F04DE71E4440D37
9D7CB58ADE3D06634242558847460041C56EC60C98666AEAAC87F4274CE6BB60
1087CF73B1BCD5AEB398747D745CC048D33BBBA930244755BBF8F01678E4B9A8
291347611936502AA0E9C1D61F3824B9C755FFE04E7A61AD712DF9980B8DB8C9
5BF7BEBE41375298F0201F881D056CF327FBDCC51C72909B9DF8A53A7D73DAB7
ABBE9EEA014F8B420135971F9F51676BB86B775B3529E7ECD6E6B3B59C43660B
B05C4ECD5F1D5199EB2572E9AA88FF290DBCFB14EE131D6181CD9353754D893A
A55169D25C8A897C2DEE7906296854B1D196A4A65C069F5CD1C70A45216DA802
D00659718ED7AC7F5AD1A3C3D6DF672B3E90B001F9FBB84A3DE2336B12E91D9A
539E0147A85AD1031F60DB0EF7ED> |
2579 <001C60D8A8C9B5EE310337A891C2D47E2711CF26560A417EB40B284ABE
A864A05A9AF410197BD388D500CACE6F9C48C98872A868C3995AD5CADE7CCF18
87DD8C820F32E3C288735CEA71F4D5F311CEDDDB06DF> |
!
end
end end
%ADOEndSubsetFont
(+X\030g\031\325\n\023)
[14.2749 14.2749 14.2749 14.2749 ] pdfxs
n
505.88 120.66 m
505.88 117.92 491.77 115.69 474.38 115.69 c
456.98 115.69 442.88 117.92 442.88 120.66 c
442.88 120.66 442.88 120.66 442.88 120.66 c
442.88 120.66 l
442.88 123.41 456.98 125.63 474.38 125.63 c
491.77 125.63 505.88 123.41 505.88 120.66 c
505.88 120.66 505.88 120.66 505.88 120.66 c
505.88 120.66 l
505.88 90.849 l
505.88 90.849 l
505.88 88.105 491.77 85.881 474.38 85.881 c
456.98 85.881 442.88 88.105 442.88 90.849 c
442.88 90.849 442.88 90.849 442.88 90.849 c
442.88 90.849 l
442.88 120.66 l
S
453.48 97.356 m
%ADOBeginSubsetFont: VKFBAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/VKFBAA+#cb#ce#cc#e5 3 GetGlyphDirectory
7072 <001C60D8A8C9B5EE31020F8211AF203B409BE69AC0B688D9C4195CDEA8
97FCB81008D07B0C8CD3987DFEB80552CE66A0F34764E7CCAD83482FDA763BC2
41DFE244CA631BE121BA74D14ED08827BED5CF7FDAD9916120290F16594139B5
87175DC6F08A0BABBEEE5F647C28158015A008DC1DED403CCBF0FDC3D256E22A
62A8381F4EC6E8001982C77B4456950D9D8684E2B3A3C0EA1106A026F41E519D
596D271B8CEC4BFA34C3299867C3E65F0D7214BE60EB0DF907C505FE0A791881
BDCE4D1D631A40EBC55AED0E476CD247D92F7DE48CA3B3DCB28F0BB9D74D1FF3
94BE5C10CC13FD408277E3305AE4C1122644B93559435C495C84191A30AF2943
4613EF254B1CBF195384D603AC4E610E6F7A1046F69EAF04F12C503AD9F76BA9
5DE9DCCF38A41FEA697757061E522473505393D2125085D27ED5A972610ABB6C
F8A855BCC7A4A3FE08FC5C47728B23FAC99B0CDA3CE14C6595D6B35F7EEDC6CB
45C8E1858F68BB5242A307E22A31F84F08968825C60FE3E6A7873A483019AE41
780D8F81A778AEE3D504A7BEE4C8C582073B7040E146115DD63CE7E38B840BA3
A7568C10524B2A76C6D0CA56DA683BE6572146A80FDB76D8F05B487235B33877
DF9B297543FCFEDFC262AD5446DAE1> |
6558 <001C60D8A8C9B5EE3102820D8DA70742F33093955F3A403ABF3E984BF7
3C34AFC477CD7E8D31E9297BC95839049736E8D192ACE783D6FB102FC4AEF6AE
6E4498D4622A48F5C3AD21A8B778288E325ED416007AC15FB079436F7AFF4AD0
9EE54CE6E425501067D5F51CF4A3C087CC8B7C525F962D1300858FCB0DD58FEE
762EA44D7EB1F91B8CF9A83797EEBB5767B0667DF5C71EF07E9C361D3E5F3105
BB54EE37E7272BBB5CFCE4FE6E8AA22D4D2D2B0A040738F59DF6C77A0794169C
B580FBB89E535EE5972FC1310D16AC93ACF456204BDC07FD1A36484FB6A60F8C
417998FC954862DD066C5A04C92B53C81EBBA7A2CA2A34D959F4DD9D1DD3752E
A8AB61FF9E5E076107B9F7FB34B41EE2ADCB4CE185FB348126823B1DEE8A8F6C
319FA0C33052ECF010305BC10DBAB461290B82DD368F9C088C1DC366BF9F0DB7
CA> |
5315 <001C60D8A8C9B5EE3100AE813BA6B9A6B5D510A62D3969375E441B9819
978EF569CC17803D6E382616AF639EBCEF6205582E08A6EA750D1255B0FBB65B
9C79EA18BA8B33E986B3896561B36A61B2CD48F57357E29BA69637D838A2EDE8
0E78389634380D185EE131A468840D16810B22E4CA74C9D6625661A3F1986E27
DD12CF40C1084664C7D5F9CF239195F77EE918C74878305BB91645517A88A010
FDFA65025A09D25DBD1644E9FD0AC941EC2F22DD2E953494208DAE3E11CD105F
1A3229949894E3F8187CFB4F90856E823132829C9DB9743A6DF7EB154638CD71
5946EE64E24272D90A3D6657BDD917F68D5AACEB330C8384162F9E8166DF43A7
CFB5DACEFDAD7FD28E58E9> |
!
end
end end
%ADOEndSubsetFont
(\033\240\031\236\024\303)
[14.2749 14.2749 14.2749 ] pdfxs
n
391.87 109.51 m
442.16 109.51 l
442.16 108.76 l
391.87 108.76 l
h
436.34 112.96 m
442.91 109.13 l
436.34 105.3 l
436.16 105.2 435.94 105.26 435.83 105.44 c
435.73 105.62 435.79 105.85 435.97 105.95 c
441.97 109.45 l
441.97 108.81 l
435.97 112.31 l
435.79 112.41 435.73 112.64 435.83 112.82 c
435.94 113.0 436.16 113.06 436.34 112.96 c
h
[/DeviceRGB] cs 0.29 0.494 0.733 sc
f
n
442.9 96.755 m
392.62 96.755 l
392.62 97.506 l
442.9 97.506 l
h
398.43 93.303 m
391.87 97.131 l
398.43 100.96 l
398.61 101.06 398.84 101.0 398.95 100.82 c
399.05 100.64 398.99 100.41 398.81 100.31 c
392.81 96.806 l
392.81 97.455 l
398.81 93.951 l
398.99 93.847 399.05 93.617 398.95 93.438 c
398.84 93.259 398.61 93.199 398.43 93.303 c
h
f
n
193.87 109.51 m
244.16 109.51 l
244.16 108.76 l
193.87 108.76 l
h
238.34 112.96 m
244.91 109.13 l
238.34 105.3 l
238.17 105.2 237.94 105.26 237.83 105.44 c
237.73 105.62 237.79 105.85 237.97 105.95 c
243.97 109.45 l
243.97 108.81 l
237.97 112.31 l
237.79 112.41 237.73 112.64 237.83 112.82 c
237.94 113.0 238.17 113.06 238.34 112.96 c
h
f
n
244.9 96.755 m
194.62 96.755 l
194.62 97.506 l
244.9 97.506 l
h
200.44 93.303 m
193.87 97.131 l
200.44 100.96 l
200.61 101.06 200.84 101.0 200.95 100.82 c
201.05 100.64 200.99 100.41 200.81 100.31 c
194.81 96.806 l
194.81 97.455 l
200.81 93.951 l
200.99 93.847 201.05 93.617 200.95 93.438 c
200.84 93.259 200.61 93.199 200.44 93.303 c
h
f
n
52.125 109.51 m
102.41 109.51 l
102.41 108.76 l
52.125 108.76 l
h
96.594 112.96 m
103.16 109.13 l
96.594 105.3 l
96.415 105.2 96.185 105.26 96.081 105.44 c
95.976 105.62 96.037 105.85 96.216 105.95 c
102.22 109.45 l
102.22 108.81 l
96.216 112.31 l
96.037 112.41 95.976 112.64 96.081 112.82 c
96.185 113.0 96.415 113.06 96.594 112.96 c
h
f
n
103.15 96.755 m
52.868 96.755 l
52.868 97.506 l
103.15 97.506 l
h
58.685 93.303 m
52.123 97.131 l
58.685 100.96 l
58.864 101.06 59.094 101.0 59.198 100.82 c
59.303 100.64 59.242 100.41 59.063 100.31 c
53.057 96.806 l
53.057 97.455 l
59.063 93.951 l
59.242 93.847 59.303 93.617 59.198 93.438 c
59.094 93.259 58.864 93.199 58.685 93.303 c
h
f
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
