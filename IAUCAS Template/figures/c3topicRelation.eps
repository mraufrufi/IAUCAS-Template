%!PS-Adobe-3.0 EPSF-3.0
%%Title: (c3topicRelation.pdf)
%%Version: 1 5
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 17:12:44 03/14/12
%%For: (dell)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 389 303
%%HiResBoundingBox: 0.0 0.0 389.25 303.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3676 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-03-14T17:12:44+08:00</xap:CreateDate>
         <xap:ModifyDate>2012-03-14T17:12:44+08:00</xap:ModifyDate>
         <xap:MetadataDate>2012-03-14T17:12:44+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:DB701282B36DE1119E028FB3AF10D0FC</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:DB701282B36DE1119E028FB3AF10D0FC</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:description>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>dell</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Keywords/>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 389.25 303.0 rectclip
%ADOBeginSubsetFont: BKOAAA+#cb#ce#cc#e5-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (BKOAAA+#cb#ce#cc#e5)
%%Title: (BKOAAA+#cb#ce#cc#e5 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /BKOAAA+#cb#ce#cc#e5 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -145 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28762 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /BKOAAA+#cb#ce#cc#e5-Identity-H /Identity-H 0 [/BKOAAA+#cb#ce#cc#e5] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N6 (BKOAAA+#cb#ce#cc#e5-Identity-H)
/N6 (BKOAAA+#cb#ce#cc#e5-Identity-H) /Identity-H [ (BKOAAA+#cb#ce#cc#e5) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%ADOFlattenerSettings: Flattener used: Transparency:, Level: 75 ex: 300.00 in: 150.00 tx ST CC PO
n
0.0 0.0 m
389.25 0.0 l
389.25 303.003 l
0.0 303.003 l
0.0 0.0 l
q
W
n
0.72 1.494 m
388.098 1.494 l
388.098 302.274 l
0.72 302.274 l
0.72 1.494 l
q
eoclip
n
0.72 1.494 m
388.098 1.494 l
388.098 302.274 l
0.72 302.274 l
0.72 1.494 l
q
W
n
144.999 164.826 m
144.495 164.826 l
144.495 192.33 166.842 214.632 194.409 214.632 c
221.976 214.632 244.332 192.33 244.332 164.826 c
244.332 137.331 221.976 115.029 194.409 115.029 c
166.842 115.029 144.495 137.331 144.495 164.826 c
144.999 164.826 l
145.494 164.826 l
145.494 151.353 150.966 139.158 159.822 130.32 c
168.678 121.491 180.9 116.028 194.409 116.028 c
207.918 116.028 220.149 121.491 229.005 130.32 c
237.861 139.158 243.333 151.353 243.333 164.826 c
243.333 178.308 237.861 190.503 229.005 199.341 c
220.149 208.179 207.918 213.642 194.409 213.642 c
180.9 213.642 168.678 208.179 159.822 199.341 c
150.966 190.503 145.494 178.308 145.494 164.826 c
144.999 164.826 l
[/DeviceGray] cs 0.0 sc
f
q
1.33119 0.0 0.0 1.32802 0.72 1.4958 cm
127.07 126.17 m
%ADOBeginSubsetFont: BKOAAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/BKOAAA+#cb#ce#cc#e5 2 GetGlyphDirectory
19648 <001C60D8A8C9B5EE3103A00542ACDA111DCB14F1C316E7646986239CE
EF59AF865AD4BCE587A8A68D42CE03A28B94CC4912BD9475D3ECC236829892C2
ED9A907E8DD9965A88508672A90AB36D5B3511AA1D2F3DA301DE8BC45FDF06A6
DD1D749F833E81AFC67F09BFF5A220D45196DF8DCC69BA0ADB7365CE78801D79
99D3F3A34E86F42C323A0E7D181B7F885D91402B54ECDEEB7F77705037866542
2563FFEA726312F1C4F9551CA29E7A664A980752C74E84115848465AC0F6DD48
E27D9C85C38A700CE5655D46124F4047865B9389EAEC0573FF1B795EA5A422C9
97A3D4490EF4D7498B3493F2389DE6F183EC8625CBAB06F10AF8422B1F86C30C
A2520824B7DF2E0DD2916F3F611A50BE127D172DF57EB00579A6B5E539A60F03
0B3D87D768D474CCEEF17B1C0CD5A4E95CA622BAFB9D52E904CC51B6E31C2EB7
5D9A1C2DCC8AFF902B34EA1AB9F721F79DDBB3DC0A33A623CF8CC3BB95FFAC9F
BA7EE4875D508FB5C6AD2241902D71E5BA50E394F2F9A55556C027865650FAA0
08BC46C2B67F792479DAC714D0435EC170C115051F65026D2DB24A6A9872260E
B745EF45A3A4AF4068BA25484ACA48851B27885B173BAECFA595A0A2C086F86F
4B8440A4232887CA29055F4108422C4565804E435> |
2651 <001C60D8A8C9B5EE3102BBDF3313ECFB5A87B2145FC31E395A78863E06
A795A31747D5E15D6DA7C73DF29BE4AAD487438FAD821F2F5ABE8F154C3DD005
56C51DB7A5077E3D59993A216DA37AE23FF8A6BEB386D0D2ACE39AC24FBBB0AE
37B39539E886907987461F828162A23D074748A18B5C7149FDB7A01A5D231507
364EBB9575FEDA048D6D1BA1C2576D28D80D4D224794B3B52712795EBC15DEC7
CADD3BAD992974126229CE4CF0E0D8AFD1CB541A6D262D7DE271F223492E90FA
6FBA3EEF6878DF09E2BB3CDB35F69E902A56E45B1F2D32B3143FFF03CC9A6783
63C7B6D55F073CC5A6D78478C6> |
!
end
end end
%ADOEndSubsetFont
/N6 18.05 Tf
(L\300\n[)
[18.05 18.05 ] pdfxs
0.751205 0.0 0.0 0.753002 -0.540868 -1.12634 cm
Q
q
1.33119 0.0 0.0 1.32802 0.72 1.4958 cm
127.07 105.84 m
%ADOBeginSubsetFont: BKOAAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/BKOAAA+#cb#ce#cc#e5 2 GetGlyphDirectory
1131 <001C60D8A8C9B5EE31023ADBE237D51363B99292E4ACFAD203F06CBB06
954ADAE90AA79590A526829FE10B98C9923D833B0C361E539E3B66404FC2705C
19758190B9582DB74601D3D295F8C7D0290FF68490947E9D8A58F040041B4645
D70CB55A218DA93363147CED384DF289B2B63C0011D4B1DA5E0A4D753759B898
0FB4E23C7D96DA13C4B01A01> |
20168 <001C60D8A8C9B5EE31022E8C3D83DEBF27F5EAD479EA9BC5A8BE83C62
00D90A9BFC9E129523E2A228C10F4F1F3C76FA2E52AD37AF6575E32E77967C40
C7CA5C0F7431409D12BB417528E8720CA300DE4D0EF2F2BC0824B28FAE703364
ABD0BEA363712887C6A448526A8179623216CF429AC2ED8C99A4B538BD4F0F3A
8C52D8CD2A7D4F2F6585CFFD4438C23B0AA6C9FCB0BD79C65F54C7A0CD7EE927
99D88639608FF7465DB7A7D13DF5369BC860F33E1D10416529DAF4799AD13E60
AD767023DA22DA8A43B238371C6098117B0D6843E690EFFCAE1A54E70B1239C6
A68D3E3C585B8A5AA92AF39B921EE2E7941BCFC258D2031BFA7C7BFCD7B75541
CF384F08D57E6257C4E43D44D9396C2962F27D18C6FFA976CB3257ADE71C2937
830021BD5DE71BD937208BB71CA80A3C51D276048804C215DA15925BA3DFFBA8
C209CB83CFEFBFBB41E021B8DD3E8E94AA4D6FE983668709E5F64CEC5630A0EF
16511B03B82514AFDB2B43C0BB2A6317683E1D5D9F9A319AB971E430A2CEB95B
73646E2754EC910A7F0309B4084C6B2C4EA0A932354E42430DBC0665CE10DAE7
9A998CDFF9A59A2F0BCB974> |
!
end
end end
%ADOEndSubsetFont
/N6 18.05 Tf
(\004kN\310)
[18.05 18.05 ] pdfxs
0.751205 0.0 0.0 0.753002 -0.540868 -1.12634 cm
Q
n
81.081 247.725 m
74.475 239.4 l
129.078 196.227 l
125.775 192.051 l
140.724 193.779 l
138.987 208.71 l
135.693 204.534 l
81.081 247.725 l
0.72 302.274 m
388.098 302.274 l
388.098 1.494 l
0.72 1.494 l
0.72 302.274 l
q
eoclip
n
147.483 252.477 m
67.608 252.477 l
67.608 183.753 l
147.483 183.753 l
147.483 252.477 l
101.556 217.988 m
74.475 239.4 l
81.081 247.725 l
135.693 204.534 l
138.987 208.71 l
140.724 193.779 l
125.775 192.051 l
129.078 196.227 l
108.327 212.634 l
101.556 212.634 l
101.556 217.988 l
110.339 224.586 m
113.535 224.586 l
113.535 222.058 l
110.339 224.586 l
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 168
/Height 146
/ImageMatrix [2.07833 0.0 0.0 -2.09531 -139.521 530.019] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J3Vsg3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/m<k<ioH)<bk^H
j`\=EQp7ZQ2slpUB=(gCG.V=;h/Bf%XcMdBf$SQLgi$9+jPo>!^gLLd4<rSiLO8$#
:TS.cq2`U'Dn/!-<^VAPi%UO'4rY5p`oAfl)fAkSVpn+U)4]Oo4.ad3oK"QCo-LBk
DKOUF$eKgAG&V\$IO>lXa5f>X>ePL=1P"6J\m7Abo)ZVaE4A#:2^=C,k%je]^5l4;
kGIpEDbk#Re*m&ira.RMfBguaITsS%j/`+X]ru3`I4Ztd`:Q>,8ojSi04Wr8^2K5%
qnFf%q#8%soGW$@E%DG%6kKc*\[JErRgd'O`)RP>d;3&o7M1K()9.CnD&\r6b]Inr
Om1sLa9TqC+g/lOb7R;Y8hCZ6Yrkku`K>7H(rfFKB,el'e8l\OdKG%CaG[Ed,tsLP
(pp]K_:pilOGi3O7`DIj3L,f0m5rUiV"Hm<;saGi^BYb_6+d\+@aE!!*6gprP=&P4
9s\s"A'T.knOq2LjS_9h#+Yuc:p`;!7's=49a&PD"GK15k5AReR<=L">Lo(=<En&Y
*HbZ>Q-iB7fEI7g@@,OsN+Z9/8\J]gNn'Z^]PC5;Bt%):<E<,mKk4B;[C(!Yf=)&V
?s#<-Kk"6Y9p'$j[W@.93VJ`;H*=9=#0+j6rBERcp[.lai"uc%J`)k$5D.o3:(C+Z
Qt]9MiWXKOM3h>I/7dcXagI,gR,f=__f4o0;VmfkXa=C;eadumB-$r#i&CoIK%IM5
Ces$"Fs2Y#Gc!'Mj#GUONoT:t6J99"?;78qnmb/UC(B9[C203:J#hl=I^Q;BRdRgb
C`<[DZ0[r4a.$m,%_]&XGStA-mKP<*\aF(<mCUQ(iT%W?P>7:Gl'r*=V_T0CZ)J`>
Y-"d?qVJcjPabFaZZ:`mdE-D4-JDJf)ij0oDYqHF^2L,krr_ar8qBJgFGF.qRmnc:
fp5pID4TY]c5E*l^$a"cm5G>MiV8,!NT9g+h"qDlV\boeS_fF(6e%Q+<U6O<@gUab
*J\:]G29?@;g1Y@H/Eh[#/fDESfa*hq*l0fBmK]5V<Ic8XVL2PM-N[3S'"tS&.Sat
p+!Q%\>"ON/b?]4*<Y*'$A!.JE^<Q2"lR8]=JIba6.@N9a'9d@:)R`2L\hD"9E/`<
"WkHM$NZncWe,1>#/LR]jVbE]'MqeM6&7<$T^3_Pn;7gc#YJ7Y6qJWk&BCKLb7ilg
:hAtd!t2"b\6P,gL@K-d1M=kJ74_l+9_F5MR*?Mg6tqWJAi<--]Q(u^EK3YiI(F=r
&u38RM1b@H72Vd6`dCdDlLldJaUI9?oNr:eMD<+AcPe$-BoTC/2od?/WhZqHP=.gG
W-F.HjIC%-itY1a-ee(L_ifb[*XFQF%i/Eo0pJE_n%0aD/`jp"*2CAW9@VD_>QgO`
6lJgi)*\]Z#hbG_c;TUg;VG\eXGaBq=?-\!.:oHrQP/FF9A+].Aco!!F,YUA`&;re
Gj%a*W@9%A\uc[YR=)>1BgDFBfHJV?T2Y.H]2=2FkQ'#'<"*`m=q(Ae_6KLbhJu,C
brOr\lPgME@nuQ44C!R2@8k`0:N8ZaBAE?UU<8!_)@&O+2$]fcjO(`R)X=8I)ko-k
MG\+Bg??ulUQKGT;@5c^kq)k1oV.S1)A#!0@AJ5!^.joZ;Eg2s78:[9AQ;p8bZG!Y
(!ho1Y_mW]Ue<_'OST?]A7dVJ7;7D7G%8BXia&QorMe#<W3Q2s<N<`7X&X/q:J/AP
=B"=_Fcs'=g='6"*1s@QAKo_E*.a.gc!AM(=%EQ5e^lRnLQLdffD,kX@g%`)U:/KR
;/p=;7$3X1L31ONiuJd>B;O0>7Nc.<A5.K9ZBe\;fo]cViLQOGeFLDeX$p^h/Yoci
VU\A0>AL?m6Ba=Tr^X@+Wu5ZCIO\nl9\H#iC\>ShlmcbY\ZVc@bhJHDP4i58]mJl<
qIGpiP20VXFr/ugGunrg?0MYFW86HWe9Y64M._-Q<UIKO^2KFN(O[@@F"K,oQ+2LS
N`;Q-:DY(TY^?T`ilsZZPOr6l>YPU!(uWA8Y8+aii+?ht&5:_IZscDpKs89/Sa'Pl
=53n5i-li(FG>oe9ML@`5g[K<0,GZST8[cQVoFF]!MQks3eld"b=c\SV*n_ORaldu
1:U-@#LR3%A)kc7^Fou=\@1tZ>0?&H,F5CnPZ&o-/D4#-ja?*SF+.uNH&7:<9[/+U
.lkjWK/VlbAY7!)F$[@dZK2MaU<c]]H^QF(A=G2)koN5-&F'GS/IpI?7#SEE?Ag=6
-UaIl.uorl9<C?4C\6IVe(.l&j@r2I[5OqqCaJZ-I9EU>^9=)R`I-u07oK#^odtub
1uQRmHQ5s`Rki8+X+rJHD[i;5ca%/?S+n]37d8YP;3n6)P%4-md6UXuC>Sol3B(:!
Pe2'BmJHu[[6EVP]9V@CIFGbd?L:]K.f!ojjL$ekAWE(dH+8_XC5,1#j&[SUA),+c
p(LuX>*Dffm6;^ET\j&-]YNtW*dTf%rSi"4Mb^u@`i`Yg'tel[nd[u6\K2re>aik,
M^cg>Fth5>]m:HX`eNV=CU!b52V(0&%l!E_kPGch^,iZ&"l4F'[8!C&F$m&j@Z;r[
4U1Qr5Lf$a<NMa$+)h_!"Bi@uld:p#Fs3.()#n2&]q_sh;V>prm74+^VP/tfJhV?7
+g[2%]BY@g_d(L->I7<:NHbQ,UrL`J4r#AZIhP.2>mBi55KM0c-JEjJA^rtU4Ag#W
L&CqpoJXmhqG0bkc*$`UK>Lo#TrYnlX>/V]6_A%@"Ks.hr-g,>KcU][D34e36p&cH
r&K&mDcb"TIjrHV&"B!$HFs#4F6TV6WcJ*P[ejEMi#4h6K0KLnr(5*&2S[K(c%Q$A
FT#c+rM1qAjUC+*>5Ku88M4J`+nFWLd[;^AOm($P:3^u$cKFVIJOk$pa>=^Pe6QY<
)pXO$UW+u6jT2.h!UHK^8DaK,<<C!X!t.N_04O!4,_o2[ZS4`L@@[P*9NgeHdXh9!
Kc!@U`c05Y6LNd9Y,o,=-JU3To'FeK$FG\nr,rRmSE)YD%n)paO?CmS3UiE"m\K,e
T^HJCLJXrFd&[p6p1LV:lqk4]0YCplGi@#h6jr?;mhD_(<i@D&(2NhLO8c3*I_^^]
F([ONksfbAm"L2dFFiFid))K<qW8=R1'J1"0,UX+*tY[e=)ekjd2'BM0bL;;&`IR>
0dRH`bnADVFO;lXA<?\@2\q6m&j`U`EEmR'QFmN0!&7Gt/d@R1$@XAb50)r6b)ZHS
HPZd((IJKFM#A.;JJ%F*r2ou.l?<4o7[^NIGu:#UZ(Dpg'WFku)MAac,R37_MKT2U
@gK*8:bq)#!>Qpp#Daq4O@!'jJqK/<?-=#f851,BW?).S*_&@8Om=(PaWE-^+)XE#
-t]\sI39ps+E@fldLIrB=!9t"l,0*u7@a]\JHR[$LP:3eco2FDLq(VrX%"H@Om3f7
S<BqGpMB4-P"7GC9J\G#4&T&]E`ij7>p^19(t*#/.uu$ub6$+5-Y'gKNL^T"gF+fn
';HW_l4Fom`-u@Z&>tR'V0*L?[3e?S]W;HEnQ`m:[[0Z)^+^?O'"B^Dr\7$+/5jQ7
;TsC6ckLNN.FQrcB/10W@kK3FpsSB?$,GN*[kAtJjs8CkL][1J-q291)ldlFYn\jI
?Ag9%aD?[2$A.fO(EGpV1/PqFK6Ai%ZnQPTD_j7,C+>eG4DW;`$DnInP=gFD75YEF
2+icaKh"#J2)Z*u2F>d:KEA/GVERcQljEH1'70s9;^4geYccodC>+KdhMDo52"DJ?
.dB=kV`KjW3loChO>SJlpgFO6+6\,7cDNc4'g,,,+Z%8'mn>Fsgc/&,[tbg0d%o0p
.0hKq5*BTANcaFo0e1)'.h[6XZ)9hGj$4gu5\#F3W2A&9&Ikdn6$'FD/!!"L2*u(]
-]'E*14M'$2(qk?+,**;/+?L'oM]Q$0QRUcF%1"%hH(*r0ru#Ao'8%dmcDr1.h_Qi
jU/UG!5!$W8(#'d&hb*ae=+SiRhUgND=:%I*B@)18YYq@,0\'F]e_2lVQ=sYE,RQI
YkBb3'N9b-b`9ds36AC%"XD,V1s@J7d,IJnATZQt<8:]ZGtp*e1c4G%F%iM(nAOZj
:M3qoN1Wo]!\77Tk#Daq2%E,V&luCUOd!+Kk0iHZ:o%ofaV?;IPqNEN1G9J$/aI5U
F3m4ZUd?X7bKU8R']gob@dBq2c#"BBN?HY@cNr'9/er:bj(CM#+]jW4cqM8>#L+SO
$t3djd:XJ%m,64_Pg5K4/Cg4.Y7DoGE-9Dbf4PrnWV#lG`BfJ]f["<'m?C3J&3-jY
9FhG7ikIj3m+3dk?,j-U%7`gi@:#0peTL:a[IQb/p,J?6[PVJOp&RO&CB!IBhX/nP
mEh8X::p/%=A48c8Xbrg5T"@hC:(l6'ZWdg0Hl?j/<M^e<\buKX>"Lmg@daA(.<SZ
8GSJ1\9:]5p/PW=>&'@0S'p[EQ=_:`C+MpCB,5M7:g?[(.-@=ua&NjL$]Yq/:BQk*
3)`SEXZgM/P3"Oq0^t':@JiNh#*+e)@e5q$i_sV<LMLLtU/ns,QGFXt^q<Y4:?TN3
-Eh9%.;bghD>'lF6YC;%b80g@-LumF/?D8L+]kJ<c"=Fh(C+X#j'0aYljVb?"<R&"
BJaW=0_&gVQW3>CrGnWHEoR1A,VsLaX&mn8(&(!u<_mg[Mg)X(bEl$h(LfeA=tnQ7
:q'p'G@u)NrEV18?"G0bXAN!!O'rdaEc3I7[_``^1fget91T.#K::eVO"='Bb3'0l
llUO?BjasI`GC`b9MKl"'jbeHHksVIASHOfG'%^UI4JTOEM%ZT;17JQIQ-A7@b07o
]&(]7prRLT@;>h>^LXa\'D$_g%ENdTUj5BinS-F%-Xb%L)W`Wb*Wu^>Ql[OhFrqKG
_,r7Spb@Cj]1;H]K@>C)/dhQE85L-sNVH=`GZ:Vd=Sp`X;cmOF':^WAAs19a3=o_a
/o_*G9is4hkSD<mLarT61sP,CnYIS]ksk9O4<97BL)?L.G4\=%@>_RtNEELHQN_UC
%o0?T>gPisK`R.NiJe(,NDr'#\=JW=GBUgsJV!+nU\P5]bpB4.Cj5c$7X!rl>d1<`
Q>/n6Y8`@oNtW2KO[=tgR2qFmpQ@qHP(eIMcF6oD1?4c\XP#Y!\N\3i6^1_F>hMe"
B_N1X@h]GR'N#-am6uAq6$+j!91H^</OXYm2OUlf&b6,DWH=""Rj<9../AKGq1ePS
"dmG*&@n!SB#0mm3>%"tRQ70UH)Q9+?(1SpM>=W,3P1X]%>$r*rt2RM;7:PPGDCE'
8.P379n/i[7!r`>-SiVcj>KE:nnGZ.pc'Uid<hMk58Ya%(jXSk9uP8@\7[i:fD6>V
\fIL'`M+SmU135YYO/(KH_VrUTI/WjB-X(VZ_U+7Uod4akJO,W+/OT[V8c;g1t#B%
*'s-<BJ=-B'cA4'*IIWNB'?O*/Cp&&35obaU0<L*R,\5u>omU5-T[kDHD<YbVipnW
RFjc+]!?DR[`)F^V7OAkq+tf0h$@/e.4BU1-u#Im)'>ehk>kXi7@7Y4]rpA,Y9U<U
E(dC523lTrL3_=OL(K,E%:gCh=aLmdgDO&ACFf_Z0?9J3Vr(+q8[A/]Y_XW(miO]$
[_[U:NS?cK<1Y0%q\eu(;fPB>C]Ceh"a!sRJU:e'4(YjcB2#pU;jre!ZS)s4!ukE&
)k&iC3ceu'f"b!XF)=+/.,%[gRoZ#J8_]gY]:sD:VkZ`GUP<En)m^BIMki,"@Cs1X
qnS2\`&;sZ]V;5biu;/hhKBD,MQV'.\ibmLI6kknL+M'q`pR-c&\OV2.sq=OS-0ip
#jbe*^u8M63')H"*6[+[DVQL;>Pl:3[uli23(hcHn7[dD2^t6)]LU,o:hWe&o#g%B
`B7*M4BT'=S]0s+`[K*OHS)aAV8hkYa#nG^I!@N]IE1BK7\cE>l'#[qdd#UQ]Ml7j
W[s58r,DlNS"-H?goNC2Y`q8Wh&NsEeebid(h'@gbWNf]r5^cYc-53g_IZ]Fm3%X*
k-s"72u#RQ#o1i26\kb@U<nEn-j-(:9@&6ecc!ZH%0+[Djj9IF><NGBr=kB"):@7]
);QJor:eWl-BDZ*BWmDF$qecXH+jKq\EJ1e87HXXFV(Z>al0+f4Nj?;<RlKF1VI&,
?!nKiA:hL.CV=P9]l8NCFQ8p:ZMf4(*;.riL+e9X1aZ9T8HC&eI1Wl6EQ`aEMCaXc
$Ie1t;Kii:+hgs@?nB"#2Bp^;ID6Zu_]t_ognqL7labh"%GbeQh5'#cmShtA0*qOA
18<okN#;(tk2Q`tc)qP@DD9?"!)p.MR4TQ1M0,]ZUcGq*iMGfkSfk`G,^Gt0NBSoL
4tsBN1l?`B&md]Hr]lP$7!_$g3F5B7S[pPeQ9Ga;dN4@j.b<]:`0Wt*b3-97O_Ea0
%0@SDkPcGQOlNNT5NohAdN4RWSsGGoRRJ9h:qi[3hPRkJX6SMthXVWO6m(`d]$<LR
><]o]5/orRaug`jP2=Wq*nTeM\\..i6ZHgoX;GMd-pqL5:up&bKEaPL8k?Ain5O'Q
I4Rp=%2.P0^&JeSh\\6N*&YJR2Lcu1^F=2q/37ZX4DLMZ,G%<<Ab@-DDAM4(Asr=e
TCr4Yp-33as&)DFD.^P%M*Hdjr$hEF=ns/-q-T]gs.T9RV>>\@qQ"9P+9~>

Q
n
Q
n
81.081 247.725 m
74.475 239.4 l
129.078 196.227 l
125.775 192.051 l
140.724 193.779 l
138.987 208.71 l
135.693 204.534 l
81.081 247.725 l
0.72 302.274 m
388.098 302.274 l
388.098 1.494 l
0.72 1.494 l
0.72 302.274 l
q
eoclip
n
113.535 224.586 m
110.339 224.586 l
113.535 222.058 l
113.535 224.586 l
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 15
/Height 13
/ImageMatrix [4.17336 0.0 0.0 -4.18335 -459.838 940.535] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J39K#Qm<FV#CaNu:q00p*=mro>]D]M<\5,H4l]DLjD"E3O@WmNpm[9u-]?#V:O*Y^
q':hi,nd`S\j\<:9Vh8NjOus3B2Dg^3[GQ#m%dNn</7k>SPQ,sl;SOA)QcH)em4OJ
j4^=+W`ACcWa0eA?a/1_ek/r2T3kl/=][\]f'M,'?>io#:%nO8^:c4%("M%JFhQd=
=:A];"SBQ>nlVsL2Z\u\jKR<1elr*7J:I~>

Q
n
n
101.556 217.988 m
101.556 212.634 l
108.327 212.634 l
101.556 217.988 l
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 30
/Height 24
/ImageMatrix [4.17336 0.0 0.0 -4.18335 -422.838 912.535] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J19DK-mTQ;"AcmC:q0,D*=mro@So+\<\5#:.H'a('J_eCMo]F,3>0V2WK^"d;M?+!
>q_MB-;uq#b!.hJ:1>tiS?@7=Qr$b'=sAQ:+.Z;.e&hNjKeT7GB^t@elBtA2e)g6?
V+qn.S?].gHR5!&A6%?#<kCteh/Bf-PW(\#f'Qe*=<Z6B24j`T[U<*Z*$UR5LUu=q
=1]LPc%<B4DE*TP.i3TRA+CD:Q,>&,b?gZa2HH/=Vp_a@>.nOI?*DmsFm<h@f58"C
h)$il)fJTgASZN`]pBI>\)_D82a,qpHbe-Mot5..-`tQgo4!+HL7>$@l>1e%T#YRl
h!XZYqX4p?a117,U+XceJ*m".I@:,MkP+[W^^pnX!#@7>%0OEPbS:;VLcW&6^5$4i
$(LDU/8)b;aaXF\O?=<iUJP\5#Gt=V./^sNoJHZeZ"u]16qARo:di\mmhEOA>Qkn\
Z$[9'`_doJ+eA0TN?cNB*0hhlP#8,)aqBZ)@7l]aXXf^#bdB%G.`/Kn-*eEW,YWu@
RkpRTPgjEio5(N]:'IH+Q:qH%`A5OK7%6'V;fqstbEJBG3mR?8NBKjsjJ+q6e-*6H
:8Jj*8Y7iA/PFNiPr2:bPgR`Oe.iEVCXeV$9iJ6\9iT?<V.Eq6eeN3,~>

Q
n
Q
n
81.0828 247.723 m
135.69 204.536 l
138.991 208.706 l
140.722 193.779 l
125.775 192.053 l
129.08 196.223 l
74.4708 239.397 l
h
<</PatternType 1 /PaintType 1 /TilingType 2
/XStep 32767 /YStep 32767 /BBox [-0.000000180969 -0.00426389 1176.14 712.469]
/PaintProc {pop
[/DeviceRGB] cs
10 dict dup begin
/NumSamples 256 def
/NumComp 3 def
/Scaling [[ 0.00392157 0.0 ] [ 0.00392157 0.0 ] [ 0.00392157 0.0 ] ] def
/Samples [
<~jl>@Zi8<DIgY1?5f@JL$da?FfcHXPTaiMNB`P]R/^q[Rq]",;Y['Hs?Y,n\'W2?Ac
UnsufWiW>+Yd1UC\%'#]]tV:u_Sa=2`lH3DbKS5VcdC1ieCE.%g"P39h;7&JioB+\
j5T"ShVHuAg=Y$.e^W'rd*L"^bfe/Ma2Z*:_ns4(^:_(g\@/fOZEUL6X/`+rV5'f^
VPpJpXfen5Za@0M\\#Mg^VI\&`5Ta:aN;TKc-FY^dF-Opf%8R-g>(N@hr*JQjQ,@\
iS`VLgtUQ9f[n['e'cXjccs\Wb/q`F`Pf[2_8*h!]XkV^[C!6EYH=n+WMcVh~>
<~mHs9+lK[WtkND!hjQ,@\iSi_PhVR)DgY:H8f\"g,e^`0uda?FfcHXSVb/q`Fa2Z*:
`5Ta:aN;TJbg"GZd*^:ie'uq!f@S[.g=k<:h;-rFi8ESRj5]4^k2tjjl07L!m-O-,
m-O''l07Epk2tddj5].Xi8EMLh;-l@g=k64f@SU(eC2jnd*L%`c-4ARaiMNB`Pf^6
`lH0Bb0.uPc-FY^dF-Lne^i='f\+s3gYCT?hV[5KiSrkWjQ5LckNM-olKdd&mHs<-
lg!d"ki_-kjlGL_io/kShqm5GgtUT;g"=s/f%&=#e'cXjcd'eZbK@rJa2Z*:~>
255
] def
end

106.36 194.86 56.699 132.2 [ ] true true []
 GenStrips
} bind >> [0.329364 0.0 0.0 0.422163 0.72 1.4958] makepattern
setpattern
eofill
n
81.0828 247.723 m
81.3933 248.114 l
135.608 205.237 l
139.349 209.962 l
141.275 193.342 l
124.636 191.42 l
128.379 196.142 l
73.7689 239.316 l
81.0015 248.424 l
81.3933 248.114 l
81.0828 247.723 l
81.4745 247.414 l
75.1727 239.478 l
129.782 196.304 l
126.914 192.686 l
140.168 194.217 l
138.634 207.451 l
135.772 203.835 l
80.7724 247.333 l
81.0828 247.723 l
81.4745 247.414 l
81.0828 247.723 l
h
[/DeviceRGB] cs 0.29 0.494 0.733 sc
f
n
301.077 255.015 m
248.346 207.045 l
245.097 210.591 l
244.476 197.01 l
258.093 196.38 l
254.844 199.944 l
307.575 247.905 l
301.077 255.015 l
0.72 302.274 m
388.098 302.274 l
388.098 1.494 l
0.72 1.494 l
0.72 302.274 l
q
eoclip
n
314.217 259.452 m
238.338 259.452 l
238.338 188.505 l
238.475 188.252 238.611 187.995 238.744 187.74 c
314.217 187.74 l
314.217 259.452 l
248.346 207.045 m
301.077 255.015 l
307.575 247.905 l
282.267 224.886 l
282.267 217.62 l
274.278 217.62 l
254.844 199.944 l
258.093 196.38 l
244.476 197.01 l
245.097 210.591 l
248.346 207.045 l
270.288 227.006 m
270.288 229.572 l
273.109 229.572 l
270.288 227.006 l
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 160
/Height 152
/ImageMatrix [2.08229 0.0 0.0 -2.09167 -495.289 543.684] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J3Vsg3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/m<k<ilIR<bk^H
j_Cu+YZP^=)XWj$A$fEV<@[>*h/@_sDHAoXp?d(,g@&+TjP&@,[p:[`]=m4MIDfT7
;4?ngm/"e6?F`1nb:T'+k&X=Gk'$uS`TVDI3lQ.[rQ+'*R682n24;bQY*oeHf55!3
i#`oOj26;[F7=EL*[_]Aa5f;W>dpUiSY*geqHZ-ok23i.n+YTi*uBdTjRW+OmXEKW
eF\'#?#+XoGM;HY*<#=*J]6X=q&Z(6hlH\TVJ@pa^b*fh3-RY"9B^>`E,6M*64f!C
$,VG@/IS*\bV]8_D_q7j6kKbr!C2G$%"#fE;s=NQn;JLt6En*S%7>'_pod(_b]J_*
N!)n!a:\fm+ioe!-=9=W8SocqKuBN0R'M[HCeBkidjrTN>:1B&n_Cf28#q#e+NP0@
M^(eK<1,&Snq<hfb-JCZ/'CGa\IZmTbPrWTe*R#t*L%!9DGZQHQUB.(eJ1N<e861)
;A=sf8^`<h/PF@ZN+EA;<:)h5c`ntVg.t^!8Np)f"U.0<Zo&F_d<&q?7aa,Y.7qt[
`A:5X2"a(0<(h@*;cnt+]"q.Loos=HQ>)Oqg(S:m<a(fg8Sd&a%CL&;<pdP!g_U94
ESQ:+c#]@U:"9(]EB?5pfQJk-X'"\aP@[\DD4P?Cp5s?0g=F6HD;1BL]5ZP,--()_
(KJq-?-MEh0&CiRWie$PjQA&FOL^F5j9<7dOd12E9Msmh8O8X'K`58Djr&=OKAcu-
f-T=?H+TX1O\U;u*t:CcTrGN$kD`trln+<03?CVQAGJttQ=[UeXdPDVY&0Zk-;JiX
kKltTTkKoGeugk]KK0r<1Q8;fDAZBo>LIh`VlCF6p@Z,fS*p$ODT*ZjP1DHeS\st&
*u2cbD0n'#m+dJ=Y3dUff=#P9`o2Yi7BYiSE'))2^N>t.!P<;^?OC(Y*)@HlEQ=[p
a``M^:WiAaOj7`dS`u!gp_D,/X_Sia9B5Z5[mX/?SnVj#qANs1YPO<2iQC"?YI'Jd
qbM8.GJ3a%htU3tM4+.q8(G:u>K<5rH6.R3A,;YoXmBMght2f2XEQ.09X*Z0:^up+
_1r'L6h,Heecn6;@f##8I;8,nXYXs5Mi`JIK2?FpNu1"bh4+:p:[lgtk0j;8PQQGt
('Hmi'a#2P%V?8A)@>US_4[hfK**S56eFU/&Fqf6E=@Q9dgA9J6qN1'G]H4)S2DLD
;&E/*.LRZ,'u`:<MbRVu5+$*]iO[m#&1C\q2h!XE6tp.FbuCE>M&XN`7P=3X,t,86
'B4sIMNLpi`FuXpio$Phd=((F'tY=@<+Zu0VDUiMY8^:`E0<U)3>Z:Xopp?f)DZ2*
$jf'E`JgLT;>r,N7C:U5I"[Fe`N1qpb9ET-eosm-bsE9q,c%C;P39\UaiQUljRf12
Efs?.),SMQ;sKIhAX^d:bq*Fr[!#:LXNPjCO'2Wo6"<)r:"7US"bbj);NOi$=U-]g
4/-[GC!N]?MWS,NkX1A0aL4[B*%&MiRn(nEc0;u&V]<X>e"1YB8^uRo@re-h_7!-"
kWYoOpND@T![]bF2sA3u8Ad8j;;+,_kli5YmkSrLq?lJTN<a2nILA@tGoG&hGDK3i
rR"#\JWh9CUGQ[0;<gA:Ba#^qe<V!#G5k0=_h"YChNo\&@#_%XGc$PeRjKV):2/N$
UNH?me-^h!l6N@-ca'?(8sJ-\CXT'GDOArmB2mV8@4fWu<N$`!X4;iV't*JD$<mC8
lO:k9E8%V'`WW^*9)]\D0#fU,d_6Br[]U?AXt11\>q<%$Y7@_L=5*[]X9bH&FqL*&
.h4!Z9%'u12TJr'[:HA0EO)MT3giFhX&L<L?d&Oc>'ED$-U[99Q@?SOg@d.:7EL=.
i,10h+CH88Z#WD/g6k$@DCs;b[t:pC2iE5BDA+S2JsPF(gQQZN`QYm9!<QOGUqGD9
EaJ(iF]dV1C@#/"C$lGWh<I^#AiQEM[uFOhd<C025g7&H/MeY5l8oS>'<5-JM6Vd$
QER$R^=V:R?_MB&DsLB7nCIZu4,JMWFpPoD0*Pb2]n>g6m=.)mH!_3DdM&+<9!?MJ
3W)4e/KI>n',>B6._I:NmRbMq[DTo0^t<Xdd)L=XU#TSUNY9>m8so.<j6#^lZ41?c
Gn<g5C;#e9?;/Jo5m(OFhj#"Ah)-h)Gf[tR4-GeuCJG*Hg_OBSB-^ZR'80`V>n&H_
g'\qt01Ic,h)08+P0QNe3]>4K2=n[^cV2qS?i*=CZj)'qq@$J>D%E?t<fGFP3uMHi
,+'N&Kn&Rn'gO3X,,6C0I-_e9h?d<.k9PK.;Z]`(/WI$rbLV]9+Of37?C0d!ZSf>D
F)-$FY$QRhMn45Nbe8Y5U;"P_)]rTOrKX\^DH#6PJm@ZIo+K*&GDWTe4\)c2\06Hd
L/j-Sbd_)k2mdqgK2[%*:#W^n:9NDekB?4*iPBa\!T+jW<,]AP^NKDXhtme3`D-ZS
GWt=GgH1+]mMd/l_lqjb)f]a%aWP+0goPQKX[Ylj/7%DfKaq1;k5J#T$JD?5gni#2
Z),We(GCk2p/Q0'CX&`+3#^T;!-?FU]".Y$T-n,KBXASM#*,S-\rq);*VlVdN9b)^
[7oh1ieF"b<\V3uMY4<$f11<td2e$Mp.>J(0FhNuN5)bSNnBiuGAeKB`O+#6k`4'U
-Yte)-4K7gP&`]PZp"f0d\]r@dp)Eb2*DEmdc\_7H9(OE)p-"T/*4b=RB.)5R9Dg;
auof"oM)sG<o6^(4\=r3B#b/9lreqF<X6S[O3R(H$Hh-3WPdA/qc`#\@*=V0pcGe7
dsm3[IQ,=C,4FXK:RfT-GbFmc&*_u4Wj8^ef_]#lgJqG>W%PZ`LNf?N?<bFYmqUIt
8oG)4]5RH\-G$lXn4p),iD8\7K$$KX;ZA$Ms)7]4bD?3+MZ"(jC6/e3O:M@BE*\PB
eZ\-:j/2h!0)l%C\WAATn1_3<2!jL&]I$\^joGT3EreYI"K\CMYY[RnXM.@^=_74E
CcGeB;S0#!!%s_dktJa*b&qW_)2ILnl^h'oJI!m8_SZSlAb-2sP$1\JYjc8alAX4(
U:?;^E3QAMlK\g(KaVk0<:IOQ:J*XGelRg?9l.IW:sQFEC7+7CbfYJ0%k=V'^8E..
atU4(d-B]=m`+bf%qR[1UmVbU<56d<ccK#qW^b)"&BU%L&Wn(DE?PrJl>6aREphe*
-T9Fc&BEp6n5.WUM9+2'^)+VZ(U8A</QC8^Ico*Xpeb-N0jL;)?u@=PcYU=6&T%je
E0QK,S+1nCj65qDKb<j3(o(io@j$-Y\EZA]O[mRK7Cq`?#o;X2e3Qis8OD3-^tBsj
Ci6Ek0t]PE^`QFl3)Rd;a+e3//J(Z2b[q/%dGPcpjO"S'4&P>uYYQ>bdcBVTK`T@@
nh:uf2'Zd=,H/\<&dK=%?u$4cg]:sD/jA,e6B7(PdLmfd;CIA7/L(l],B>dhW*Fd,
5^a37'?4B)M+Ju6XX+G?j9V(1&ap[E?8$>.h<=4^6s)aKK.:o@-p_D.9mJ+j"XiGE
OU'no#S<:SW&:a=0[]D>@hC/m+"@nu.[$h\;R"nq3r.2o/#X;DP/)V=`7D)7nZn?)
da0]tEgL:C5/G2(%E0JFh#-Tf/uW`WVhC1,/r_<S2=emBdfTu\Jhb^[2tIJ5%>cf6
759ti/!D#_$(QBa-B/Zg1K,nJZSFGAlo/YP43@>gO`o681sD*3MskNtB0LC72PH/f
Tu0eQ1Lhkp\iT*JB?@V@o5`3!G0#knL9l@h-KR4!h!mts5=b5po9(\$L,6(O`QGWi
N/m^pBU'.Wr@c`:$p:MbAGXX3p[c3`,5F?23BXA^4R.>X0?lY$Wd+#LrC9]_MtK8%
00Y;#W\a-$,u@D(*j\:AZ\seBnMpf4!<"Tj>,D.4Y`9ZA8O9*V3><Md'I$OG=$hTR
Y>d.W1c#RQ#6V"8Yj8bck&WpI7f)T8%[9^>%'34#fgI?r9rk`0L8uqK2b&O'$;6>#
C@E*[i)OaW++sefnE_Z:O@rQ.#kX!GoT'F1@j$ui8V'0!b<&<'nOd?r9!kcp"cP"^
[P_Xd%u6subX!-9Rn6M*A^!iSm#J,tGb](\'[5;7dfE2W"\q`E:5+s.`gKU1q+jtR
6WEot:tJMN]hh]7_6j\00H3kg+]3jS$jA^j#+B8Uo+2VV0rA;RlMj[1\Po<K;run6
!W>trPUgJiEl7O/EL([#jV(,OC6(?u<F1p4Kc6c92W:5nB#>R-;(5Lf71kQ#XKY=i
Jm@J#=Firc'osAh[97>O(Nl9P#(A_c6X$57+).MlB6;Sdh&Pth-^=ErFi4tCaWWDT
QdZ@hdN:$jWEk+n?-/pL/F?ba!au^.bUcANeb:+"qNI3E*i%O;[<#`-Y1b:!er?WZ
a9s*oF!l"7?M'R@dX[DG_(F*5.Nt]<aF>WO+\1*?.FpI9-rFLJ5^YIX;YE[7<@qP^
A<8Q=MY:-h2I0o#5A!q";)W/=1=[i;mbhcShU4T=[I%Wc:M=W&if`gVZ>CgaBd2b<
BnG_?et+<KU5/.[C4W>A2QhcmZURbOAI/l_a;$'<_A]l&*4F#N<bFVidO<QK4jJk'
DN*@B5op[!*AY#/o,M!++FKkrk3'W>UGFe%#<Y^i0(V+_aYRoq'GqKOO7jM8[d9EG
;0&!Ql8L=Z:DbrB*HP[l5Z_bQ_AP7?nF$Jr)Y&/8/P$Web<T+lW7.nePD"!gbrCAk
4HmNfGA&:(DgHHMG?9#QQ[B\fJFCSZ1lB=uj_oE'Q$J$=35ZtX(SW.-HWR*p7(+d;
W[p[q'_UoIp.C":GDT"V[Ump:qG\*07[3YBR^O$\-.gasK2[3Hr]k3JWp24;2sAL&
m5egf5\E_TZef6Aj+%=qJ58ik=4)Pn)*)475fcbWkH%%*J9%\F7;&S,Zn/PieN0$<
Q#t8<V5Zrgq*Zbh*E29W(28Fg76a*,K]=Y<,P?b&dtOV$I^ifTfO[<-Bk5;!5e(bJ
QulLKGf)Liq`'4a69m'(L-?CM,6Se9L;J8UnO,';\MV02;$1T9Wr4d$YE[O:l^8+a
;H,MnMuro-R)V3ib9H`,f!s-l(tT&gg:8'W>8ZCFW4tU-lE>I#;&Jm73;+EDf8md\
2!%XR9XS$S>^ipldc]dk7\LTK6%[2d)F_*MN!iR;NDQWr'_-rmff1=H4B*1`a&th\
3Cp229ht$I<H0rnGib)K>[(?=<dA4F)/)^3D&\m_QQfs.V!?mA.WH7oQj;ckQB,7I
l'58/n9"V3;*q>6br4q>BA%,rq5bs3YY/-,RphkWWBZm<nXMIlS967r[DSDKbFL,6
SS@tlUf3iYELo2O5_M*_CcJ\U/Kl^MIOpOmjh"b.3F=L]cu/XF(+UQYeW79Y."k6e
j6<9g(SYp.U8O]Zp97rY2'c1c+RuG+cGcR]m9gi&QM*,1U4oE'oqE@)V29o&a.K4E
jebnKTJ?rs\o+/Z51(982ta">fY=?d@RR,(&PY"tX[n0_m\FVoHduD;KtV/uX_@-]
i2t<OQkueiOfO6XX3EH%-lK+!hlO<YS?9IQ/VU<e=09C!Cr-"%3ougk#^.b(O[jr@
#6L:'+,ZEZE]3>dW6$HDo5D);Xqq1d)\OOpkV`5VZ,):&#48]qa-E$.hpUqD>;V4!
3.MqWYo?"V]1+SHlJnh?]XL\,VYlj+-$<d?ElWMX@kVn-DCW8=1HTfiRsf0uosbEa
FZY=_1K&H1p4ZEAG!d:\H^I'S;7Z*U]6__1cI/BjZs4+O8oqG7Zb8$;kI^l37(^Hb
Rs5cSc*+aXFQTF5He>#\1OPCuH/%C4qrti,`./5`B_&*E.>td*bS05Em:SIgB&Ke%
k4dMZE*O#)qsD4XEP^)$_?irR:7Uh//f(?D_aLcIR(^Dm4t,d!h@r>H]M.f3C7/6.
S;>:fj`s.Fm6TN>2\@AYHu0/eE,^0L`12.<S:8pLK)QHU_n/4UVMiOYXiC**a#GTi
H!@Sj7!10&lj5Z*S7!FcD9E^Fb<t73QPI]c:WsLYj!DC_O-@f02pD]'52<?dJtU9,
XM3B!]X_"W4V9ism(71EA],RJFPWu\!%E=!4rjrOI1;hE=4'/k2uOTar>\,:+MF4l
dWMZb6Kia=RC'edg]k-a9?+@%"4h)N]PFruH0cEj15-POeAA97UUAX!:"@7!edI>c
?"qtTCq#sTT&"R?*IHDTVTQqh0\pd<L&?"jaWW6,aSicPc+s6h\lo@(Cb=JfIAC]X
:bI0r52EC.?*\?R[iQR%g\pNp09b1'FF'M%fmV9(,)q$S%)MHJUGhjLd&Mk;3.>Ku
S]MS:bW4!8US.f(Yhf@34p:cE=5^)5i:CmG-o'[nV;\7,iT2lT4S@]e&`VY"/8VCf
0(@8Bn97q0i3NhXCn/Vp'ZJH6P:%,OSC?Bp>MVWQ0OA2M+lDEljlW],k2Y^h.!t,n
)s=q_*.EIb]WIX:LY@-:kl,)V6b2H;n*.a'l3KE87*Y"gIHok7g-2uUGXrpAH>!FV
<@$l@54BVYhsY1umfZFs?Jdt2j6gF5m\N5;rpo]qq=.nVn&,\)*s+/uW%0)go"Q_.
lRh]m2=kT8@ilmQs!AiF0D&`po:JbLs#[AJ5P9M/otOf*s'bUcAbLUfp:kE[_?'~>

Q
n
n
238.338 188.505 m
238.338 187.74 l
238.744 187.74 l
238.611 187.995 238.475 188.252 238.338 188.505 c
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 3
/Height 4
/ImageMatrix [2.08229 0.0 0.0 -2.09167 -495.289 395.684] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J,g]g3$]7K#D>?-~>

Q
n
Q
n
301.077 255.015 m
248.346 207.045 l
245.097 210.591 l
244.476 197.01 l
258.093 196.38 l
254.844 199.944 l
307.575 247.905 l
301.077 255.015 l
0.72 302.274 m
388.098 302.274 l
388.098 1.494 l
0.72 1.494 l
0.72 302.274 l
q
eoclip
n
273.109 229.572 m
270.288 229.572 l
270.288 227.006 l
273.109 229.572 l
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 14
/Height 13
/ImageMatrix [4.16458 0.0 0.0 -4.18335 -1124.58 961.369] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J3T]'3$]77#D>EOms&A$*=m_<U//h:<\5,F]&QYtjE;a]KZ595B^D$F+-8eLEJZN\
;(7dLjg&OSea#/a:1ipnjS"!aD9urq3[E8M3i"oOoX@g5SO9/MB2m"O5-7\]:+DIm
[6<b]FP(D13t#ZFB=(g/p:FnEh-YJ2/l%m1e['/+>Ab6=-/-gn^g?Jq/+oY<H%:D~>

Q
n
n
282.267 224.886 m
274.278 217.62 l
282.267 217.62 l
282.267 224.886 l
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 35
/Height 32
/ImageMatrix [4.16458 0.0 0.0 -4.18335 -1141.58 941.369] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J1.'^p`pUa"A_?m:q1$o*=mro@ISN9I7"g07UkY-j9\6iK>aQ`3@'VN#)u5S0uZ6j
9.uZ'V"%"Jenlt.:0(<(FN/_nKZrBGC*JOV7oR^a;q_C591"8.B(Ur!.[a&56u!9:
Ph)g6S^qUW$LJF&B=(iYlT8[dh/$NTCfQrNQ>:6J.P:D&S]-A*XBf_j/'Y*iDnf[/
fIS'ZdtbDAED[-U8Q1u"AogU=k'&tY@VBje4UYUkPKH_+H*([k5He7)2G?h$?VqKe
?+%;XL4<j3g?mkP=t]8J^!CWhHlE]NS^6M@P^P`n=/N"aG'dMKYBR\;n1hR^5:;;m
kOa(JmZ1r*U[M$%^.LTHeQ(Q*GPo4a2lljm4blD[pc8qTXSY(tbS:%=YPZiM^i1Np
"$2N2[08cKA'"s=0S4nM6;DnVl4n:i9bYIA]N#]cO\q/U`Y"/?CrVU=D&OElb]OrH
-`h]L.M3(:&]GA3<u/m]]O`D/0ta#ma-);0+!.]j5p8X6S;e4S0l372amm$?*_MU$
B-BGobdS8/Z"1Tr9JNop*R(bccR_dh>Z3Q"dsPdf`tOti+!@mU8OLl>9b(3$P\hF1
(DMiT8^\q[/PFP,Z+!HVPjLSUe.iE]:eI!)9RYG*/;6MmKd@gBQ'A+U>Z3MZP>>6o
m71HQFZ"PmeHao1&Cn-f@7SmjV/8oX2Jm_:fC_:)Jl(#M&S'5>9daN$(2\,*e5hQ%
@(GANc#_\W0jAeVQYk;Z?5JU_GSt_-m<d]emIbnbQdOK9i"uq,HXN3n%>#[h:)/KA
-h\R$h)LDMM3YQA/6uU"ad7J:L@,5+i&EngHXW<kq1g'EL*LeLQZb$-j&a5^IcMBL
7t]mTAl4h)G?.pkAbVL#HffP7CQN0'2KOT6(HGj#l5G\S?>>q3Xf<8McF'e?-MG-V
ll,EKZ0[r4`d@(l:=Zc:GZI\NmMS=m~>

Q
n
Q
n
307.573 247.909 m
254.845 199.941 l
258.093 196.382 l
244.475 197.007 l
245.101 210.592 l
248.349 207.046 l
301.077 255.014 l
h
<</PatternType 1 /PaintType 1 /TilingType 2
/XStep 32767 /YStep 32767 /BBox [-0.000000180969 -0.00426389 1176.14 712.469]
/PaintProc {pop
[/DeviceRGB] cs
10 dict dup begin
/NumSamples 256 def
/NumComp 3 def
/Scaling [[ 0.00392157 0.0 ] [ 0.00392157 0.0 ] [ 0.00392157 0.0 ] ] def
/Samples [
<~jl>@Zi8<DIgY1?5f@JL$da?FfcHXPTaiMNB`P]R/^q[Rq]",;Y['Hs?Y,n\'W2?Ac
UnsufWiW>+Yd1UC\%'#]]tV:u_Sa=2`lH3DbKS5VcdC1ieCE.%g"P39h;7&JioB+\
j5T"ShVHuAg=Y$.e^W'rd*L"^bfe/Ma2Z*:_ns4(^:_(g\@/fOZEUL6X/`+rV5'f^
VPpJpXfen5Za@0M\\#Mg^VI\&`5Ta:aN;TKc-FY^dF-Opf%8R-g>(N@hr*JQjQ,@\
iS`VLgtUQ9f[n['e'cXjccs\Wb/q`F`Pf[2_8*h!]XkV^[C!6EYH=n+WMcVh~>
<~mHs9+lK[WtkND!hjQ,@\iSi_PhVR)DgY:H8f\"g,e^`0uda?FfcHXSVb/q`Fa2Z*:
`5Ta:aN;TJbg"GZd*^:ie'uq!f@S[.g=k<:h;-rFi8ESRj5]4^k2tjjl07L!m-O-,
m-O''l07Epk2tddj5].Xi8EMLh;-l@g=k64f@SU(eC2jnd*L%`c-4ARaiMNB`Pf^6
`lH0Bb0.uPc-FY^dF-Lne^i='f\+s3gYCT?hV[5KiSrkWjQ5LckNM-olKdd&mHs<-
lg!d"ki_-kjlGL_io/kShqm5GgtUT;g"=s/f%&=#e'cXjcd'eZbK@rJa2Z*:~>
255
] def
end

229.98 140.97 181.19 194.48 [ ] true true []
 GenStrips
} bind >> [0.329364 0.0 0.0 0.422163 0.72 1.4958] makepattern
setpattern
eofill
n
307.573 247.909 m
307.91 247.541 l
255.551 199.909 l
259.274 195.829 l
243.953 196.531 l
244.657 211.816 l
248.381 207.75 l
301.11 255.718 l
308.279 247.877 l
307.91 247.541 l
307.573 247.909 l
307.204 247.573 l
301.045 254.31 l
248.316 206.342 l
245.544 209.369 l
244.997 197.482 l
256.912 196.935 l
254.139 199.974 l
307.237 248.278 l
307.573 247.909 l
307.204 247.573 l
307.573 247.909 l
h
[/DeviceRGB] cs 0.29 0.494 0.733 sc
f
n
194.913 109.548 m
183.933 98.595 l
189.414 98.595 l
189.414 47.799 l
200.403 47.799 l
200.403 98.595 l
205.893 98.595 l
194.913 109.548 l
0.72 302.274 m
388.098 302.274 l
388.098 1.494 l
0.72 1.494 l
0.72 302.274 l
q
eoclip
n
213.381 114.03 m
176.436 114.03 l
176.436 39.33 l
213.381 39.33 l
213.381 114.03 l
183.933 98.595 m
194.913 109.548 l
205.893 98.595 l
200.403 98.595 l
200.403 47.799 l
189.414 47.799 l
189.414 68.22 l
188.415 68.22 l
188.415 80.172 l
189.414 80.172 l
189.414 98.595 l
183.933 98.595 l
200.403 80.172 m
200.403 80.172 l
200.403 68.22 l
200.403 68.22 l
200.403 80.172 l
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 79
/Height 158
/ImageMatrix [2.08443 0.0 0.0 -2.08833 -366.771 239.139] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J3Vsg3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mL\o_*\tTMT9C3[Bl@8#0!r<4I>[qbO.T.TJF`<ioE%eERbU
'f*HiVcM]_R[%4(A:@XQ[G(Sf@mRIcDHAd!f'Mt??>hc<[EdrK[Tft6CP@rMEkYgt
=M.;Y%f*n:0R5YW(:*\YAmO*&j-r3(E9MCI/H1,ZSBU,91]4,Y/!d1"EuKG_QT_,!
D4K?NG003RT51r6*JI.7]\RH^H`cH-JN_ua@/O*dgTB(NG'csOkB3KUn1soJ59GNo
h<t!K?%0OOrR0Zt4e6LmB@5N+GPn)Jb<t]95,VoQHTf]-"Sk6#$+U5UL/]/uQ]R.O
>=+FQ.g\O=HliPYO:2?q^re2>p-DO6\ICjO`$5XYO\pB<),W-!%mFt96CUA\_s80X
1$j9m8.l53+io@*N?cO8,`*Yb1%]l37ZV(s)l:s*koI^jFF,?*&laW39G6ku/f,/J
P:/W!qT-IpN$<eZ5]J>81JEL-m5pPRbk+`XPO/00:K+pp1/-.aeMSj5AD3):a0aq4
:6O]B4&?U7rCbS8*@=e5P1:!6`j8kq7AFsA*sL(JAN*;I'l@2OeeO0S=&mbp2bqKE
qm/[?FB(l/c0HY8/5C68lUfWlTg;gaQ;KqP;K]pM'1sop7+PH'D,"J;(,[CK;RUR.
ESQm4c#_RhK`u0\[F>@Vd5;rMK%k3CH#H\a"T`UJp[.j"d^?`u6J@VtiEkA=U6'k"
&5B]7?P3fLE7n=d/W8F#<RjCnFS6)0i9HUDki$c&8V`e#:*k<a=6;6(hq/)5JOu4S
3GQ.OF+V6>NJh@H`:69W6!6(B@AE''-=oHr1?;kf3Qjl\KZ$n$Uu,htL5.m#RPpA5
iu21oRRfJg54*)GQ$f.)8&jAomHrlI\aG2amCS^3cLb0+S*<S\n.`E#AeY%H%=`>e
(BM<i]C,@*DYq04\i6+6/@@"_D_8K-S=\obmbE9_`p]F(s1rZE5?2ao1qu^^oS%3O
?1\>64E'f'hVHC'DP?=Pp`9NZCA=ALLZA1B@;R_5hJ\o]H6/,Geb+;;UZhO1FN*?e
*_2.J[pBTa.AgDF`Si`3s,$1=r`>NSPhs0Kl2$o7XndDL2n'QNL*+o&?OQ%@muY#C
!mEjKS-aaC.!!,U*&XCB&PU(D$:.O-"lR2!K2?F_\0pS,S.k^NE,H(MLarX-1_G<n
3X7p[>li\`<Ii&W(I5K5"(>.?JoI5f6<GlHi7&cFn9r3k(Z>o/F?UK0n6eSMEt-/@
21\T?W^'I2=q#+g5U2:A7FAR\irISf;2m@n1rQ7uUdT?`0heGlAsoD6@uM"O0#c<B
(/(_3-3mF2%p6:]7iZT.n]!:Q=%+"VXD*YeNP\07]c5DLKGp!ZD9)au*TP(a-1UOg
8,2Br,a=%'nf^7hW>?dYXDW,W_Epgc/LD[cRO3`eI7m^[/W^h>QW!0nbLq8'joiL>
;\!7FBoOjdPf]=g]pD9t`j;4`b*c0LA'@N$0P1a-QdY;-TK-pLh;M"mPC?aY3Opc>
e@h=b!c(IiWA197adJ)gB/HHM1hVd9(t5j/:9i,+7r7?01O=(7=i+'p$#2#&Oor8$
(-JD![2-,EMEdMu1R<+XU6JO/a_DmZi&PJE76VQPRM&e^71F:e5)?cW2all:oU_e'
N5#^+/SOL$U[D<IQ:aVMii0(hAGME0F*'4<77hc(`NN3$CA(t68Z='$?8Xcu]Z;rt
-aaZS<-k>rWa"tenh-iQlD%GGUEL_EB_U&/+BjcsrYbCS\lKWR=Q<CmH*8^/=%W=.
W',#C'u8L(.f(seZd,`d'"nWeq-iUbZEQ4mMc`>F@B8dPH+#=9f\7KTCl,-sG#4'!
@l%^IW[t-,\s^e8Pl>LtI[tW^Z!'IMBoL$0Y'+JW=i]i@O_':cp4UZD4)@<%_"Y<=
,1T^DANao4(:[EWbZnqD6gd[l\!HjT>nef2m@BEK[p4gHRFcD\h9Vi3^%beMkB.$C
f"?Yko1b.jF)/JSXI$5k>T4i2D&)*FA4l^B)t&E^>-53>df*9_rFdkg`P>Rc\!AN(
H0d]YWOG5!f=W2AVT#nmGZ+ZPCC>kJc1nPFlFc*1*Ja*4&\>JJ&eNh+0JGO&_'4L8
h;g#00b*-\Gh24jCG1Ps:'eD_DY:&'@>lf[1;5`s+qUhn3Ut6+a*@=p?L4GKE"57X
\'lR*I$&=:<L^sn1G7bsiI%sL"3UFM>@kENO+k#-QoKo#B,nunn@eP53MtZq]/uL"
Q2f&F9/1)=&Y/J79#!AArT*;!S$J?!ce:`#kq#o40lE;l\gIbs]P"!]E<am[-QQa0
=e51RhpGTq+_TV0U[p(JbkEnhB!"@g2&6\OR"JRS*GqqO<k5bEmgX%.SZHi1Z^;X"
VsK!GWq/]nd(96Ell80mnW'KhHD>6drNWO`DNic+F)POd_3ajJN7e#lJSon*K!g@#
bLsW[D/J[60&s"Y)=)#&?)tXpQHHgE"%-;kTq6FhkLtR_KQ*I_M=_RSh)^%.jOIP"
pO<%qS,7nUc5F)NG5BZ,MbRh)s0fEFWo/7pM=Fm;a`u+4b?DN*D#RGUFO'j<*5@L!
mQ77irg2ggZ_;/`M9bis4l)YV;<of,]QHF0hOQklo?;KoHD\REgCo2*D@a^4k'#qD
LMulL_q$ag>26fhY@Z"/gUDrLhHcb,G>=pbqc^,_*TN9+/kO%Q5<7I](N&em6eaPD
K]kOZU%=3PUjQf0E;\%_pTCj[3o?7D*b2-gcDARo(J=7(1Wjh.7@$(a?17aHaD\g@
iOl@MbhajlH<uTqqF@OM]1:0:/e,c[[smu+"0)2N`UQ#;`pDS-[!MZ7g:h6nn:*g7
q<m;,4.k*t5@`2kY>t<YcdM93;ni5`2=J1r_"%Fd[f2<qpcLQ5coth2q_+9/O6H-f
m.To;pFl1!&,><`r:fZIr3*Qg%uTMQP5W`Ar/ZI-c\DQ4UB45kpJ#c(NUHnP0*1JH
rD,WUO$a#oQNRdnn]cUXY#as#>0LoM!K[<a&"`r"]*-Hp"V8KS:);t%)S<-o"L'la
Y^kf]K]Nc$mdLGRO)Xd=P6I&7"jOX`%[RApRaj*,r\-b>E,bf\FT!nS"Y^GV0G<no
i:BGIo8km*mVL\*.1K)i$d`epNbJt7-OOh@pTWrmL;=>GG7:^*%.ABNYX8ohcO=a\
#LDrin+QBlqZ>-\%hKrr:cf6857nH1r_Qr%05V%-$OT`g"`ZO0YrrHa5mB!U#&L=J
YlJS0"UpMJ#n]f90/ElO"UM@'qJbI1&Tm/4GnTXq%rlLo;0*&+G6uY7!0J9%d3/N&
,m(77lk*;,0j>$&*>fBR(f?\,d;'0<UC@g5%Zr1RnA>6'RhS_l'TpEIn]MHjcP9=+
'JQoeYdk6`jVk<)*jJiQO^,ti\I-V\$P-;[n=q'Zq&V7()U\L&&ciqG2]kp:+0dC,
nV\&8h\1#J'<o4l&haf9_[s+4'[f&X&jIG#6Pbh@(=Ghl&D%aP2]-QhrGd<2P!'CR
1E7$3*'sH704>K5q"lgJ&[H<uEe>9kB-G]]):FQ_n>R9\#mmmH$1\ZBEYU&9:F]4?
+L/*mnZs;L[jMec-W"k3P&2&a?PsJd)mX)qnTuiC2(.pj.5B'qE#fO2d00$4/TRU<
ZDSR\WuZ5a*O<")d^LnC]./uY.al3X1<1gPkS3V;18drfP;+jL1fahb1:&JPdiU(R
,:cYe6F/g1P:n_5<AS\X2"O!W1;tGV<#lWd2PHm(o5IBS;`AcB;^V`-o78kHr_g(J
2h]:3'6,q:CClUM/q[(_;e\6*D`:UP'f17t;mACf1HM4.3:it-!RWoiTHC'i*E13F
kPc:heNI>N4gWp;5ug*)jZ[bM5-sW?KZ-+'h*#i1J+LuKk;OM7C3)l'5P*,_1\_dX
of]Y?54fj]oC,E&()A_>(\@Sje,pmgi[?7s*V;K^kAI?ZS:@mq(UQn)oMJ%6<CM".
6Ds]K7rLce5+IL&dF:.FoOUD>6EB`M5r;_7oRTG1>^_iEF4>4NoOt0TO[eSR8G%)*
<-pioK1^6:88#P*V^G%-P$8DG?DFkf8LPMl`Cs^D9XN&<o[-AieP-au9PGn87W:VH
Y%MjfC;QiMA(=6Z"\lAC9m$>0o[?TeYta7u:+9`4!ePs_I%g1m2i7W5oc[3^HoI:M
U#UNXPdq8J'2]su;.CD>UM3V+79"CY7l;hU<A@761a1":.Hh87WP1+[AQEqe/p1Qf
kRK1DCK4g[<MB:iokp)'CKP_9==J#e,/mW+GW"d>=gaf'opo5p=]uQ>>.(D7<O#ac
[9Ida>ID.Km,B-1~>

Q
n
Q
n
194.913 109.548 m
183.933 98.595 l
189.414 98.595 l
189.414 47.799 l
200.403 47.799 l
200.403 98.595 l
205.893 98.595 l
194.913 109.548 l
0.72 302.274 m
388.098 302.274 l
388.098 1.494 l
0.72 1.494 l
0.72 302.274 l
q
eoclip
n
200.403 80.172 m
200.403 80.172 l
200.403 68.22 l
200.403 68.22 l
200.403 80.172 l
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 3
/Height 52
/ImageMatrix [4.17336 0.0 0.0 -4.18335 -835.338 336.374] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J1[Efp`pUX[Xu>gE0bkm)%D;:@F3)c8g=[r73_4lXC<7lN^i"?R'`#>)O!^'1-#2h
5qJ6nATIUB\ns6mbbnAWjHb!RT#p113Y`E15GLn#P^3`N!W~>

Q
n
n
189.414 80.172 m
188.415 80.172 l
188.415 68.22 l
189.414 68.22 l
189.414 80.172 l
q
W
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 6
/Height 52
/ImageMatrix [4.17336 0.0 0.0 -4.18335 -785.338 336.374] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J2uO]p`pUa"C"3#:3\lYT*\^giQuh&8gae"^uFj><,+?0L.:.lfaN=$,*BfRd<Pkh
>9]EUV,CH,SmaOF7AhoNSAo>#QVJq"WZ:RM5+^-#1^UiNG;Q/D.PtgU,*,?se#9Y]
bt>TIMH248.h-6k>d;t_p5:MKdr)VH+Ot7Uat[G;hCeN&Xg7PGZG8^~>

Q
n
Q
n
189.417 47.7985 m
189.417 98.5951 l
183.932 98.5951 l
194.915 109.551 l
205.897 98.5951 l
200.399 98.5951 l
200.399 47.7985 l
h
<</PatternType 1 /PaintType 1 /TilingType 2
/XStep 32767 /YStep 32767 /BBox [-0.000000180969 -0.00426389 1176.14 712.469]
/PaintProc {pop
[/DeviceRGB] cs
10 dict dup begin
/NumSamples 256 def
/NumComp 3 def
/Scaling [[ 0.00392157 0.0 ] [ 0.00392157 0.0 ] [ 0.00392157 0.0 ] ] def
/Samples [
<~USFW\V5C,fW2Q\pWiN2%Xf\b/YHY79ZEggC['d<M\$rlW\[oAa]Y(qk^;%Fu^qde&
_SX4.`5KX6`Q#p<a2l?Dai_cKbKJ,Rc-=PZcd0qad*^7hdaQ[peCE+"f%/I)f\"m1
g=k98gYCT?h;7#Ghr!AMiSieUj5]4]jlGL_j5T(WiS`YOhr!;Ih;-lAgY:H9g=b03
f[na+f%&=$eC;srdaHOjd*U+bcd'h\c-4DTbK@uMaiVWFa2c3>`Pog7`5BL0_SO((
^qd_"^:h4m]Xtbd\[]/Y\$i]P['R*EZE^X<YHG%1XfSS(Wi;trW2HMiV50o^~>
<~`5KU5`Poj:a2c6AaN2KFb0%lMbKJ,Rc-=MYcHjh_d*U.edF-Ike'ldqeCE+"e^i=&
f@SX,f\"j0g"G*5g=tB:gYCT>h;-oDhVR,Hhr!AMi8NYRiSrkVj5]1\jQ,C`jlPXe
k3(pjkNM-nl07HtlK[[#lg*p(m-X3-mHs<.m-O*)lg*j$lK[Wul0.?pkND$kk2tgf
jlPRajQ,@]j5T(XiSibSi8EPNhr!;IhVR)Eh;$f@gY:K;g=k96g"G$1f\"g-f@JO(
e^`4#eC;sre'c[mdF$=fd*L%acHa\Zc-4DTbKJ&Nb/qcHaN2EBa2Z-<`Pod6~>
255
] def
end

121.12 58.116 154.12 58.116 [ ] true true []
 GenStrips
} bind >> [0.329364 0.0 0.0 0.422163 0.72 1.4958] makepattern
setpattern
eofill
n
189.417 47.7985 m
188.917 47.7985 l
188.917 98.0966 l
182.726 98.0966 l
194.915 110.256 l
207.103 98.0966 l
200.899 98.0966 l
200.899 47.2999 l
188.917 47.2999 l
188.917 47.7985 l
189.417 47.7985 l
189.417 48.297 l
199.899 48.297 l
199.899 99.0936 l
204.691 99.0936 l
194.915 108.846 l
185.139 99.0936 l
189.916 99.0936 l
189.916 47.7985 l
189.417 47.7985 l
189.417 48.297 l
189.417 47.7985 l
h
[/DeviceRGB] cs 0.29 0.494 0.733 sc
f
n
3.21599 252.982 m
3.21599 253.481 l
77.5959 253.481 l
77.5959 291.328 l
3.71568 291.328 l
3.71569 252.982 l
3.21599 252.982 l
3.21599 253.481 l
3.21599 252.982 l
2.71629 252.982 l
2.71629 291.827 l
2.71629 291.958 2.76961 292.087 2.86265 292.179 c
2.9557 292.272 3.0844 292.325 3.21599 292.325 c
78.0956 292.325 l
78.2272 292.325 78.3559 292.272 78.449 292.179 c
78.542 292.087 78.5953 291.958 78.5953 291.827 c
78.5953 252.982 l
78.5953 252.851 78.542 252.723 78.449 252.63 c
78.3559 252.537 78.2272 252.484 78.0956 252.484 c
3.21599 252.484 l
3.0844 252.484 2.95569 252.537 2.86265 252.63 c
2.7696 252.723 2.71629 252.851 2.71629 252.982 c
3.21599 252.982 l
h
[/DeviceGray] cs 0.0 sc
f
q
1.33119 0.0 0.0 1.32802 0.72 1.4958 cm
11.425 198.04 m
%ADOBeginSubsetFont: BKOAAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/BKOAAA+#cb#ce#cc#e5 2 GetGlyphDirectory
11096 <001C60D8A8C9B5EE310352EECF602406C0329E1B650528DB4C10B129B
B86AB3C12935CB6FB7137A27A4BA4BEB46A65DAD78F0FC83B360EEE112A00729
2C14046865AC11FD747B83592CED2A9798B5E7F999C0B72B9FFCC81D6B07E08B
CC2AFD5046782CD40247B02D8BCF5AD3D0A43FB505FDE2790A26E7F423F822EF
6D6BC83B41D215AFC9F44E868233463428F43C15281F7CC4D598C4E4BB7A2DA6
57DE7FFCE45F3A8E51DBF933AECA3DC21C0B57AA47644BA5C9C3507C529AD1B> |
6247 <001C60D8A8C9B5EE310366CF9D3A5DBD83A75670FEE48A3F8FEFF4DF41
93AE7D98511713F65390FE7080FDFFBDED5662811A0279E6671728A48D54AD8C
AB68295833563AC29DB1C3B822C342CB2FFC1C9A7FC090887B43462A76FF0798
832CCC37B55D693396FF239F2E28174AC2D9D2C5EF8AB7948029B238E96677E1
DC27E442AB952DB067683A7DD4C21A> |
!
end
end end
%ADOEndSubsetFont
/N6 18.05 Tf
(+X\030g)
[18.05 18.05 ] pdfxs
0.751205 0.0 0.0 0.753002 -0.540868 -1.12634 cm
Q
n
311.727 257.962 m
311.727 258.461 l
386.107 258.461 l
386.107 296.308 l
312.227 296.308 l
312.227 257.962 l
311.727 257.962 l
311.727 258.461 l
311.727 257.962 l
311.227 257.962 l
311.227 296.807 l
311.227 296.938 311.28 297.067 311.373 297.159 c
311.467 297.252 311.595 297.305 311.727 297.305 c
386.607 297.305 l
386.738 297.305 386.867 297.252 386.96 297.159 c
387.053 297.067 387.106 296.938 387.106 296.807 c
387.106 257.962 l
387.106 257.831 387.053 257.703 386.96 257.61 c
386.867 257.517 386.738 257.464 386.607 257.464 c
311.727 257.464 l
311.595 257.464 311.467 257.517 311.373 257.61 c
311.28 257.703 311.227 257.831 311.227 257.962 c
311.727 257.962 l
h
f
q
1.33119 0.0 0.0 1.32802 0.72 1.4958 cm
243.8 201.62 m
%ADOBeginSubsetFont: BKOAAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/BKOAAA+#cb#ce#cc#e5 2 GetGlyphDirectory
7735 <001C60D8A8C9B5EE31038D5D1282FB89803D0087920CA8DCC3E5AFABBC
F7429D831100F27506BB16F9E1F042F1F730F5F500B574B73F4A1E36E1EAC355
A5AD2690B1A571BDB605775087D72913AC03EAF034645F238B447D9EA1342D51
156432BFD7CBE8FBCE339ACA50B3098B754CA1E663FC45C6A093E249B9D3326E
DE71AAA13E2592857B63843669CF83A3C04BD2C728C30F751D66B59CE47F9E36
626D9B7F575248AB41B795F2C716C91ADD762963F474308808B64BE37A320D15
D1B00F3E72596219B156353984A12844231958B3883FF500F227412EF331833F
D21502C4DCD00CD97EA10EBD82B12A0E439DB35A17B4B804DEB4F55BF2D4FC71
2A216707BF4F8E59A186F37A243E6EABD872> |
12718 <001C60D8A8C9B5EE310D3F34C66D523A298ABF9444843A8212E96AAF7
D5F36A9845A76ACE57A137FB680CD324E21C7FB5F4DACA79EB959F459D61FBD6
978237227ACB89714F95837E249F71256E7E3514187DCA115F19E4F6C67125DF
23BB149F1311A0772A39F6C1A9AC2BBEE8E98212E09A257586CA1FCEB8DFC398
3D2F4E3BE26974D960645295FB0EB79B1F44D54C71E2A0A92B36DDFBE5FC5610
9B56D092316B0A02D3B7C159E1703AEEAF5E3CA938814A303B647A9F44CFE883
041FC74A052881708A89B0119E8A0DBF9C9A420AE7FEBFE341E0C0D71BA31E33
D3C8EC78C5F67743919E6095F90ED2D9D50B505C501A382382AED42FDC8BAA97
0319A5AE94F07558CF6665E5E32FA42B6C97413DB8593F9C6D28A820D92755B3
745599F9EB4138D74FF373E24889DC39C61E9227818DA3450932FC462B9BE425
0466449782F399F6FF9BDB3930D3407011DB6E2D47924A44B90323FE9158CF10
7D15114674C81970BC69814F43780398EC3DB05B7F238ADAE91418A5AC259C14
F783EB2A51965A7C866FB5FDC5E54EC3173A861CE5AA89C9B6ACCE1F777C7688
42D53E7C02E411467675C3D64714199B35E63AA757D9F943303FE568436A4E1C
681B2CFD985AB1FB90FCBC6197FDDD94D9A7A795F7FA81B03B359> |
!
end
end end
%ADOEndSubsetFont
/N6 18.075 Tf
(\03671\256)
[18.0499 18.0499 ] pdfxs
0.751205 0.0 0.0 0.753002 -0.540868 -1.12634 cm
Q
n
159.971 2.97773 m
159.971 3.47624 l
235.349 3.47624 l
235.349 41.3237 l
160.47 41.3237 l
160.47 2.97773 l
159.971 2.97773 l
159.971 3.47624 l
159.971 2.97773 l
159.471 2.97773 l
159.471 41.8222 l
159.471 41.9535 159.524 42.0819 159.617 42.1747 c
159.71 42.2676 159.839 42.3207 159.971 42.3207 c
235.849 42.3207 l
235.98 42.3207 236.109 42.2676 236.202 42.1747 c
236.295 42.0819 236.348 41.9535 236.348 41.8222 c
236.348 2.97773 l
236.348 2.84646 236.295 2.71807 236.202 2.62524 c
236.109 2.53242 235.98 2.47923 235.849 2.47923 c
159.971 2.47923 l
159.839 2.47923 159.71 2.53241 159.617 2.62524 c
159.524 2.71806 159.471 2.84646 159.471 2.97773 c
159.971 2.97773 l
h
f
q
1.33119 0.0 0.0 1.32802 0.72 1.4958 cm
130.1 8.9409 m
%ADOBeginSubsetFont: BKOAAA+#cb#ce#cc#e5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
/BKOAAA+#cb#ce#cc#e5 2 GetGlyphDirectory
13780 <001C60D8A8C9B5EE31029E3CD651EFB555BD1480EBC3808F0EA933F4C
3B194407F236613C6B9AC99445D193BE900525BA2078BEC2A0B05F7647FBA117
E5EB8D88EC8BCB372512F928C00464D8184E610D88C966ECA9A9A26DC7032C66
FD8ADCEAFF1B8C733372E13F80EE8BB62733CA2E2BF7495340C35F34711528F6
BD5DC626375651406DF427193AE5391667FF241BB31B0721F5A59EFCFEC56411
B85DAFE0FA45AD94732AE03C0D35EE3FB5E0EA42C5DCD4DC706D45B14F4AD9DD
938BF1D08982BCDB3555A6F4FDA6A9474781454521A4D1622E5B18B4DA43C1E0
357243F2FBF1235AE96A0530C451DF2B90711F43F2B1611499F7769252739AB6
AC72A643891FB6F5471CF881698BB59EFEE6DEC5A5B24598E7B8E9CB8AE6DEED
40A80E51AE695697EC12F87EB4FA59DF2224D22A3799FF1FDA8D898A1010ED99
AA71CE0ED85EBF104D01A56D224F0B0CE5B10965D5661CB4C325A2855148AFEC
EF9A761A0F7E10F0546490A00A595C11A39CCECC9A50EBB49F5370CC4E4E8B49
6855676717FB4EDDC2DE2E798A5393C14F3A82134EAD28CE6> |
13556 <001C60D8A8C9B5EE310DEF4F58DE0CECC2D32BF0F5229563A1E0D5622
744600700EDC9813BFB959B52C8096A8826F46E611405F5DF6E964FD9D13C8E6
A3540AD604714722B13FBE64F3FB15F2CCD3C50415E6BA0FF721461DCFF58395
997D2B3E7F7A1F49C754D06447342548FA1B6F9BB10C0C259D202E3A4C86B843
2D16F469690AC0CB1654252B60890AFE0942B62D7F9A60AD66378210B47756D5
4BFA0D2EE320FC902EFE42A947B160E6C29EC050EA7D01D4CCBF5F8210B1D04F
C70A39CB171D882A2081BF2CE69D3BD7653E0D358EDD584856604F5972211B5D
E1E8CCA1036358356069D76B2A7E56D00A9663D73A5B682590F9F5652BCDBB3E
43AEEA82609357545251FF3348ADFE5F5> |
!
end
end end
%ADOEndSubsetFont
/N6 18.05 Tf
(5\3244\364)
[18.05 18.05 ] pdfxs
0.751205 0.0 0.0 0.753002 -0.540868 -1.12634 cm
Q
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
